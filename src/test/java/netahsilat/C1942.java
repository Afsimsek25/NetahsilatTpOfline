package netahsilat;

import io.testproject.addon.CombinedActions;
import io.testproject.addon.WebExtensions;
import io.testproject.addon.WebListOperations;
import io.testproject.sdk.drivers.ReportingDriver;
import io.testproject.sdk.drivers.web.RemoteWebDriver;
import io.testproject.sdk.interfaces.junit5.ExceptionsReporter;
import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;

import java.util.concurrent.TimeUnit;
import java.util.stream.Stream;

/**
 * This class was automatically generated by TestProject
 * Project: Quality Museum Project
 * Test: C1942 Bayi kullanıcısı güncelleme
 * Generated by: Ahmet Furkan SIMSEK (furkan.simsek@qualitymuseum.com)
 * Generated on Fri Oct 07 10:59:40 GMT 2022.
 */
@DisplayName("C1942 Bayi kullanıcısı güncelleme")
public class C1942 implements ExceptionsReporter {
  public static WebDriver driver;

  @BeforeAll
  static void setup() throws Exception {
    driver = new RemoteWebDriver("wThDxIHw4zNaCydjAhcfe81WrQPYlMBFI7FPwUwV8M41", new ChromeOptions(), "Ahmet Furkan SIMSEK");
  }

  /**
   * In order to upload the test to TestProject need to un-comment @ArgumentsSource and set in comment the @MethodSource
   * @org.junit.jupiter.params.provider.ArgumentsSource(io.testproject.sdk.interfaces.parameterization.TestProjectParameterizer.class) */
  @DisplayName("C1942 Bayi kullanıcısı güncelleme")
  @ParameterizedTest
  @MethodSource("provideParameters")
  void execute(String ApplicationURL, String userName, String password) throws Exception {
    // set timeout for driver actions (similar to step timeout)
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);
    By by;
    boolean booleanResult;
    MethodLogoutlogin methodlogoutlogin;
    WebExtensions.SelectOptionbyVisibleText selectOptionbyVisibleText;
    CombinedActions.ClearAndTypeAction clearAndTypeAction;
    WebListOperations.GetTextFromSelectedItem getTextFromSelectedItem;

    // 1. Run Method Logout&Login
    GeneratedUtils.sleep(500);
    methodlogoutlogin = new MethodLogoutlogin();
    methodlogoutlogin.ApplicationURL = ApplicationURL;
    methodlogoutlogin.userName = ProjectParameters.genelEmail;
    methodlogoutlogin.password = ProjectParameters.genelPassword;
    methodlogoutlogin.execute(driver);

    // 2. Move mouse to 'moveUstUyeYonetimi'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("li[class='content']");
    (new Actions(driver)).moveToElement(driver.findElement(by)).perform();

    // 3. Click 'moveUstUyeYonetimi'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("li[class='content']");
    driver.findElement(by).click();

    // 4. Click 'altUyeYonetimi'
    GeneratedUtils.sleep(500);
    by = By.xpath("//li[1]/a[. = 'ÜYE YÖNETİMİ']");
    driver.findElement(by).click();

    // 5. Type '761624' in 'SearchVendorNameVN'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#SearchVendorName");
    driver.findElement(by).sendKeys("761624");

    // 6. Click 'Bireysel Ana Bayi'
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(35000, TimeUnit.MILLISECONDS);
    GeneratedUtils.sleep(500);
    by = By.xpath("//div[contains(text(),'76162482466')]  ");
    driver.findElement(by).click();
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 7. Click 'btnListele'
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(35000, TimeUnit.MILLISECONDS);
    GeneratedUtils.sleep(500);
    by = By.xpath("//button[. = 'Listele']");
    driver.findElement(by).click();
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 8. Is 'BireyselAnaBayi' visible?
    GeneratedUtils.sleep(500);
    by = By.xpath("//td[. = 'BireyselAnaBayi'][1]");
    driver.findElement(by).isDisplayed();

    // 9. Click 'KullanıcılarıGörüntüleImage'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("img[src*='fugue/detail.png']");
    driver.findElement(by).click();

    // 10. Click 'StartsWith Özge : Parenth Pencil'
    GeneratedUtils.sleep(500);
    by = By.xpath("//td[text()='Özge Güngördü']/..//img[@src='/NetahsilatGoldAdmin/Content/images/icons/fugue/pencil.png']");
    driver.findElement(by).click();

    // 11. Does 'Bayi Adi' contain 'Özge'?
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#Entity_Name");
    Assertions.assertTrue(driver.findElement(by).getText().contains("Özge"));

    // 12. Run Clear 'Entity.Email' contents and type 'c1942@test.com'
    GeneratedUtils.sleep(500);
    clearAndTypeAction = CombinedActions.clearAndTypeAction("c1942@test.com");
    by = By.cssSelector("#Entity_Email");
    clearAndTypeAction = (CombinedActions.ClearAndTypeAction)((ReportingDriver)driver).addons().execute(clearAndTypeAction, by, -1);

    // 13. Run Clear 'Entity.MobilePhone' contents and type '5536665544'
    GeneratedUtils.sleep(500);
    clearAndTypeAction = CombinedActions.clearAndTypeAction("5536665544");
    by = By.cssSelector("#Entity_MobilePhone");
    clearAndTypeAction = (CombinedActions.ClearAndTypeAction)((ReportingDriver)driver).addons().execute(clearAndTypeAction, by, -1);

    // 14. Run Clear 'Entity.Code' contents and type '856974556'
    GeneratedUtils.sleep(500);
    clearAndTypeAction = CombinedActions.clearAndTypeAction("856974556");
    by = By.cssSelector("#Entity_Code");
    clearAndTypeAction = (CombinedActions.ClearAndTypeAction)((ReportingDriver)driver).addons().execute(clearAndTypeAction, by, -1);

    // 15. Select options in 'Entity_SelectedCountry' with text '[NONE]'
    GeneratedUtils.sleep(500);
    selectOptionbyVisibleText = WebExtensions.selectOptionbyVisibleText("Japan");
    by = By.cssSelector("#Entity_SelectedCountry");
    selectOptionbyVisibleText = (WebExtensions.SelectOptionbyVisibleText)((ReportingDriver)driver).addons().execute(selectOptionbyVisibleText, by, -1);

    // 16. Run Clear 'Entity.PassportNumber' contents and type '12300654'
    GeneratedUtils.sleep(500);
    clearAndTypeAction = CombinedActions.clearAndTypeAction("12300654");
    by = By.cssSelector("#Entity_PassportNumber");
    clearAndTypeAction = (CombinedActions.ClearAndTypeAction)((ReportingDriver)driver).addons().execute(clearAndTypeAction, by, -1);

    // 17. Select options in 'Language' with text '[NONE]'
    GeneratedUtils.sleep(500);
    selectOptionbyVisibleText = WebExtensions.selectOptionbyVisibleText("English");
    by = By.cssSelector("#Entity_LanguageId");
    selectOptionbyVisibleText = (WebExtensions.SelectOptionbyVisibleText)((ReportingDriver)driver).addons().execute(selectOptionbyVisibleText, by, -1);

    // 18. Click 'Aktif mi Check'
    GeneratedUtils.sleep(500);
    by = By.xpath("(//label[text()='Aktif mi?']/..//following::span//span//img[@src])[1]");
    driver.findElement(by).click();

    // 19. Click 'Tamam1'
    GeneratedUtils.sleep(500);
    by = By.xpath("//button[. = 'Tamam']");
    driver.findElement(by).click();

    // 20. Does 'Özge Güngördü1' contain 'Özge Güngördü'?
    GeneratedUtils.sleep(500);
    by = By.xpath("//td[text()='Özge Güngördü']");
    Assertions.assertTrue(driver.findElement(by).getText().contains("Özge Güngördü"));

    // 21. Does 'c1942@test.com' contain 'c1942@test.com'?
    GeneratedUtils.sleep(500);
    by = By.xpath("//td[. = 'c1942@test.com']");
    Assertions.assertTrue(driver.findElement(by).getText().contains("c1942@test.com"));

    // 22. Click 'StartsWith Özge : Parenth Pencil'
    GeneratedUtils.sleep(500);
    by = By.xpath("//td[text()='Özge Güngördü']/..//img[@src='/NetahsilatGoldAdmin/Content/images/icons/fugue/pencil.png']");
    driver.findElement(by).click();

    // 23. Does 'Entity.Email' contain 'c1942@test.com'?
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#Entity_Email");
    Assertions.assertTrue(driver.findElement(by).getText().contains("c1942@test.com"));

    // 24. Does 'Entity.MobilePhone' contain '(553)6665544'?
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#Entity_MobilePhone");
    Assertions.assertTrue(driver.findElement(by).getText().contains("(553)6665544"));

    // 25. Is 'SelectedCountry = JP and selected' visible?
    //    SelectBox Japan seçili olduğu teyit edilir.
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#Entity_SelectedCountry>option[value='JP'][selected=\"selected\"]");
    driver.findElement(by).isDisplayed();

    // 26. Does 'Entity.PassportNumber' contain '12300654'?
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#Entity_PassportNumber");
    Assertions.assertTrue(driver.findElement(by).getText().contains("12300654"));

    // 27. Does 'Entity.Code' contain '856974556'?
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#Entity_Code");
    Assertions.assertTrue(driver.findElement(by).getText().contains("856974556"));

    // 28. Retrieves the text of the currently selected option of a select element
    GeneratedUtils.sleep(500);
    getTextFromSelectedItem = WebListOperations.getGetTextFromSelectedItem();
    by = By.cssSelector("#Entity_LanguageId");
    getTextFromSelectedItem = (WebListOperations.GetTextFromSelectedItem)((ReportingDriver)driver).addons().execute(getTextFromSelectedItem, by, -1);

    // 29. Is 'Aktif mi Check' visible?
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(2000, TimeUnit.MILLISECONDS);
    GeneratedUtils.sleep(500);
    by = By.xpath("(//label[text()='Aktif mi?']/..//following::span//span//img[@src])[1]");
    driver.findElement(by).isDisplayed();
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

  }

  @Override
  public ReportingDriver getDriver() {
    return (ReportingDriver) driver;
  }

  @AfterAll
  static void tearDown() {
    if (driver != null) {
      driver.quit();
    }
  }

  private static Stream provideParameters() throws Exception {
    return Stream.of(Arguments.of("https://otomasyon.netahsilatdemo.com/Account/LogOff","otomasyon@test.com","Kd!cyhz4"));
  }
}
