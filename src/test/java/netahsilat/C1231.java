package netahsilat;

import io.testproject.addon.WebExtensions;
import io.testproject.sdk.drivers.ReportingDriver;
import io.testproject.sdk.drivers.web.RemoteWebDriver;
import io.testproject.sdk.interfaces.junit5.ExceptionsReporter;
import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import java.util.concurrent.TimeUnit;
import java.util.stream.Stream;

/**
 * This class was automatically generated by TestProject
 * Project: Quality Museum Project
 * Test: C1231 Bayi ve müşterilere uyruk durumuna göre Pasapartno tanımlanması (NTH-6560)
 * Generated by: Ahmet Furkan SIMSEK (furkan.simsek@qualitymuseum.com)
 * Generated on Thu Oct 06 07:04:17 GMT 2022.
 */
@DisplayName("C1231 Bayi ve müşterilere uyruk durumuna göre Pasapartno tanımlanması (NTH-6560)")
public class C1231 implements ExceptionsReporter {
  public static WebDriver driver;

  @BeforeAll
  static void setup() throws Exception {
    driver = new RemoteWebDriver("wThDxIHw4zNaCydjAhcfe81WrQPYlMBFI7FPwUwV8M41", new ChromeOptions(), "Ahmet Furkan SIMSEK");
  }

  /**
   * In order to upload the test to TestProject need to un-comment @ArgumentsSource and set in comment the @MethodSource
   * @org.junit.jupiter.params.provider.ArgumentsSource(io.testproject.sdk.interfaces.parameterization.TestProjectParameterizer.class) */
  @DisplayName("C1231 Bayi ve müşterilere uyruk durumuna göre Pasapartno tanımlanması (NTH-6560)")
  @ParameterizedTest
  @MethodSource("provideParameters")
  void execute(String ApplicationURL, String userName, String password) throws Exception {
    // set timeout for driver actions (similar to step timeout)
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);
    By by;
    boolean booleanResult;
    MethodLogoutlogin methodlogoutlogin;
    WebExtensions.SelectOptionbyVisibleText selectOptionbyVisibleText;

    // 1. Run Method Logout&Login
    GeneratedUtils.sleep(500);
    methodlogoutlogin = new MethodLogoutlogin();
    methodlogoutlogin.ApplicationURL = ApplicationURL;
    methodlogoutlogin.userName = ProjectParameters.genelEmail;
    methodlogoutlogin.password = ProjectParameters.genelPassword;
    methodlogoutlogin.execute(driver);

    // 2. Move mouse to 'moveUstUyeYonetimi'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("li[class='content']");
    (new Actions(driver)).moveToElement(driver.findElement(by)).perform();

    // 3. Click 'moveUstUyeYonetimi'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("li[class='content']");
    driver.findElement(by).click();

    // 4. Click 'altUyeYonetimi'
    GeneratedUtils.sleep(500);
    by = By.xpath("//li[1]/a[. = 'ÜYE YÖNETİMİ']");
    driver.findElement(by).click();

    // 5. Click 'ddYeniUyeTanimi'
    GeneratedUtils.sleep(500);
    by = By.xpath("//div[2]/div/img");
    driver.findElement(by).click();

    // 6. Move mouse to 'ddYeniUyeTanimi'
    /* Step is disabled
    GeneratedUtils.sleep(500);
    by = By.xpath("//div[2]/div/img");
    (new Actions(driver)).moveToElement(driver.findElement(by)).perform();
    */
    // 7. Click 'Yeni Müşteri Tanımla'
    GeneratedUtils.sleep(500);
    by = By.xpath("//a[. = 'Yeni Müşteri Tanımla']");
    driver.findElement(by).click();

    // 8. Is 'Uyruklar' visible?
    GeneratedUtils.sleep(500);
    by = By.xpath("//label[. = 'Uyruklar']");
    driver.findElement(by).isDisplayed();

    // 9. Is 'Entity.SelectedCountry' is clickable?
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#Entity_SelectedCountry");
    (new WebDriverWait(driver, 15)).until(ExpectedConditions.elementToBeClickable(by));

    // 10. Select options in 'Entity.SelectedCountry' with text '[NONE]'
    GeneratedUtils.sleep(500);
    selectOptionbyVisibleText = WebExtensions.selectOptionbyVisibleText("Spain");
    by = By.cssSelector("#Entity_SelectedCountry");
    selectOptionbyVisibleText = (WebExtensions.SelectOptionbyVisibleText)((ReportingDriver)driver).addons().execute(selectOptionbyVisibleText, by, -1);

    // 11. Does 'Pasaport Numarası' contain 'Pasaport Numarası'?
    GeneratedUtils.sleep(500);
    by = By.xpath("//label[. = 'Pasaport Numarası']");
    Assertions.assertTrue(driver.findElement(by).getText().contains("Pasaport Numarası"));

    // 12. Is 'Entity.PassportNumber' visible?
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#Entity_PassportNumber");
    driver.findElement(by).isDisplayed();

    // 13. Select options in 'Entity.SelectedCountry' with text '[NONE]'
    GeneratedUtils.sleep(500);
    selectOptionbyVisibleText = WebExtensions.selectOptionbyVisibleText("Turkey");
    by = By.cssSelector("#Entity_SelectedCountry");
    selectOptionbyVisibleText = (WebExtensions.SelectOptionbyVisibleText)((ReportingDriver)driver).addons().execute(selectOptionbyVisibleText, by, -1);

    // 14. Does 'TCKN1' contain 'TCKN'?
    GeneratedUtils.sleep(500);
    by = By.xpath("//label[. = 'TCKN']");
    Assertions.assertTrue(driver.findElement(by).getText().contains("TCKN"));

    // 15. Is 'Entity.Tckn' visible?
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#Entity_Tckn");
    driver.findElement(by).isDisplayed();

    // 16. Type '11111111111' in 'Entity.Tckn'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#Entity_Tckn");
    driver.findElement(by).sendKeys("11111111111");

    // 17. Click 'FIELDSET4'
    GeneratedUtils.sleep(500);
    by = By.xpath("//form/div[1]/div/div[2]/fieldset[1]");
    driver.findElement(by).click();

    // 18. Is 'XButton' visible?
    GeneratedUtils.sleep(500);
    by = By.xpath("//*[@id=\"pTckn\"]/span");
    driver.findElement(by).isDisplayed();

    // 19. Click 'Vazgeç2'
    GeneratedUtils.sleep(500);
    by = By.xpath("//button[. = 'Vazgeç']");
    driver.findElement(by).click();

  }

  @Override
  public ReportingDriver getDriver() {
    return (ReportingDriver) driver;
  }

  @AfterAll
  static void tearDown() {
    if (driver != null) {
      driver.quit();
    }
  }

  private static Stream provideParameters() throws Exception {
    return Stream.of(Arguments.of("https://otomasyon.netahsilatdemo.com/Account/LogOff","otomasyon@test.com","Kd!cyhz4"));
  }
}
