package netahsilat;

import io.testproject.addon.CommunityExcelActionsforWindows;
import io.testproject.addon.VisibleElementsOperations;
import io.testproject.sdk.drivers.ReportingDriver;
import io.testproject.sdk.drivers.web.RemoteWebDriver;
import io.testproject.sdk.interfaces.junit5.ExceptionsReporter;
import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;

import java.util.concurrent.TimeUnit;
import java.util.stream.Stream;

/**
 * This class was automatically generated by TestProject
 * Project: Quality Museum Project
 * Test: C1227   Excel'e Aktarım bayi girişi ile (tutar ,komisyon oranları doğruluğu kontrol edilmeli)
 * Generated by: Ahmet Furkan SIMSEK (furkan.simsek@qualitymuseum.com)
 * Generated on Mon Oct 03 10:27:30 GMT 2022.
 */
@DisplayName("C1227   Excel'e Aktarım bayi girişi ile (tutar ,komisyon oranları doğruluğu kontrol edilmeli)")
public class C1227 implements ExceptionsReporter {
  public static WebDriver driver;

  @BeforeAll
  static void setup() throws Exception {
    driver = new RemoteWebDriver("wThDxIHw4zNaCydjAhcfe81WrQPYlMBFI7FPwUwV8M41", new ChromeOptions(), "Ahmet Furkan SIMSEK");
  }

  /**
   * In order to upload the test to TestProject need to un-comment @ArgumentsSource and set in comment the @MethodSource
   * @org.junit.jupiter.params.provider.ArgumentsSource(io.testproject.sdk.interfaces.parameterization.TestProjectParameterizer.class) */
  @DisplayName("C1227   Excel'e Aktarım bayi girişi ile (tutar ,komisyon oranları doğruluğu kontrol edilmeli)")
  @ParameterizedTest
  @MethodSource("provideParameters")
  void execute(String ApplicationURL, String userName, String password, String threeDaysAgo,
      String tutarColumnIndex, String tutarValue, String tutarBoluKomisyon, String rowIndex,
      String referansNO, String taksitMiktari, String ReferansColumnIndex,
      String ReferansColumnValue, String taksitColumnIndex, String taksitColumnValue) throws
      Exception {
    // set timeout for driver actions (similar to step timeout)
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);
    By by;
    boolean booleanResult;
    MethodRefreshLoadingControl methodrefreshloadingcontrol;
    MethodLogoutlogin methodlogoutlogin;
    CommunityExcelActionsforWindows.deleteFile deleteFile;
    VisibleElementsOperations.GetTextIfVisibleWeb getTextIfVisibleWeb;
    CommunityExcelActionsforWindows.returnColumnIndex returnColumnIndex;
    CommunityExcelActionsforWindows.readColumnValue readColumnValue;
    CommunityExcelActionsforWindows.waitUntilFileDownloaded waitUntilFileDownloaded;

    // 1. Run Method Logout&Login
    methodlogoutlogin = new MethodLogoutlogin();
    methodlogoutlogin.ApplicationURL = "https://otomasyon.netahsilatdemo.com/Admin/Account/Logout";
    methodlogoutlogin.userName = "bireyselanabayi@otomasyon.com";
    methodlogoutlogin.password = "Kd!cyhz4";
    methodlogoutlogin.execute(driver);

    // 2. Click 'YÖNETİCİ'
    by = By.xpath("//a[. = 'YÖNETİCİ']");
    driver.findElement(by).click();

    // 3. Move mouse to 'moveToIslemler'
    by = By.cssSelector("li[class='tag']");
    (new Actions(driver)).moveToElement(driver.findElement(by)).perform();

    // 4. Click 'İŞLEMLER1'
    by = By.xpath("//a[. = 'İŞLEMLER']");
    driver.findElement(by).click();

    // 5. Click 'İŞLEM LİSTESİ'
    by = By.cssSelector("a[title='İŞLEM LİSTESİ']");
    driver.findElement(by).click();

    // 6. This test was auto generated from steps of the 'C1909-Listelerde ki verilerin maskelenmesi' test
    methodrefreshloadingcontrol = new MethodRefreshLoadingControl();
    methodrefreshloadingcontrol.execute(driver);

    // 7. Move mouse to 'StartDate'
    by = By.cssSelector("#StartDate");
    (new Actions(driver)).moveToElement(driver.findElement(by)).perform();

    // 8. Clear 'StartDate' contents
    by = By.cssSelector("#StartDate");
    driver.findElement(by).clear();

    // 9. Click 'btnListele'
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(35000, TimeUnit.MILLISECONDS);
    by = By.xpath("//button[. = 'Listele']");
    driver.findElement(by).click();
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 10. This test was auto generated from steps of the 'C1909-Listelerde ki verilerin maskelenmesi' test
    methodrefreshloadingcontrol = new MethodRefreshLoadingControl();
    methodrefreshloadingcontrol.execute(driver);

    // 11. Get text from '1.referansOnGridIslemler' if it's visible
    getTextIfVisibleWeb = VisibleElementsOperations.getTextIfVisibleWeb("");
    by = By.cssSelector("#VPosTransactionGrid > table > tbody > tr:nth-child(1) > td:nth-child(29)");
    getTextIfVisibleWeb = (VisibleElementsOperations.GetTextIfVisibleWeb)((ReportingDriver)driver).addons().execute(getTextIfVisibleWeb, by, -1);
    referansNO = String.valueOf(getTextIfVisibleWeb.text);

    // 12. Delete File (if exist)
    //    C:\Users\testortak\Downloads\Islemler.xlsx
    deleteFile = CommunityExcelActionsforWindows.deleteFile("%USERPROFILE%\\Downloads\\Islemler.xlsx");
    deleteFile = (CommunityExcelActionsforWindows.deleteFile)((ReportingDriver)driver).addons().execute(deleteFile);

    // 13. Click 'Excel'e Aktar'
    by = By.cssSelector("#btnExport");
    driver.findElement(by).click();

    // 14. Wait Until The File is Downloaded
    waitUntilFileDownloaded = CommunityExcelActionsforWindows.waitUntilFileDownloaded("%USERPROFILE%\\Downloads\\Islemler.xlsx",60);
    waitUntilFileDownloaded = (CommunityExcelActionsforWindows.waitUntilFileDownloaded)((ReportingDriver)driver).addons().execute(waitUntilFileDownloaded);

    // 15. Get Excel Column Index
    //    Original comment: Referans Sütununun index numarasını al
    returnColumnIndex = CommunityExcelActionsforWindows.returnColumnIndex(1,"%USERPROFILE%\\Downloads\\Islemler.xlsx","Referans");
    returnColumnIndex = (CommunityExcelActionsforWindows.returnColumnIndex)((ReportingDriver)driver).addons().execute(returnColumnIndex);
    ReferansColumnIndex = String.valueOf(returnColumnIndex.Col);

    // 16. Read Excel Column
    //    Referans Sütununu oku
    readColumnValue = CommunityExcelActionsforWindows.readColumnValue(1,Integer.parseInt(ReferansColumnIndex),"%USERPROFILE%\\Downloads\\Islemler.xlsx");
    readColumnValue = (CommunityExcelActionsforWindows.readColumnValue)((ReportingDriver)driver).addons().execute(readColumnValue);
    ReferansColumnValue = String.valueOf(readColumnValue.columnValue);

    // 17. Get Excel Column Index
    //    Taksit Sütununun index numarasını al
    returnColumnIndex = CommunityExcelActionsforWindows.returnColumnIndex(1,"%USERPROFILE%\\Downloads\\Islemler.xlsx","+Taksit");
    returnColumnIndex = (CommunityExcelActionsforWindows.returnColumnIndex)((ReportingDriver)driver).addons().execute(returnColumnIndex);
    taksitColumnIndex = String.valueOf(returnColumnIndex.Col);

    // 18. Read Excel Column
    //    Taksit Sütununu oku
    readColumnValue = CommunityExcelActionsforWindows.readColumnValue(1,Integer.parseInt(taksitColumnIndex),"%USERPROFILE%\\Downloads\\Islemler.xlsx");
    readColumnValue = (CommunityExcelActionsforWindows.readColumnValue)((ReportingDriver)driver).addons().execute(readColumnValue);
    taksitColumnValue = String.valueOf(readColumnValue.columnValue);

  }

  @Override
  public ReportingDriver getDriver() {
    return (ReportingDriver) driver;
  }

  @AfterAll
  static void tearDown() {
    if (driver != null) {
      driver.quit();
    }
  }

  private static Stream provideParameters() throws Exception {
    return Stream.of(Arguments.of("https://otomasyon.netahsilatdemo.com/Account/LogOff","otomasyon@test.com","Kd!cyhz4","","","","","2","","","","","",""));
  }
}
