package netahsilat;

import io.testproject.addon.NetahsilatUtills;
import io.testproject.addon.TypeTextSlowly;
import io.testproject.sdk.drivers.ReportingDriver;
import io.testproject.sdk.drivers.web.RemoteWebDriver;
import io.testproject.sdk.interfaces.junit5.ExceptionsReporter;
import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;

import java.util.concurrent.TimeUnit;
import java.util.stream.Stream;

/**
 * This class was automatically generated by TestProject
 * Project: Quality Museum Project
 * Test: C1224 İlgili vade ödeme setinden al olarak işaretli olduğunda sonuç ne oluyor
 * Generated by: Ahmet Furkan SIMSEK (furkan.simsek@qualitymuseum.com)
 * Generated on Fri Oct 07 11:30:06 GMT 2022.
 */
@DisplayName("C1224 İlgili vade ödeme setinden al olarak işaretli olduğunda sonuç ne oluyor")
public class C1224 implements ExceptionsReporter {
  public static WebDriver driver;

  @BeforeAll
  static void setup() throws Exception {
    driver = new RemoteWebDriver("wThDxIHw4zNaCydjAhcfe81WrQPYlMBFI7FPwUwV8M41", new ChromeOptions(), "Ahmet Furkan SIMSEK");
  }

  /**
   * In order to upload the test to TestProject need to un-comment @ArgumentsSource and set in comment the @MethodSource
   * @org.junit.jupiter.params.provider.ArgumentsSource(io.testproject.sdk.interfaces.parameterization.TestProjectParameterizer.class) */
  @DisplayName("C1224 İlgili vade ödeme setinden al olarak işaretli olduğunda sonuç ne oluyor")
  @ParameterizedTest
  @MethodSource("provideParameters")
  void execute(String ApplicationURL, String userName, String password, String currentDate,
      String faturaErpKodu, String faturaNumarasi, String dokumanKodu, String odemeLinki,
      String twoWeekLater) throws Exception {
    // set timeout for driver actions (similar to step timeout)
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);
    By by;
    boolean booleanResult;
    MethodLogoutlogin methodlogoutlogin;
    NetahsilatUtills.ClickUntilGone clickUntilGone;
    TypeTextSlowly.TypeTextWithControlledSpeed typeTextWithControlledSpeed;

    // 1. Run Method Logout&Login
    GeneratedUtils.sleep(500);
    methodlogoutlogin = new MethodLogoutlogin();
    methodlogoutlogin.ApplicationURL = ApplicationURL;
    methodlogoutlogin.userName = userName;
    methodlogoutlogin.password = password;
    methodlogoutlogin.execute(driver);

    // 2. Move mouse to 'moveToSiteYönetimi'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("li[class='config']");
    (new Actions(driver)).moveToElement(driver.findElement(by)).perform();

    // 3. Click 'SİTE YÖNETİMİ'
    GeneratedUtils.sleep(500);
    by = By.cssSelector(".config > a");
    driver.findElement(by).click();

    // 4. Move mouse to 'ddPosAyarlari'
    GeneratedUtils.sleep(500);
    by = By.xpath("//a[@title='POS AYARLARI']/..//img");
    (new Actions(driver)).moveToElement(driver.findElement(by)).perform();

    // 5. Click 'VADELİ FATURA'
    GeneratedUtils.sleep(500);
    by = By.xpath("//a[. = 'VADELİ FATURA']");
    driver.findElement(by).click();

    // 6. Click 'İlgili Alanlar Otomasyon (Silme) C2107'
    GeneratedUtils.sleep(500);
    by = By.xpath("//td[text()='Otomasyon (Silme) C2107']/..//td[1]//a[@title='İlgili alanlar']");
    driver.findElement(by).click();

    // 7. Click 'İlgili Alanlar Otomasyon (Silme) C2107 Vadeli Tanımları'
    GeneratedUtils.sleep(500);
    by = By.xpath("//h1[text()='Otomasyon (Silme) C2107 Vadeli Tanımları']/..//img[contains(@src,'detail.png')]");
    driver.findElement(by).click();

    // 8. Click '//td[text()='5']/..//img[contains(@src,'edit')]'
    GeneratedUtils.sleep(500);
    by = By.xpath("//td[text()='5']/..//img[contains(@src,'edit')]");
    driver.findElement(by).click();

    // 9. Click 'InvoiceDiffrenceType1'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#forPaymentSet");
    driver.findElement(by).click();

    // 10. Run Click Until Gone
    GeneratedUtils.sleep(500);
    clickUntilGone = NetahsilatUtills.clickUntilGone(30);
    by = By.xpath("//button[. = 'Tamam']");
    clickUntilGone = (NetahsilatUtills.ClickUntilGone)((ReportingDriver)driver).addons().execute(clickUntilGone, by, -1);

    // 11. Run Method Logout&Login
    GeneratedUtils.sleep(500);
    methodlogoutlogin = new MethodLogoutlogin();
    methodlogoutlogin.ApplicationURL = ApplicationURL;
    methodlogoutlogin.userName = "vadeli@fatura.com";
    methodlogoutlogin.password = password;
    methodlogoutlogin.execute(driver);

    // 12. Click 'Borç Kapama'
    GeneratedUtils.sleep(500);
    by = By.xpath("//span[. = 'Borç Kapama']");
    driver.findElement(by).click();

    // 13. Click 'BorcCheckBox2'
    GeneratedUtils.sleep(500);
    by = By.xpath("//*[@id=\"accountTransactions\"]/table/tbody/tr[1]//input[@type='radio' or @type='checkbox']");
    driver.findElement(by).click();

    // 14. Type text to a TextField element with a delay between characters.
    GeneratedUtils.sleep(500);
    typeTextWithControlledSpeed = TypeTextSlowly.typeTextWithControlledSpeed("4355 0843 5508 4358",0);
    by = By.cssSelector("#CardNumber");
    typeTextWithControlledSpeed = (TypeTextSlowly.TypeTextWithControlledSpeed)((ReportingDriver)driver).addons().execute(typeTextWithControlledSpeed, by, -1);

    // 15. Does '//td[contains(@class,'commRate-20')]//div[text()='5 x 34,00 ₺']' contain '5 x 34,00'?
    GeneratedUtils.sleep(500);
    by = By.xpath("//td[contains(@class,'commRate-20')]//div[text()='5 x 34,00 ₺']");
    Assertions.assertTrue(driver.findElement(by).getText().contains("5 x 34,00"));

    // 16. Click '//td[contains(@class,'commRate-20')]//div[text()='5 x 34,00 ₺']'
    GeneratedUtils.sleep(500);
    by = By.xpath("//td[contains(@class,'commRate-20')]//div[text()='5 x 34,00 ₺']");
    driver.findElement(by).click();

    // 17. Does 'textProcessMessage' contain 'Akbank1(manuel açıklama): 10 x 34,00 = 340,00 ₺'?
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#ProcessMessage");
    Assertions.assertTrue(driver.findElement(by).getText().contains("Akbank1(manuel açıklama): 10 x 34,00 = 340,00 ₺"));

  }

  @Override
  public ReportingDriver getDriver() {
    return (ReportingDriver) driver;
  }

  @AfterAll
  static void tearDown() {
    if (driver != null) {
      driver.quit();
    }
  }

  private static Stream provideParameters() throws Exception {
    return Stream.of(Arguments.of("https://otomasyon.netahsilatdemo.com/Account/LogOff","otomasyon@test.com","Kd!cyhz4","","","","","",""));
  }
}
