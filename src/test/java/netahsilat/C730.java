package netahsilat;

import io.testproject.addon.ImapMailOperations;
import io.testproject.addon.RandomDataGenerator;
import io.testproject.addon.WebExtensions;
import io.testproject.sdk.drivers.ReportingDriver;
import io.testproject.sdk.drivers.web.RemoteWebDriver;
import io.testproject.sdk.interfaces.junit5.ExceptionsReporter;
import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;

import java.util.concurrent.TimeUnit;
import java.util.stream.Stream;

/**
 * This class was automatically generated by TestProject
 * Project: Quality Museum Project
 * Test: C730 Toplu email order gönderimi
 * Generated by: Ahmet Furkan SIMSEK (furkan.simsek@qualitymuseum.com)
 * Generated on Fri Oct 07 07:20:50 GMT 2022.
 */
@DisplayName("C730 Toplu email order gönderimi")
public class C730 implements ExceptionsReporter {
  public static WebDriver driver;

  @BeforeAll
  static void setup() throws Exception {
    driver = new RemoteWebDriver("wThDxIHw4zNaCydjAhcfe81WrQPYlMBFI7FPwUwV8M41", new ChromeOptions(), "Ahmet Furkan SIMSEK");
  }

  /**
   * In order to upload the test to TestProject need to un-comment @ArgumentsSource and set in comment the @MethodSource
   * @org.junit.jupiter.params.provider.ArgumentsSource(io.testproject.sdk.interfaces.parameterization.TestProjectParameterizer.class) */
  @DisplayName("C730 Toplu email order gönderimi")
  @ParameterizedTest
  @MethodSource("provideParameters")
  void execute(String ApplicationURL, String userName, String password, String mail,
      String randomNumber) throws Exception {
    // set timeout for driver actions (similar to step timeout)
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);
    By by;
    boolean booleanResult;
    MethodLogoutlogin methodlogoutlogin;
    RandomDataGenerator.GenerateCredicardNumber generateCredicardNumber;
    ImapMailOperations.ReadSpecificsMail readSpecificsMail;
    ImapMailOperations.DeleteAllMails deleteAllMails;
    WebExtensions.AcceptAlert acceptAlert;

    // 1. Run Method Logout&Login
    GeneratedUtils.sleep(500);
    methodlogoutlogin = new MethodLogoutlogin();
    methodlogoutlogin.ApplicationURL = ApplicationURL;
    methodlogoutlogin.userName = ProjectParameters.genelEmail;
    methodlogoutlogin.password = ProjectParameters.genelPassword;
    methodlogoutlogin.execute(driver);

    // 2. Move mouse to 'moveUstUyeYonetimi'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("li[class='content']");
    (new Actions(driver)).moveToElement(driver.findElement(by)).perform();

    // 3. Click 'moveUstUyeYonetimi'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("li[class='content']");
    driver.findElement(by).click();

    // 4. Click 'dropDownOdemeLinki'
    GeneratedUtils.sleep(500);
    by = By.xpath("//li[2]/div/img");
    driver.findElement(by).click();

    // 5. Click 'TOPLU E-MAIL ORDER'
    GeneratedUtils.sleep(500);
    by = By.xpath("//a[. = 'TOPLU E-MAIL ORDER']");
    driver.findElement(by).click();

    // 6. Delete All Mails
    GeneratedUtils.sleep(500);
    deleteAllMails = ImapMailOperations.deleteAllMails(ProjectParameters.odemeEmail,ProjectParameters.yandexMailKey);
    deleteAllMails = (ImapMailOperations.DeleteAllMails)((ReportingDriver)driver).addons().execute(deleteAllMails);

    // 7. Delete All Mails
    GeneratedUtils.sleep(500);
    deleteAllMails = ImapMailOperations.deleteAllMails("netahsilatlimitli@yandex.com","bxebneuudvaycbbp");
    deleteAllMails = (ImapMailOperations.DeleteAllMails)((ReportingDriver)driver).addons().execute(deleteAllMails);

    // 8. Type '71249112816' in 'VendorName'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#VendorName");
    driver.findElement(by).sendKeys("71249112816");

    // 9. Click 'resultListelenen'
    GeneratedUtils.sleep(500);
    by = By.xpath("//body/ul//div");
    driver.findElement(by).click();

    // 10. Click 'btnListele'
    GeneratedUtils.sleep(500);
    by = By.xpath("//button[. = 'Listele']");
    driver.findElement(by).click();

    // 11. Is 'Bireysel türk [1]' visible?
    GeneratedUtils.sleep(500);
    by = By.xpath("//tr[1]//td[. = 'Bireysel türk']");
    driver.findElement(by).isDisplayed();

    // 12. Click 'IsSelected'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("[name='IsSelected']");
    driver.findElement(by).click();

    // 13. Clear 'VendorName' contents
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#VendorName");
    driver.findElement(by).clear();

    // 14. Type '16797722124' in 'VendorName'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#VendorName");
    driver.findElement(by).sendKeys("16797722124");

    // 15. Click 'resultListelenen'
    GeneratedUtils.sleep(500);
    by = By.xpath("//body/ul//div");
    driver.findElement(by).click();

    // 16. Click 'btnListele'
    GeneratedUtils.sleep(500);
    by = By.xpath("//button[. = 'Listele']");
    driver.findElement(by).click();

    // 17. Is 'Limitli Bayi [1]' visible?
    GeneratedUtils.sleep(500);
    by = By.xpath("//tr[1]//td[. = 'Limitli Bayi']");
    driver.findElement(by).isDisplayed();

    // 18. Click 'IsSelected'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("[name='IsSelected']");
    driver.findElement(by).click();

    // 19. Click 'strContinue'
    GeneratedUtils.sleep(500);
    by = By.xpath("//div[3]/div/button[. = 'strContinue']");
    driver.findElement(by).click();

    // 20. Does 'Bireysel türk1' contain 'Bireysel türk'?
    GeneratedUtils.sleep(500);
    by = By.xpath("//td[. = 'Bireysel türk']");
    Assertions.assertTrue(driver.findElement(by).getText().contains("Bireysel türk"));

    // 21. Does 'Limitli Bayi' contain 'Limitli Bayi'?
    GeneratedUtils.sleep(500);
    by = By.xpath("//td[1][. = 'Limitli Bayi']");
    Assertions.assertTrue(driver.findElement(by).getText().contains("Limitli Bayi"));

    // 22. Click 'SMSSend'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#SMSSend");
    driver.findElement(by).click();

    // 23. Clear 'TopluEmailOrder Toplu Tutar Input' contents
    GeneratedUtils.sleep(500);
    by = By.xpath("//th[normalize-space()='Tutar']//following-sibling::input");
    driver.findElement(by).clear();

    // 24. Type '345' in 'TopluEmailOrder Toplu Tutar Input'
    GeneratedUtils.sleep(500);
    by = By.xpath("//th[normalize-space()='Tutar']//following-sibling::input");
    driver.findElement(by).sendKeys("345");

    // 25. Send 'ENTER' key(s)
    GeneratedUtils.sleep(500);
    (new Actions(driver)).sendKeys(GeneratedUtils.getKeys("ENTER")).build().perform();

    // 26. Click 'Tutara aktar'
    /* Step is disabled
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#setamountdebt");
    driver.findElement(by).click();
    */
    // 27. Click 'strContinue1'
    GeneratedUtils.sleep(500);
    by = By.xpath("//button[2][. = 'strContinue']");
    driver.findElement(by).click();

    // 28. Generate random credit-card number
    GeneratedUtils.sleep(500);
    generateCredicardNumber = RandomDataGenerator.getGenerateCredicardNumber();
    generateCredicardNumber = (RandomDataGenerator.GenerateCredicardNumber)((ReportingDriver)driver).addons().execute(generateCredicardNumber);
    randomNumber = String.valueOf(generateCredicardNumber.result);

    // 29. Type '{{randomNumber}}' in 'description1'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#description");
    driver.findElement(by).sendKeys(randomNumber);

    // 30. Click 'Gönder1'
    GeneratedUtils.sleep(500);
    by = By.xpath("//button[. = 'Gönder']");
    driver.findElement(by).click();

    // 31. Accept alert
    GeneratedUtils.sleep(500);
    acceptAlert = WebExtensions.acceptAlert(1000);
    acceptAlert = (WebExtensions.AcceptAlert)((ReportingDriver)driver).addons().execute(acceptAlert);

    // 32. Output searched string in specific mail
    GeneratedUtils.sleep(500);
    readSpecificsMail = ImapMailOperations.readSpecificsMail("netahsilatotomasyon@yandex.com","cishmttwpcryalzi",randomNumber,"C:\\TestProject\\mail\\C730_2.html");
    readSpecificsMail = (ImapMailOperations.ReadSpecificsMail)((ReportingDriver)driver).addons().execute(readSpecificsMail);

    // 33. Output searched string in specific mail
    GeneratedUtils.sleep(500);
    readSpecificsMail = ImapMailOperations.readSpecificsMail("netahsilatlimitli@yandex.com","bxebneuudvaycbbp",randomNumber,"C:\\TestProject\\mail\\C730_1.html");
    readSpecificsMail = (ImapMailOperations.ReadSpecificsMail)((ReportingDriver)driver).addons().execute(readSpecificsMail);

  }

  @Override
  public ReportingDriver getDriver() {
    return (ReportingDriver) driver;
  }

  @AfterAll
  static void tearDown() {
    if (driver != null) {
      driver.quit();
    }
  }

  private static Stream provideParameters() throws Exception {
    return Stream.of(Arguments.of("https://otomasyon.netahsilatdemo.com/Account/LogOff","otomasyon@test.com","Kd!cyhz4","",""));
  }
}
