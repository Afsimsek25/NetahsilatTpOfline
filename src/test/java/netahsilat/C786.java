package netahsilat;

import io.testproject.addon.CombinedActions;
import io.testproject.addon.JSActions;
import io.testproject.addon.WebExtensions;
import io.testproject.addon.WebListOperations;
import io.testproject.sdk.drivers.ReportingDriver;
import io.testproject.sdk.drivers.web.RemoteWebDriver;
import io.testproject.sdk.interfaces.junit5.ExceptionsReporter;
import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;

import java.util.concurrent.TimeUnit;
import java.util.stream.Stream;

/**
 * This class was automatically generated by TestProject
 * Project: Quality Museum Project
 * Test: C786 Email Order Tanımları - Parametrelerin Varsayılan Değerlerinin Kontrolü
 * Generated by: Ahmet Furkan SIMSEK (furkan.simsek@qualitymuseum.com)
 * Generated on Fri Oct 07 11:24:04 GMT 2022.
 */
@DisplayName("C786 Email Order Tanımları - Parametrelerin Varsayılan Değerlerinin Kontrolü")
public class C786 implements ExceptionsReporter {
  public static WebDriver driver;

  @BeforeAll
  static void setup() throws Exception {
    driver = new RemoteWebDriver("wThDxIHw4zNaCydjAhcfe81WrQPYlMBFI7FPwUwV8M41", new ChromeOptions(), "Ahmet Furkan SIMSEK");
  }

  /**
   * In order to upload the test to TestProject need to un-comment @ArgumentsSource and set in comment the @MethodSource
   * @org.junit.jupiter.params.provider.ArgumentsSource(io.testproject.sdk.interfaces.parameterization.TestProjectParameterizer.class) */
  @DisplayName("C786 Email Order Tanımları - Parametrelerin Varsayılan Değerlerinin Kontrolü")
  @ParameterizedTest
  @MethodSource("provideParameters")
  void execute(String ApplicationURL, String userName, String password) throws Exception {
    // set timeout for driver actions (similar to step timeout)
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);
    By by;
    boolean booleanResult;
    MethodLogoutlogin methodlogoutlogin;
    String string;
    WebExtensions.SelectOptionbyVisibleText selectOptionbyVisibleText;
    CombinedActions.ClearAndTypeAction clearAndTypeAction;
    JSActions.ClickAction clickAction;
    WebListOperations.GetTextFromSelectedItem getTextFromSelectedItem;

    // 1. Run Method Logout&Login
    GeneratedUtils.sleep(500);
    methodlogoutlogin = new MethodLogoutlogin();
    methodlogoutlogin.ApplicationURL = ApplicationURL;
    methodlogoutlogin.userName = ProjectParameters.genelEmail;
    methodlogoutlogin.password = ProjectParameters.genelPassword;
    methodlogoutlogin.execute(driver);

    // 2. Move mouse to 'moveToSiteYönetimi'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("li[class='config']");
    (new Actions(driver)).moveToElement(driver.findElement(by)).perform();

    // 3. Click 'moveToSiteYönetimi'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("li[class='config']");
    driver.findElement(by).click();

    // 4. Click 'btnParametreler'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("a[title='PARAMETRELER']");
    driver.findElement(by).click();

    // 5. Click 'li > a > E-Mail Order Tanımları'
    GeneratedUtils.sleep(500);
    by = By.xpath("//a[normalize-space()='E-Mail Order Tanımları']");
    driver.findElement(by).click();

    // 6. Run Clear 'MailOrderSettings.ExpireDate' contents and type '3'
    GeneratedUtils.sleep(500);
    clearAndTypeAction = CombinedActions.clearAndTypeAction("3");
    by = By.cssSelector("#MailOrderSettings_ExpireDate");
    clearAndTypeAction = (CombinedActions.ClearAndTypeAction)((ReportingDriver)driver).addons().execute(clearAndTypeAction, by, -1);

    // 7. Select options in 'MailOrderSettings.FrequencyType' with text '[NONE]'
    GeneratedUtils.sleep(500);
    selectOptionbyVisibleText = WebExtensions.selectOptionbyVisibleText("Hafta");
    by = By.cssSelector("#MailOrderSettings_FrequencyType");
    selectOptionbyVisibleText = (WebExtensions.SelectOptionbyVisibleText)((ReportingDriver)driver).addons().execute(selectOptionbyVisibleText, by, -1);

    // 8. Run Clear 'MailOrderSettings.MailSendCount' contents and type '3'
    GeneratedUtils.sleep(500);
    clearAndTypeAction = CombinedActions.clearAndTypeAction("3");
    by = By.cssSelector("#MailOrderSettings_MailSendCount");
    clearAndTypeAction = (CombinedActions.ClearAndTypeAction)((ReportingDriver)driver).addons().execute(clearAndTypeAction, by, -1);

    // 9. Click 'Sms Gönderimi seçili gelsin mi ? (Checked)'
    GeneratedUtils.sleep(500);
    by = By.xpath("//label[normalize-space()='Sms Gönderimi seçili gelsin mi ?']//..//following-sibling::div//span[@class='jquery-safari-checkbox']");
    driver.findElement(by).click();

    // 10. Is 'Kaydet1' visible?
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(35000, TimeUnit.MILLISECONDS);
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#kaydet");
    driver.findElement(by).isDisplayed();
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 11. Click 'Kaydet1'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#kaydet");
    driver.findElement(by).click();

    // 12. Move mouse to 'moveUstUyeYonetimi'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("li[class='content']");
    (new Actions(driver)).moveToElement(driver.findElement(by)).perform();

    // 13. Click 'moveUstUyeYonetimi'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("li[class='content']");
    driver.findElement(by).click();

    // 14. Click 'dropDownOdemeLinki'
    GeneratedUtils.sleep(500);
    by = By.xpath("//li[2]/div/img");
    driver.findElement(by).click();

    // 15. Click 'ÜYELİKSİZ ÖDEME LİNKİ'
    GeneratedUtils.sleep(500);
    by = By.xpath("//a[. = 'ÜYELİKSİZ ÖDEME LİNKİ']");
    driver.findElement(by).click();

    // 16. Get text from 'MailSendCount'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#MailSendCount");
    string = driver.findElement(by).getAttribute("value");
    Assertions.assertEquals("3", string);

    // 17. Get text from 'ExpireDate'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#ExpireDate");
    string = driver.findElement(by).getAttribute("value");
    Assertions.assertEquals("3", string);

    // 18. Retrieves the text of the currently selected option of a select element
    GeneratedUtils.sleep(500);
    getTextFromSelectedItem = WebListOperations.getGetTextFromSelectedItem();
    by = By.cssSelector("#FrequencyType");
    getTextFromSelectedItem = (WebListOperations.GetTextFromSelectedItem)((ReportingDriver)driver).addons().execute(getTextFromSelectedItem, by, -1);

    // 19. Is 'SMS Order Checked İse' visible?
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(2000, TimeUnit.MILLISECONDS);
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#SendSMS:checked");
    driver.findElement(by).isDisplayed();
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 20. Move mouse to 'moveToSiteYönetimi'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("li[class='config']");
    (new Actions(driver)).moveToElement(driver.findElement(by)).perform();

    // 21. Click 'moveToSiteYönetimi'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("li[class='config']");
    driver.findElement(by).click();

    // 22. Click 'btnParametreler'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("a[title='PARAMETRELER']");
    driver.findElement(by).click();

    // 23. Click 'li > a > E-Mail Order Tanımları'
    GeneratedUtils.sleep(500);
    by = By.xpath("//a[normalize-space()='E-Mail Order Tanımları']");
    driver.findElement(by).click();

    // 24. Run Clear 'MailOrderSettings.ExpireDate' contents and type '1'
    GeneratedUtils.sleep(500);
    clearAndTypeAction = CombinedActions.clearAndTypeAction("1");
    by = By.cssSelector("#MailOrderSettings_ExpireDate");
    clearAndTypeAction = (CombinedActions.ClearAndTypeAction)((ReportingDriver)driver).addons().execute(clearAndTypeAction, by, -1);

    // 25. Select options in 'MailOrderSettings.FrequencyType' with text '[NONE]'
    GeneratedUtils.sleep(500);
    selectOptionbyVisibleText = WebExtensions.selectOptionbyVisibleText("Ay");
    by = By.cssSelector("#MailOrderSettings_FrequencyType");
    selectOptionbyVisibleText = (WebExtensions.SelectOptionbyVisibleText)((ReportingDriver)driver).addons().execute(selectOptionbyVisibleText, by, -1);

    // 26. Run Clear 'MailOrderSettings.MailSendCount' contents and type '1'
    GeneratedUtils.sleep(500);
    clearAndTypeAction = CombinedActions.clearAndTypeAction("1");
    by = By.cssSelector("#MailOrderSettings_MailSendCount");
    clearAndTypeAction = (CombinedActions.ClearAndTypeAction)((ReportingDriver)driver).addons().execute(clearAndTypeAction, by, -1);

    // 27. Click 'Sms Gönderimi seçili gelsin mi ? (Unchecked)'
    GeneratedUtils.sleep(500);
    by = By.xpath("//label[normalize-space()='Sms Gönderimi seçili gelsin mi ?']//..//following-sibling::div//span[@class='jquery-safari-checkbox jquery-safari-checkbox-checked']");
    driver.findElement(by).click();

    // 28. Is 'Kaydet1' visible?
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(35000, TimeUnit.MILLISECONDS);
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#kaydet");
    driver.findElement(by).isDisplayed();
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 29. Click 'Kaydet1'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#kaydet");
    driver.findElement(by).click();

    // 30. Click 'ÜYELİKSİZ ÖDEME LİNKİ'
    GeneratedUtils.sleep(500);
    clickAction = JSActions.getClickAction();
    by = By.xpath("//a[. = 'ÜYELİKSİZ ÖDEME LİNKİ']");
    clickAction = (JSActions.ClickAction)((ReportingDriver)driver).addons().execute(clickAction, by, -1);

    // 31. Get text from 'MailSendCount'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#MailSendCount");
    string = driver.findElement(by).getAttribute("value");
    Assertions.assertEquals("1", string);

    // 32. Get text from 'ExpireDate'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#ExpireDate");
    string = driver.findElement(by).getAttribute("value");
    Assertions.assertEquals("1", string);

    // 33. Retrieves the text of the currently selected option of a select element
    GeneratedUtils.sleep(500);
    getTextFromSelectedItem = WebListOperations.getGetTextFromSelectedItem();
    by = By.cssSelector("#FrequencyType");
    getTextFromSelectedItem = (WebListOperations.GetTextFromSelectedItem)((ReportingDriver)driver).addons().execute(getTextFromSelectedItem, by, -1);

    // 34. Is 'SMS Order Not Checked İse' visible?
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(2000, TimeUnit.MILLISECONDS);
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#SendSMS:not(:checked)");
    driver.findElement(by).isDisplayed();
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

  }

  @Override
  public ReportingDriver getDriver() {
    return (ReportingDriver) driver;
  }

  @AfterAll
  static void tearDown() {
    if (driver != null) {
      driver.quit();
    }
  }

  private static Stream provideParameters() throws Exception {
    return Stream.of(Arguments.of("https://otomasyon.netahsilatdemo.com/Account/LogOff","otomasyon@test.com","Kd!cyhz4"));
  }
}
