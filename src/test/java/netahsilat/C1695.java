package netahsilat;

import io.testproject.addon.RandomDataGenerator;
import io.testproject.sdk.drivers.ReportingDriver;
import io.testproject.sdk.drivers.web.RemoteWebDriver;
import io.testproject.sdk.interfaces.junit5.ExceptionsReporter;
import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import java.util.concurrent.TimeUnit;
import java.util.stream.Stream;

/**
 * This class was automatically generated by TestProject
 * Project: Quality Museum Project
 * Test: C1695 Yetkilere bağlanarak kart kaydı, ödeme ve silme işlemi yapılması
 * Generated by: Ahmet Furkan SIMSEK (furkan.simsek@qualitymuseum.com)
 * Generated on Mon Oct 10 07:17:56 GMT 2022.
 */
@DisplayName("C1695 Yetkilere bağlanarak kart kaydı, ödeme ve silme işlemi yapılması")
public class C1695 implements ExceptionsReporter {
  public static WebDriver driver;

  @BeforeAll
  static void setup() throws Exception {
    driver = new RemoteWebDriver("wThDxIHw4zNaCydjAhcfe81WrQPYlMBFI7FPwUwV8M41", new ChromeOptions(), "Ahmet Furkan SIMSEK");
  }

  /**
   * In order to upload the test to TestProject need to un-comment @ArgumentsSource and set in comment the @MethodSource
   * @org.junit.jupiter.params.provider.ArgumentsSource(io.testproject.sdk.interfaces.parameterization.TestProjectParameterizer.class) */
  @DisplayName("C1695 Yetkilere bağlanarak kart kaydı, ödeme ve silme işlemi yapılması")
  @ParameterizedTest
  @MethodSource("provideParameters")
  void execute(String ApplicationURL, String userName, String password, String currentDateTime,
      String RandomNumber, String CVV) throws Exception {
    // set timeout for driver actions (similar to step timeout)
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);
    By by;
    boolean booleanResult;
    MethodParametrikdemesadeceKartTypeTextWithDelayIsimsiz methodparametrikdemesadecekarttypetextwithdelayisimsiz;
    MethodLogoutlogin methodlogoutlogin;
    RandomDataGenerator.GenerateNumberInRange generateNumberInRange;

    // 1. Run Method Logout&Login
    //    bayi@kartkaydi.com
    methodlogoutlogin = new MethodLogoutlogin();
    methodlogoutlogin.ApplicationURL = ApplicationURL;
    methodlogoutlogin.userName = "bayi@kartkaydi.com";
    methodlogoutlogin.password = ProjectParameters.genelPassword;
    methodlogoutlogin.execute(driver);
    currentDateTime = String.valueOf(methodlogoutlogin.currentDateTime);

    // 2. Click 'ONLINE ÖDEME'
    by = By.xpath("//a[.='ONLINE ÖDEME']");
    driver.findElement(by).click();

    // 3. Generate random number between '1' and '9999'
    generateNumberInRange = RandomDataGenerator.generateNumberInRange("1","9999");
    generateNumberInRange = (RandomDataGenerator.GenerateNumberInRange)((ReportingDriver)driver).addons().execute(generateNumberInRange);
    RandomNumber = String.valueOf(generateNumberInRange.result);

    // 4. Clear 'PureAmount' contents
    by = By.cssSelector("#PureAmount");
    driver.findElement(by).clear();

    // 5. Type '{{RandomNumber}}' in 'PureAmount'
    by = By.cssSelector("#PureAmount");
    driver.findElement(by).sendKeys(RandomNumber);

    // 6. Run Method Parametrik Ödeme (Sadece Kart - Type text with delay)  - İsimsiz
    methodparametrikdemesadecekarttypetextwithdelayisimsiz = new MethodParametrikdemesadeceKartTypeTextWithDelayIsimsiz();
    methodparametrikdemesadecekarttypetextwithdelayisimsiz.kartNo = "4546711234567894";
    methodparametrikdemesadecekarttypetextwithdelayisimsiz.CVV = CVV;
    methodparametrikdemesadecekarttypetextwithdelayisimsiz.ayYil = "12/30";
    methodparametrikdemesadecekarttypetextwithdelayisimsiz.adSoyad = "C1695 Test";
    methodparametrikdemesadecekarttypetextwithdelayisimsiz.execute(driver);

    // 7. Move mouse to 'Ziraat Tek Çekim'
    by = By.xpath("(//td[text()='Tek çekim'])[1]/..//td[contains(@class,'commRate-4030')]");
    (new Actions(driver)).moveToElement(driver.findElement(by)).perform();

    // 8. Click 'Ziraat Tek Çekim'
    by = By.xpath("(//td[text()='Tek çekim'])[1]/..//td[contains(@class,'commRate-4030')]");
    driver.findElement(by).click();

    // 9. Click 'Kartımı kaydetmek istiyorum Checkbox'
    by = By.xpath("//label[normalize-space()='Kartımı kaydetmek istiyorum']");
    driver.findElement(by).click();

    // 10. Click 'Ödeme Talimatı Oluştur Button'
    by = By.xpath("//input[@type='button' and @value='ÖDEME TALİMATI OLUŞTUR']");
    driver.findElement(by).click();

    // 11. Click 'btnOdemeyiTamamla'
    by = By.cssSelector("#btnNormalPayment");
    driver.findElement(by).click();

    // 12. Is 'Payment Efekti' visible?
    by = By.cssSelector("div[class='spinner']");
    driver.findElement(by).isDisplayed();

    // 13. Is 'txtReferansNumarasi' visible?
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(35000, TimeUnit.MILLISECONDS);
    by = By.xpath("(//p[@class='payment-result-text'])[1]");
    driver.findElement(by).isDisplayed();
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 14. Click 'Kayıtlı kredi kartlarınızı görmek için tıklayınız'
    by = By.xpath("//a[@data-bind='click: showStoredCreditCards']");
    driver.findElement(by).click();

    // 15. Click '454671******7894 Sil Btn'
    by = By.xpath("//td[text()='454671******7894']/..//a[contains(@class,'Delete')]");
    driver.findElement(by).click();

    // 16. Is '454671******7894 numaralı kredi kartı...' visible?
    by = By.xpath("//p[. = '454671******7894 numaralı kredi kartınızı silmek istediğinizden emin misiniz?']");
    driver.findElement(by).isDisplayed();

    // 17. Click 'Evet2'
    by = By.xpath("//button[. = 'Evet']");
    driver.findElement(by).click();

    // 18. Is '454671******7894 Sil Btn' not present or invisible?
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(2000, TimeUnit.MILLISECONDS);
    by = By.xpath("//td[text()='454671******7894']/..//a[contains(@class,'Delete')]");
    (new WebDriverWait(driver, 2)).until(ExpectedConditions.invisibilityOf(driver.findElement(by)));
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 19. Run Method Logout&Login
    //    bayi1@kartkaydi.com
    methodlogoutlogin = new MethodLogoutlogin();
    methodlogoutlogin.ApplicationURL = ApplicationURL;
    methodlogoutlogin.userName = "bayi1@kartkaydi.com";
    methodlogoutlogin.password = password;
    methodlogoutlogin.execute(driver);
    currentDateTime = String.valueOf(methodlogoutlogin.currentDateTime);

    // 20. Is 'KREDI KARTLARIM' not present or invisible?
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(2000, TimeUnit.MILLISECONDS);
    by = By.xpath("//a[. = 'KREDİ KARTLARIM']");
    (new WebDriverWait(driver, 2)).until(ExpectedConditions.invisibilityOf(driver.findElement(by)));
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 21. Click 'ONLINE ÖDEME1'
    by = By.xpath("//a[. = 'ONLINE ÖDEME']");
    driver.findElement(by).click();

    // 22. Is 'Kartımı kaydetmek istiyorum Checkbox' not present or invisible?
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(2000, TimeUnit.MILLISECONDS);
    by = By.xpath("//label[normalize-space()='Kartımı kaydetmek istiyorum']");
    (new WebDriverWait(driver, 2)).until(ExpectedConditions.invisibilityOf(driver.findElement(by)));
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

  }

  @Override
  public ReportingDriver getDriver() {
    return (ReportingDriver) driver;
  }

  @AfterAll
  static void tearDown() {
    if (driver != null) {
      driver.quit();
    }
  }

  private static Stream provideParameters() throws Exception {
    return Stream.of(Arguments.of("https://otomasyon.netahsilatdemo.com/Account/LogOff","otomasyon@test.com","Kd!cyhz4","","","000"));
  }
}
