package netahsilat;

import io.testproject.addon.*;
import io.testproject.sdk.drivers.ReportingDriver;
import io.testproject.sdk.drivers.web.RemoteWebDriver;
import io.testproject.sdk.interfaces.junit5.ExceptionsReporter;
import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import java.util.concurrent.TimeUnit;
import java.util.stream.Stream;

/**
 * This class was automatically generated by TestProject
 * Project: Quality Museum Project
 * Test: C747 Üye Excel Aktarım (Bayi)
 * Generated by: Ahmet Furkan SIMSEK (furkan.simsek@qualitymuseum.com)
 * Generated on Fri Oct 07 09:56:48 GMT 2022.
 */
@DisplayName("C747 Üye Excel Aktarım (Bayi)")
public class C747 implements ExceptionsReporter {
  public static WebDriver driver;

  @BeforeAll
  static void setup() throws Exception {
    driver = new RemoteWebDriver("wThDxIHw4zNaCydjAhcfe81WrQPYlMBFI7FPwUwV8M41", new ChromeOptions(), "Ahmet Furkan SIMSEK");
  }

  /**
   * In order to upload the test to TestProject need to un-comment @ArgumentsSource and set in comment the @MethodSource
   * @org.junit.jupiter.params.provider.ArgumentsSource(io.testproject.sdk.interfaces.parameterization.TestProjectParameterizer.class) */
  @DisplayName("C747 Üye Excel Aktarım (Bayi)")
  @ParameterizedTest
  @MethodSource("provideParameters")
  void execute(String ApplicationURL, String userName, String password) throws Exception {
    // set timeout for driver actions (similar to step timeout)
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);
    By by;
    boolean booleanResult;
    MethodLogoutlogin methodlogoutlogin;
    WebExtensions.SelectOptionbyVisibleText selectOptionbyVisibleText;
    NetahsilatUtills.ClickUntilGone clickUntilGone;
    JSActions.ClickAction clickAction;
    VisibleElementsOperations.IsClickableWeb isClickableWeb;
    FileUpload.UploadFileElementAction uploadFileElementAction;

    // 1. Run Method Logout&Login
    GeneratedUtils.sleep(500);
    methodlogoutlogin = new MethodLogoutlogin();
    methodlogoutlogin.ApplicationURL = ApplicationURL;
    methodlogoutlogin.userName = ProjectParameters.genelEmail;
    methodlogoutlogin.password = ProjectParameters.genelPassword;
    methodlogoutlogin.execute(driver);

    // 2. Move mouse to 'moveUstUyeYonetimi'
    by = By.cssSelector("li[class='content']");
    (new Actions(driver)).moveToElement(driver.findElement(by)).perform();

    // 3. Click 'ustUyeYonetimi'
    by = By.xpath("//li[4]/a[. = 'ÜYE YÖNETİMİ']");
    driver.findElement(by).click();

    // 4. Click 'ÜYE AKTARIM'
    by = By.xpath("//a[. = 'ÜYE AKTARIM']");
    driver.findElement(by).click();

    // 5. Is 'Tamam1' visible?
    by = By.xpath("//button[. = 'Tamam']");
    driver.findElement(by).isDisplayed();

    // 6. Is 'import' clickable?
    isClickableWeb = VisibleElementsOperations.isClickableWeb("0");
    by = By.cssSelector("#import");
    isClickableWeb = (VisibleElementsOperations.IsClickableWeb)((ReportingDriver)driver).addons().execute(isClickableWeb, by, -1);

    // 7. Uploads a file to a given element with the 'file' type
    uploadFileElementAction = FileUpload.uploadFileElementAction("C:\\TestProject\\C747.xlsx");
    by = By.cssSelector("#import");
    uploadFileElementAction = (FileUpload.UploadFileElementAction)((ReportingDriver)driver).addons().execute(uploadFileElementAction, by, -1);

    // 8. Click 'Tamam1'
    by = By.xpath("//button[. = 'Tamam']");
    driver.findElement(by).click();

    // 9. Select options in 'primarykey' with text '[NONE]'
    selectOptionbyVisibleText = WebExtensions.selectOptionbyVisibleText("Code");
    by = By.cssSelector("#primarykey");
    selectOptionbyVisibleText = (WebExtensions.SelectOptionbyVisibleText)((ReportingDriver)driver).addons().execute(selectOptionbyVisibleText, by, -1);

    // 10. Is 'Aktarımı Başlat' is clickable?
    by = By.xpath("//button[. = 'Aktarımı Başlat']");
    (new WebDriverWait(driver, 15)).until(ExpectedConditions.elementToBeClickable(by));

    // 11. Click 'Aktarımı Başlat'
    by = By.xpath("//button[. = 'Aktarımı Başlat']");
    driver.findElement(by).click();

    // 12. Does 'Kaydedilen Toplam Kayıt : ' contain 'Kaydedilen Toplam Kayıt : 3 Hata Oluşan Toplam Kayıt :0'?
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(35000, TimeUnit.MILLISECONDS);
    by = By.xpath("//p[contains(text(), 'Kaydedilen Toplam Kayıt :')]");
    Assertions.assertTrue(driver.findElement(by).getText().contains("Kaydedilen Toplam Kayıt : 3 Hata Oluşan Toplam Kayıt :0"));
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 13. Click 'altUyeYonetimi'
    clickAction = JSActions.getClickAction();
    by = By.xpath("//li[1]/a[. = 'ÜYE YÖNETİMİ']");
    clickAction = (JSActions.ClickAction)((ReportingDriver)driver).addons().execute(clickAction, by, -1);

    // 14. Is 'SearchVendorNameVN' visible?
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(35000, TimeUnit.MILLISECONDS);
    by = By.cssSelector("#SearchVendorName");
    driver.findElement(by).isDisplayed();
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 15. Type 'BireyselCode001' in 'SearchVendorNameVN'
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(35000, TimeUnit.MILLISECONDS);
    by = By.cssSelector("#SearchVendorName");
    driver.findElement(by).sendKeys("BireyselCode001");
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 16. Click '//div[contains(text(),'BireyselCode001')]'
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(35000, TimeUnit.MILLISECONDS);
    by = By.xpath("//div[contains(text(),'BireyselCode001')]");
    driver.findElement(by).click();
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 17. Click 'btnListele'
    by = By.xpath("//button[. = 'Listele']");
    driver.findElement(by).click();

    // 18. Is 'Refresh Loading' visible?
    by = By.xpath("//a[@class='t-icon t-refresh t-loading']");
    driver.findElement(by).isDisplayed();

    // 19. Is 'Refresh noLoading' visible?
    by = By.xpath("//a[@class='t-icon t-refresh']");
    driver.findElement(by).isDisplayed();

    // 20. Is 'BireyselCode001' visible?
    by = By.xpath("//td[. = 'BireyselCode001']");
    driver.findElement(by).isDisplayed();

    // 21. Click 'EditButton'
    by = By.cssSelector("img[src*='fugue/edit.png']");
    driver.findElement(by).click();

    // 22. Is 'Bayi Bilgileri' visible?
    by = By.xpath("//legend[. = 'Bayi Bilgileri']");
    driver.findElement(by).isDisplayed();

    // 23. Does 'Entity.Email' contain 'bireysel@test.com'?
    by = By.cssSelector("#Entity_Email");
    Assertions.assertTrue(driver.findElement(by).getText().contains("bireysel@test.com"));

    // 24. Does '//*[@id="s2id_Entity_CustomerHelpId"]/ul/li[1]/div' contain 'admin@netahsilat.com'?
    by = By.xpath("//*[@id=\"s2id_Entity_CustomerHelpId\"]/ul/li[1]/div");
    Assertions.assertTrue(driver.findElement(by).getText().contains("admin@netahsilat.com"));

    // 25. Does 'Entity.AddressModel.Address' contain 'YTU Teknopark  Polatlı / Ankara'?
    by = By.cssSelector("#Entity_AddressModel_Address");
    Assertions.assertTrue(driver.findElement(by).getText().contains("YTU Teknopark  Polatlı / Ankara"));

    // 26. Does 'Entity.ContactModel.Phone1Number' contain '(535)1231122'?
    by = By.cssSelector("#Entity_ContactModel_Phone1Number");
    Assertions.assertTrue(driver.findElement(by).getText().contains("(535)1231122"));

    // 27. Does 'Entity.ErpCode' contain 'BireyselCodeErp001'?
    by = By.cssSelector("#Entity_ErpCode");
    Assertions.assertTrue(driver.findElement(by).getText().contains("BireyselCodeErp001"));

    // 28. Is 'input[vendortype='Individual']:checked' visible?
    by = By.cssSelector("input[vendortype='Individual']:checked");
    driver.findElement(by).isDisplayed();

    // 29. Is '//input[@id='Entity_IsActive']/..//span[contains(@class,'checked')]' visible?
    by = By.xpath("//input[@id='Entity_IsActive']/..//span[contains(@class,'checked')]");
    driver.findElement(by).isDisplayed();

    // 30. Click 'btnCariHesaplar'
    by = By.cssSelector("img[src*='Paper-Money-icon.png']");
    driver.findElement(by).click();

    // 31. Is 'Entity.CurrentAccounts[0].ErpCode' visible?
    by = By.cssSelector("#Entity_CurrentAccounts_0__ErpCode");
    driver.findElement(by).isDisplayed();

    // 32. Click 'Haklar'
    by = By.cssSelector("img[src*='yetki.png']");
    driver.findElement(by).click();

    // 33. Is 'Müşteri ekleyebilir' visible?
    by = By.xpath("//label[normalize-space()='Müşteri ekleyebilir']/..//span[@class='mark']");
    driver.findElement(by).isDisplayed();

    // 34. Is 'Ödeme Yapabilir' visible?
    by = By.xpath("//span[contains(@class,'checked')]//following-sibling::label[normalize-space()='Ödeme yapabilir']");
    driver.findElement(by).isDisplayed();

    // 35. Run Click Until Gone
    clickUntilGone = NetahsilatUtills.clickUntilGone(30);
    by = By.xpath("//button[. = 'Vazgeç']");
    clickUntilGone = (NetahsilatUtills.ClickUntilGone)((ReportingDriver)driver).addons().execute(clickUntilGone, by, -1);

    // 36. Click 'KullanıcılarıGörüntüleImage'
    by = By.cssSelector("img[src*='fugue/detail.png']");
    driver.findElement(by).click();

    // 37. Click 'btnPencil'
    by = By.cssSelector("img[src*='fugue/pencil.png']");
    driver.findElement(by).click();

    // 38. Is '//input[@id='Entity_IsActive']/..//span[contains(@class,'checked')]' visible?
    by = By.xpath("//input[@id='Entity_IsActive']/..//span[contains(@class,'checked')]");
    driver.findElement(by).isDisplayed();

    // 39. Does 'Bayi Adi' contain 'Bireysel Bayi Name'?
    by = By.cssSelector("#Entity_Name");
    Assertions.assertTrue(driver.findElement(by).getText().contains("Bireysel Bayi Name"));

    // 40. Does 'Entity.Surname' contain 'Bireysel  Bayi SurName'?
    by = By.cssSelector("#Entity_Surname");
    Assertions.assertTrue(driver.findElement(by).getText().contains("Bireysel  Bayi SurName"));

    // 41. Does 'Entity.Email' contain 'bireysel@test.com'?
    by = By.cssSelector("#Entity_Email");
    Assertions.assertTrue(driver.findElement(by).getText().contains("bireysel@test.com"));

    // 42. Does 'Entity.MobilePhone' contain '(535)1231100'?
    by = By.cssSelector("#Entity_MobilePhone");
    Assertions.assertTrue(driver.findElement(by).getText().contains("(535)1231100"));

    // 43. Does 'Entity.SelectedCountry' contain 'Turkey'?
    by = By.cssSelector("#Entity_SelectedCountry");
    Assertions.assertTrue(driver.findElement(by).getText().contains("Turkey"));

    // 44. Does 'Entity.Tckn' contain '11111111110'?
    by = By.cssSelector("#Entity_Tckn");
    Assertions.assertTrue(driver.findElement(by).getText().contains("11111111110"));

    // 45. Does 'Entity.Code' contain 'BireyselCode001'?
    by = By.cssSelector("#Entity_Code");
    Assertions.assertTrue(driver.findElement(by).getText().contains("BireyselCode001"));

    // 46. Run Click Until Gone
    clickUntilGone = NetahsilatUtills.clickUntilGone(30);
    by = By.xpath("//button[. = 'Vazgeç']");
    clickUntilGone = (NetahsilatUtills.ClickUntilGone)((ReportingDriver)driver).addons().execute(clickUntilGone, by, -1);

    // 47. Is 'Refresh' visible?
    /* Step is disabled
    by = By.cssSelector("a[class='t-icon t-refresh']");
    driver.findElement(by).isDisplayed();
    */
    // 48. Is 'VendorUserListGrid Refresh' visible?
    by = By.xpath("//div[@id=\"VendorUserListGrid\"]//a[@class='t-icon t-refresh']");
    driver.findElement(by).isDisplayed();

    // 49. Pause for '1000'ms
    driver.manage().timeouts().implicitlyWait(1000, TimeUnit.MILLISECONDS);

    // 50. Click 'Kullanıcı Silme'
    by = By.cssSelector("img[src$$='/trash.png']");
    driver.findElement(by).click();

    // 51. Run Click Until Gone
    clickUntilGone = NetahsilatUtills.clickUntilGone(30);
    by = By.xpath("//button[. = 'Tamam']");
    clickUntilGone = (NetahsilatUtills.ClickUntilGone)((ReportingDriver)driver).addons().execute(clickUntilGone, by, -1);

    // 52. Is 'Refresh' visible?
    by = By.cssSelector("a[class='t-icon t-refresh']");
    driver.findElement(by).isDisplayed();

    // 53. Does 'Gösterilecek Kayıt Bulunamadı.2' contain 'Gösterilecek Kayıt Bulunamadı.'?
    by = By.xpath("//div[3]/div/table//td[. = 'Gösterilecek Kayıt Bulunamadı.']");
    Assertions.assertTrue(driver.findElement(by).getText().contains("Gösterilecek Kayıt Bulunamadı."));

    // 54. Clear 'SearchVendorNameVN' contents
    by = By.cssSelector("#SearchVendorName");
    driver.findElement(by).clear();

    // 55. Type 'KurumsalCode001' in 'SearchVendorNameVN'
    by = By.cssSelector("#SearchVendorName");
    driver.findElement(by).sendKeys("KurumsalCode001");

    // 56. Click '//div[contains(text(),'KurumsalCode001')]'
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(35000, TimeUnit.MILLISECONDS);
    by = By.xpath("//div[contains(text(),'KurumsalCode001')]");
    driver.findElement(by).click();
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 57. Click 'btnListele'
    by = By.xpath("//button[. = 'Listele']");
    driver.findElement(by).click();

    // 58. Does 'kurumsal@test.com' contain 'kurumsal@test.com'?
    by = By.xpath("//td[. = 'kurumsal@test.com']");
    Assertions.assertTrue(driver.findElement(by).getText().contains("kurumsal@test.com"));

    // 59. Click 'EditButton'
    by = By.cssSelector("img[src*='fugue/edit.png']");
    driver.findElement(by).click();

    // 60. Is 'Bayi Bilgileri' visible?
    by = By.xpath("//legend[. = 'Bayi Bilgileri']");
    driver.findElement(by).isDisplayed();

    // 61. Does 'Entity.Email' contain 'kurumsal@test.com'?
    by = By.cssSelector("#Entity_Email");
    Assertions.assertTrue(driver.findElement(by).getText().contains("kurumsal@test.com"));

    // 62. Does 'Entity.TaxNumber' contain '2121212121'?
    by = By.cssSelector("#Entity_TaxNumber");
    Assertions.assertTrue(driver.findElement(by).getText().contains("2121212121"));

    // 63. Is 'input[vendortype='Company']:checked' visible?
    by = By.cssSelector("input[vendortype='Company']:checked");
    driver.findElement(by).isDisplayed();

    // 64. Does 'Entity.TaxOffice' contain 'Esenler V.D'?
    by = By.cssSelector("#Entity_TaxOffice");
    Assertions.assertTrue(driver.findElement(by).getText().contains("Esenler V.D"));

    // 65. Does '//*[@id="s2id_Entity_CustomerHelpId"]/ul/li[1]/div' contain 'admin@netahsilat.com'?
    by = By.xpath("//*[@id=\"s2id_Entity_CustomerHelpId\"]/ul/li[1]/div");
    Assertions.assertTrue(driver.findElement(by).getText().contains("admin@netahsilat.com"));

    // 66. Does 'Entity.ErpCode' contain 'KurumsalCodeErp001'?
    by = By.cssSelector("#Entity_ErpCode");
    Assertions.assertTrue(driver.findElement(by).getText().contains("KurumsalCodeErp001"));

    // 67. Does 'Entity.ContactModel.Phone1Number' contain '(535)1231133'?
    by = By.cssSelector("#Entity_ContactModel_Phone1Number");
    Assertions.assertTrue(driver.findElement(by).getText().contains("(535)1231133"));

    // 68. Does 'Entity.AddressModel.Address' contain 'YTU Teknopark  Esenler / ISTANBUL'?
    by = By.cssSelector("#Entity_AddressModel_Address");
    Assertions.assertTrue(driver.findElement(by).getText().contains("YTU Teknopark  Esenler / ISTANBUL"));

    // 69. Click 'btnCariHesaplar'
    by = By.cssSelector("img[src*='Paper-Money-icon.png']");
    driver.findElement(by).click();

    // 70. Is 'Entity.CurrentAccounts[0].ErpCode' visible?
    by = By.cssSelector("#Entity_CurrentAccounts_0__ErpCode");
    driver.findElement(by).isDisplayed();

    // 71. Click 'Haklar'
    by = By.cssSelector("img[src*='yetki.png']");
    driver.findElement(by).click();

    // 72. Is 'Alt bayi ekleyebilir' visible?
    by = By.xpath("//label[normalize-space()='Alt bayi ekleyebilir']/..//span[@class='mark']");
    driver.findElement(by).isDisplayed();

    // 73. Is 'Ödeme iptali yapabilir' visible?
    by = By.xpath("//label[normalize-space()='Ödeme iptali yapabilir']/..//span[@class='mark']");
    driver.findElement(by).isDisplayed();

    // 74. Run Click Until Gone
    clickUntilGone = NetahsilatUtills.clickUntilGone(30);
    by = By.xpath("//button[. = 'Vazgeç']");
    clickUntilGone = (NetahsilatUtills.ClickUntilGone)((ReportingDriver)driver).addons().execute(clickUntilGone, by, -1);

    // 75. Click 'KullanıcılarıGörüntüleImage'
    by = By.cssSelector("img[src*='fugue/detail.png']");
    driver.findElement(by).click();

    // 76. Is 'VendorUserListGrid Refresh' visible?
    by = By.xpath("//div[@id=\"VendorUserListGrid\"]//a[@class='t-icon t-refresh']");
    driver.findElement(by).isDisplayed();

    // 77. Pause for '1000'ms
    driver.manage().timeouts().implicitlyWait(1000, TimeUnit.MILLISECONDS);

    // 78. Click 'btnPencil'
    clickAction = JSActions.getClickAction();
    by = By.cssSelector("img[src*='fugue/pencil.png']");
    clickAction = (JSActions.ClickAction)((ReportingDriver)driver).addons().execute(clickAction, by, -1);

    // 79. Does 'Bayi Adi' contain 'Kurumsal Bayi Name'?
    by = By.cssSelector("#Entity_Name");
    Assertions.assertTrue(driver.findElement(by).getText().contains("Kurumsal Bayi Name"));

    // 80. Does 'Entity.Surname' contain 'Kurumsal Bayi SurName'?
    by = By.cssSelector("#Entity_Surname");
    Assertions.assertTrue(driver.findElement(by).getText().contains("Kurumsal Bayi SurName"));

    // 81. Does 'Entity.Email' contain 'kurumsal@test.com'?
    by = By.cssSelector("#Entity_Email");
    Assertions.assertTrue(driver.findElement(by).getText().contains("kurumsal@test.com"));

    // 82. Does 'Entity.MobilePhone' contain '(535)1231111'?
    by = By.cssSelector("#Entity_MobilePhone");
    Assertions.assertTrue(driver.findElement(by).getText().contains("(535)1231111"));

    // 83. Does 'Entity.SelectedCountry' contain 'Turkey'?
    by = By.cssSelector("#Entity_SelectedCountry");
    Assertions.assertTrue(driver.findElement(by).getText().contains("Turkey"));

    // 84. Does 'Entity.Code' contain 'KurumsalCode001'?
    by = By.cssSelector("#Entity_Code");
    Assertions.assertTrue(driver.findElement(by).getText().contains("KurumsalCode001"));

    // 85. Is '//input[@id='Entity_IsActive']/..//span[contains(@class,'checked')]' visible?
    by = By.xpath("//input[@id='Entity_IsActive']/..//span[contains(@class,'checked')]");
    driver.findElement(by).isDisplayed();

    // 86. Run Click Until Gone
    clickUntilGone = NetahsilatUtills.clickUntilGone(30);
    by = By.xpath("//button[. = 'Vazgeç']");
    clickUntilGone = (NetahsilatUtills.ClickUntilGone)((ReportingDriver)driver).addons().execute(clickUntilGone, by, -1);

    // 87. Pause for '1000'ms
    driver.manage().timeouts().implicitlyWait(1000, TimeUnit.MILLISECONDS);

    // 88. Click 'Kullanıcı Silme'
    by = By.cssSelector("img[src$$='/trash.png']");
    driver.findElement(by).click();

    // 89. Run Click Until Gone
    clickUntilGone = NetahsilatUtills.clickUntilGone(30);
    by = By.xpath("//button[. = 'Tamam']");
    clickUntilGone = (NetahsilatUtills.ClickUntilGone)((ReportingDriver)driver).addons().execute(clickUntilGone, by, -1);

    // 90. Is 'Refresh' visible?
    by = By.cssSelector("a[class='t-icon t-refresh']");
    driver.findElement(by).isDisplayed();

    // 91. Does 'Gösterilecek Kayıt Bulunamadı.2' contain 'Gösterilecek Kayıt Bulunamadı.'?
    by = By.xpath("//div[3]/div/table//td[. = 'Gösterilecek Kayıt Bulunamadı.']");
    Assertions.assertTrue(driver.findElement(by).getText().contains("Gösterilecek Kayıt Bulunamadı."));

    // 92. Clear 'SearchVendorNameVN' contents
    by = By.cssSelector("#SearchVendorName");
    driver.findElement(by).clear();

    // 93. Type 'KurumsalCode002' in 'SearchVendorNameVN'
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(35000, TimeUnit.MILLISECONDS);
    by = By.cssSelector("#SearchVendorName");
    driver.findElement(by).sendKeys("KurumsalCode002");
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 94. Click '//div[contains(text(),'KurumsalCode002')]'
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(35000, TimeUnit.MILLISECONDS);
    by = By.xpath("//div[contains(text(),'KurumsalCode002')]");
    driver.findElement(by).click();
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 95. Click 'btnListele'
    by = By.xpath("//button[. = 'Listele']");
    driver.findElement(by).click();

    // 96. Click 'Kullanıcı Silme'
    by = By.cssSelector("img[src$$='/trash.png']");
    driver.findElement(by).click();

    // 97. Run Click Until Gone
    clickUntilGone = NetahsilatUtills.clickUntilGone(30);
    by = By.xpath("//button[. = 'Tamam']");
    clickUntilGone = (NetahsilatUtills.ClickUntilGone)((ReportingDriver)driver).addons().execute(clickUntilGone, by, -1);

    // 98. Is 'Refresh' visible?
    by = By.cssSelector("a[class='t-icon t-refresh']");
    driver.findElement(by).isDisplayed();

    // 99. Does 'Gösterilecek Kayıt Bulunamadı.2' contain 'Gösterilecek Kayıt Bulunamadı.'?
    //    Bu case  sadece TaxNumber'ın 11 hane olduğunu kontrol için yapıldığı için diğer stepler kullanılmadı.
    by = By.xpath("//div[3]/div/table//td[. = 'Gösterilecek Kayıt Bulunamadı.']");
    Assertions.assertTrue(driver.findElement(by).getText().contains("Gösterilecek Kayıt Bulunamadı."));

  }

  @Override
  public ReportingDriver getDriver() {
    return (ReportingDriver) driver;
  }

  @AfterAll
  static void tearDown() {
    if (driver != null) {
      driver.quit();
    }
  }

  private static Stream provideParameters() throws Exception {
    return Stream.of(Arguments.of("https://otomasyon.netahsilatdemo.com/Account/LogOff","otomasyon@test.com","Kd!cyhz4"));
  }
}
