package netahsilat;

import io.testproject.addon.DateTimeOperations;
import io.testproject.addon.WebExtensions;
import io.testproject.sdk.drivers.ReportingDriver;
import io.testproject.sdk.drivers.web.RemoteWebDriver;
import io.testproject.sdk.interfaces.junit5.ExceptionsReporter;
import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;

import java.util.concurrent.TimeUnit;
import java.util.stream.Stream;

/**
 * This class was automatically generated by TestProject
 * Project: Quality Museum Project
 * Test: C549 İade
 * Generated by: Ahmet Furkan SIMSEK (furkan.simsek@qualitymuseum.com)
 * Generated on Thu Sep 29 17:50:02 GMT 2022.
 */
@DisplayName("C549 İade")
public class C549 implements ExceptionsReporter {
  public static WebDriver driver;

  @BeforeAll
  static void setup() throws Exception {
    driver = new RemoteWebDriver("wThDxIHw4zNaCydjAhcfe81WrQPYlMBFI7FPwUwV8M41", new ChromeOptions(), "Ahmet Furkan SIMSEK");
  }

  /**
   * In order to upload the test to TestProject need to un-comment @ArgumentsSource and set in comment the @MethodSource
   * @org.junit.jupiter.params.provider.ArgumentsSource(io.testproject.sdk.interfaces.parameterization.TestProjectParameterizer.class) */
  @DisplayName("C549 İade")
  @ParameterizedTest
  @MethodSource("provideParameters")
  void execute(String ApplicationURL, String odemeReferansNumarasi, String password,
      String referansNumarasiOnGrid, String odemeReferansNumarasiRegex, String currentDateTime)
      throws Exception {
    // set timeout for driver actions (similar to step timeout)
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);
    By by;
    boolean booleanResult;
    MethodRefreshLoadingControl methodrefreshloadingcontrol;
    MethodLogoutlogin methodlogoutlogin;
    WebExtensions.SelectOptionbyVisibleText selectOptionbyVisibleText;
    WebExtensions.WaitForAlertPresence waitForAlertPresence;
    WebExtensions.ClickAndHold clickAndHold;
    WebExtensions.ReleaseClick releaseClick;
    DateTimeOperations.SetDays setDays;
    WebExtensions.AcceptAlert acceptAlert;
    WebExtensions.GetAlertText getAlertText;
    DateTimeOperations.CurrentDate currentDate;

    // 1. Run Method Logout&Login
    GeneratedUtils.sleep(500);
    methodlogoutlogin = new MethodLogoutlogin();
    methodlogoutlogin.ApplicationURL = ApplicationURL;
    methodlogoutlogin.userName = ProjectParameters.genelEmail;
    methodlogoutlogin.password = ProjectParameters.genelPassword;
    methodlogoutlogin.execute(driver);

    // 2. Move mouse to 'moveToIslemler'
    by = By.cssSelector("li[class='tag']");
    (new Actions(driver)).moveToElement(driver.findElement(by)).perform();

    // 3. Click 'İŞLEMLER1'
    by = By.xpath("//a[. = 'İŞLEMLER']");
    driver.findElement(by).click();

    // 4. Click 'İŞLEM LİSTESİ'
    by = By.cssSelector("a[title='İŞLEM LİSTESİ']");
    driver.findElement(by).click();

    // 5. Get current date
    currentDate = DateTimeOperations.currentDate("dd.MM.yyyy");
    currentDate = (DateTimeOperations.CurrentDate)((ReportingDriver)driver).addons().execute(currentDate);
    currentDateTime = String.valueOf(currentDate.result);

    // 6. This test was auto generated from steps of the 'C1909-Listelerde ki verilerin maskelenmesi' test
    methodrefreshloadingcontrol = new MethodRefreshLoadingControl();
    methodrefreshloadingcontrol.execute(driver);

    // 7. Clear 'StartDate' contents
    by = By.cssSelector("#StartDate");
    driver.findElement(by).clear();

    // 8. Set '-1' days to '{{currentDateTime}}'
    setDays = DateTimeOperations.setDays("-1",currentDateTime,"dd.MM.yyyy","");
    setDays = (DateTimeOperations.SetDays)((ReportingDriver)driver).addons().execute(setDays);
    currentDateTime = String.valueOf(setDays.result);

    // 9. Clear 'EndDate' contents
    by = By.cssSelector("#EndDate");
    driver.findElement(by).clear();

    // 10. Type '{{currentDateTime}} 23:59' in 'EndDate'
    by = By.cssSelector("#EndDate");
    driver.findElement(by).sendKeys(String.format("%s 23:59",currentDateTime));

    // 11. Select options in 'CancelledRefundedStatusId' with text '[NONE]'
    selectOptionbyVisibleText = WebExtensions.selectOptionbyVisibleText("İptal ya da iade edilmemiş transactions");
    by = By.cssSelector("#CancelledRefundedStatusId");
    selectOptionbyVisibleText = (WebExtensions.SelectOptionbyVisibleText)((ReportingDriver)driver).addons().execute(selectOptionbyVisibleText, by, -1);

    // 12. Move mouse to 'Akbank1'
    by = By.xpath("//option[. = 'Akbank1']");
    (new Actions(driver)).moveToElement(driver.findElement(by)).perform();

    // 13. Click and hold
    clickAndHold = WebExtensions.getClickAndHold();
    clickAndHold = (WebExtensions.ClickAndHold)((ReportingDriver)driver).addons().execute(clickAndHold);

    // 14. Release left mouse button
    releaseClick = WebExtensions.getReleaseClick();
    releaseClick = (WebExtensions.ReleaseClick)((ReportingDriver)driver).addons().execute(releaseClick);

    // 15. Select options in 'VendorTypeId' with text '[NONE]'
    selectOptionbyVisibleText = WebExtensions.selectOptionbyVisibleText("Üyeliksiz");
    by = By.cssSelector("#VendorTypeId");
    selectOptionbyVisibleText = (WebExtensions.SelectOptionbyVisibleText)((ReportingDriver)driver).addons().execute(selectOptionbyVisibleText, by, -1);

    // 16. Click 'btnListele'
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(35000, TimeUnit.MILLISECONDS);
    by = By.xpath("//button[. = 'Listele']");
    driver.findElement(by).click();
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 17. This test was auto generated from steps of the 'C1909-Listelerde ki verilerin maskelenmesi' test
    methodrefreshloadingcontrol = new MethodRefreshLoadingControl();
    methodrefreshloadingcontrol.execute(driver);

    // 18. Is 'iadeFromGrid' visible?
    by = By.cssSelector("a[href*='Refund']");
    driver.findElement(by).isDisplayed();

    // 19. Click 'iadeFromGrid'
    by = By.cssSelector("a[href*='Refund']");
    driver.findElement(by).click();

    // 20. Clear 'inputRefundPopup' contents
    by = By.cssSelector("input[type='text'][value*=',']");
    driver.findElement(by).clear();

    // 21. Type '1,00' in 'inputRefundPopup'
    by = By.cssSelector("input[type='text'][value*=',']");
    driver.findElement(by).sendKeys("1,00");

    // 22. Type 'Test otomasyon ödeme iadesi ***' in 'TransactionDescripton'
    by = By.cssSelector("#TransactionDescripton");
    driver.findElement(by).sendKeys("Test otomasyon ödeme iadesi ***");

    // 23. Click 'buttonKaydiTamamla'
    by = By.xpath("//button[. = 'Tamam']");
    driver.findElement(by).click();

    // 24. Is 'txtIslemYapiliyor' visible?
    by = By.xpath("//*[text()='İşlem yapılıyor. Lütfen bekleyiniz...']");
    driver.findElement(by).isDisplayed();

    // 25. Is alert displayed?
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(35000, TimeUnit.MILLISECONDS);
    waitForAlertPresence = WebExtensions.waitForAlertPresence(50000);
    waitForAlertPresence = (WebExtensions.WaitForAlertPresence)((ReportingDriver)driver).addons().execute(waitForAlertPresence);
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 26. Get alert text
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(50000, TimeUnit.MILLISECONDS);
    getAlertText = WebExtensions.getGetAlertText();
    getAlertText = (WebExtensions.GetAlertText)((ReportingDriver)driver).addons().execute(getAlertText);
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 27. Accept alert
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(35000, TimeUnit.MILLISECONDS);
    acceptAlert = WebExtensions.acceptAlert(0);
    acceptAlert = (WebExtensions.AcceptAlert)((ReportingDriver)driver).addons().execute(acceptAlert);
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

  }

  @Override
  public ReportingDriver getDriver() {
    return (ReportingDriver) driver;
  }

  @AfterAll
  static void tearDown() {
    if (driver != null) {
      driver.quit();
    }
  }

  private static Stream provideParameters() throws Exception {
    return Stream.of(Arguments.of("https://otomasyon.netahsilatdemo.com/Account/LogOff","","Kd!cyhz4","","",""));
  }
}
