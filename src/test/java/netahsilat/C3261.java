package netahsilat;

import io.testproject.addon.DateTimeOperations;
import io.testproject.addon.DecodeQRcodetostring;
import io.testproject.addon.ImapMailOperations;
import io.testproject.addon.VisibleElementsOperations;
import io.testproject.sdk.drivers.ReportingDriver;
import io.testproject.sdk.drivers.web.RemoteWebDriver;
import io.testproject.sdk.interfaces.junit5.ExceptionsReporter;
import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import java.util.concurrent.TimeUnit;
import java.util.stream.Stream;

/**
 * This class was automatically generated by TestProject
 * Project: Quality Museum Project
 * Test: C3261
 * Generated by: Ahmet Furkan SIMSEK (furkan.simsek@qualitymuseum.com)
 * Generated on Sun Oct 09 20:46:07 GMT 2022.
 */
@DisplayName("C3261")
public class C3261 implements ExceptionsReporter {
  public static WebDriver driver;

  @BeforeAll
  static void setup() throws Exception {
    driver = new RemoteWebDriver("wThDxIHw4zNaCydjAhcfe81WrQPYlMBFI7FPwUwV8M41", new ChromeOptions(), "Ahmet Furkan SIMSEK");
  }

  /**
   * In order to upload the test to TestProject need to un-comment @ArgumentsSource and set in comment the @MethodSource
   * @org.junit.jupiter.params.provider.ArgumentsSource(io.testproject.sdk.interfaces.parameterization.TestProjectParameterizer.class) */
  @DisplayName("C3261")
  @ParameterizedTest
  @MethodSource("provideParameters")
  void execute(String ApplicationURL, String userName, String password, String CurrentDate,
      String TwoMountsLater, String QRUrl) throws Exception {
    // set timeout for driver actions (similar to step timeout)
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);
    By by;
    boolean booleanResult;
    MethodLogin methodlogin;
    String string;
    ImapMailOperations.ReadSpecificsMail readSpecificsMail;
    DecodeQRcodetostring.ReadQRWebElement readQRWebElement;
    ImapMailOperations.DeleteAllMails deleteAllMails;
    VisibleElementsOperations.ClickIfVisibleWeb clickIfVisibleWeb;
    DateTimeOperations.SetMonths setMonths;
    DateTimeOperations.CurrentDate currentDate;

    // 1. Navigate to '{{Otomasyon2Logout}}'
    driver.navigate().to(ProjectParameters.Otomasyon2Logout);

    // 2. Run Method Login
    methodlogin = new MethodLogin();
    methodlogin.ApplicationURL = ApplicationURL;
    methodlogin.userName = "bireyselanabayi@otomasyon.com";
    methodlogin.password = ProjectParameters.genelPassword;
    methodlogin.execute(driver);

    // 3. Delete All Mails
    deleteAllMails = ImapMailOperations.deleteAllMails(ProjectParameters.odemeEmail,ProjectParameters.yandexMailKey);
    deleteAllMails = (ImapMailOperations.DeleteAllMails)((ReportingDriver)driver).addons().execute(deleteAllMails);

    // 4. Click 'YÖNETİCİ'
    by = By.xpath("//a[. = 'YÖNETİCİ']");
    driver.findElement(by).click();

    // 5. Move mouse to 'moveUstUyeYonetimi'
    by = By.cssSelector("li[class='content']");
    (new Actions(driver)).moveToElement(driver.findElement(by)).perform();

    // 6. Click 'ustUyeYonetimi2'
    by = By.xpath("//li/a[. = 'ÜYE YÖNETİMİ']");
    driver.findElement(by).click();

    // 7. Click 'altUyeYonetimi'
    by = By.xpath("//li[1]/a[. = 'ÜYE YÖNETİMİ']");
    driver.findElement(by).click();

    // 8. Is 'Refresh' visible?
    GeneratedUtils.sleep(500);
    by = By.cssSelector("a[class='t-icon t-refresh']");
    driver.findElement(by).isDisplayed();

    // 9. Type 'bireyselaltbayi@otomasyon.com' in 'SearchVendorName'
    by = By.cssSelector("#SearchVendorName");
    driver.findElement(by).sendKeys("bireyselaltbayi@otomasyon.com");

    // 10. Click 'resultListelenen'
    by = By.xpath("//body/ul//div");
    driver.findElement(by).click();

    // 11. Click 'Listele'
    by = By.xpath("//button[. = 'Listele']");
    driver.findElement(by).click();

    // 12. Is 'Refresh' visible?
    GeneratedUtils.sleep(500);
    by = By.cssSelector("a[class='t-icon t-refresh']");
    driver.findElement(by).isDisplayed();

    // 13. Click 'Ödeme'
    by = By.xpath("//a[. = 'Ödeme']");
    driver.findElement(by).click();

    // 14. Switch to window '1'
    driver.switchTo().window(driver.getWindowHandles().toArray(new String[0])[1]);

    // 15. Click 'Masterpass Close button' if it's visible
    clickIfVisibleWeb = VisibleElementsOperations.clickIfVisibleWeb("3");
    by = By.xpath("//div[@data-bind=\"visible: masterPassStep() == 'mp-update-identity'\"]//button[@type='button'][normalize-space()='×']");
    clickIfVisibleWeb = (VisibleElementsOperations.ClickIfVisibleWeb)((ReportingDriver)driver).addons().execute(clickIfVisibleWeb, by, -1);

    // 16. Is 'Bireysel Alt Bayi (Silmeyiniz-Değişti...' visible?
    by = By.xpath("//strong[. = 'Bireysel Alt Bayi (Silmeyiniz-Değiştirmeyiniz)']");
    driver.findElement(by).isDisplayed();

    // 17. Click 'KART KAYDI LİNKİ'
    by = By.xpath("//a[. = 'KART KAYDI LİNKİ']");
    driver.findElement(by).click();

    // 18. Click 'EmailTypeSelection (Unchecked)'
    by = By.cssSelector("#EmailTypeSelection:not(:checked)");
    driver.findElement(by).click();

    // 19. Is 'BireyselAltBayiCheckbox' visible?
    by = By.xpath("//td[text()='bireyselaltbayi@otomasyon.com']/..//td//input[@type='checkbox']");
    driver.findElement(by).isDisplayed();

    // 20. Is 'bireyselaltbayi@otomasyon.com' visible?
    by = By.xpath("//td[. = 'bireyselaltbayi@otomasyon.com']");
    driver.findElement(by).isDisplayed();

    // 21. Is 'Bireysel Alt Bayi' visible?
    by = By.xpath("//td[. = 'Bireysel  Alt Bayi']");
    driver.findElement(by).isDisplayed();

    // 22. Click 'Gönder'
    by = By.xpath("//button[. = 'Gönder']");
    driver.findElement(by).click();

    // 23. Is 'İşleminiz başarıyla tamamlanmıştır' visible?
    by = By.xpath("//h4[. = 'İşleminiz başarıyla tamamlanmıştır']");
    driver.findElement(by).isDisplayed();

    // 24. Is 'Ana Sayfa' visible?
    by = By.xpath("//a[. = 'Ana Sayfa']");
    driver.findElement(by).isDisplayed();

    // 25. Is 'Kart Kayıt Linki Gönder' visible?
    by = By.xpath("//a[. = 'Kart Kayıt Linki Gönder ']");
    driver.findElement(by).isDisplayed();

    // 26. Click 'Kart Kayıt Linki Gönder'
    by = By.xpath("//a[. = 'Kart Kayıt Linki Gönder ']");
    driver.findElement(by).click();

    // 27. Click 'EmailTypeSelection (Unchecked)'
    by = By.cssSelector("#EmailTypeSelection:not(:checked)");
    driver.findElement(by).click();

    // 28. Type 'TestKartLink' in 'NewUserFullName'
    by = By.cssSelector("#NewUserFullName");
    driver.findElement(by).sendKeys("TestKartLink");

    // 29. Type 'netahsilatotomasyon@yandex.com' in 'NewUserEmail'
    by = By.cssSelector("#NewUserEmail");
    driver.findElement(by).sendKeys("netahsilatotomasyon@yandex.com");

    // 30. Type '5554443322' in 'NewUserPhone'
    by = By.cssSelector("#NewUserPhone");
    driver.findElement(by).sendKeys("5554443322");

    // 31. Click 'Ekle'
    by = By.xpath("//button[. = 'Ekle']");
    driver.findElement(by).click();

    // 32. Is 'TestKartLink Checkbox' visible and selected?
    by = By.xpath("//td[text()='TestKartLink']/..//input[1]");
    (new WebDriverWait(driver, 15)).until(ExpectedConditions.elementSelectionStateToBe(by, true));

    // 33. Click 'Gönder'
    by = By.xpath("//button[. = 'Gönder']");
    driver.findElement(by).click();

    // 34. Output searched string in specific mail
    readSpecificsMail = ImapMailOperations.readSpecificsMail(ProjectParameters.odemeEmail,ProjectParameters.yandexMailKey,"Otomasyon2 E-Çözüm","C:/TestProject/mail/C3261.html");
    readSpecificsMail = (ImapMailOperations.ReadSpecificsMail)((ReportingDriver)driver).addons().execute(readSpecificsMail);

    // 35. Navigate to 'file:///C:/TestProject/mail/C3261.html'
    driver.navigate().to("file:///C:/TestProject/mail/C3261.html");

    // 36. Get current date
    currentDate = DateTimeOperations.currentDate("dd.MM.yyyy");
    currentDate = (DateTimeOperations.CurrentDate)((ReportingDriver)driver).addons().execute(currentDate);
    CurrentDate = String.valueOf(currentDate.result);

    // 37. Set '2' months to '{{CurrentDate}}'
    setMonths = DateTimeOperations.setMonths("2",CurrentDate,"dd.MM.yyyy","dd.MM.yyyy");
    setMonths = (DateTimeOperations.SetMonths)((ReportingDriver)driver).addons().execute(setMonths);
    TwoMountsLater = String.valueOf(setMonths.result);

    // 38. Does 'site' contain 'http://otomasyon2.netahsilatdemo.com/'?
    by = By.cssSelector("#SITE");
    Assertions.assertTrue(driver.findElement(by).getText().contains("http://otomasyon2.netahsilatdemo.com/"));

    // 39. Does 'FIRMA (Mail)' contain 'Otomasyon2 E-Çözüm'?
    by = By.cssSelector("#FIRMA");
    Assertions.assertTrue(driver.findElement(by).getText().contains("Otomasyon2 E-Çözüm"));

    // 40. Get text from 'Zaman Asımı2'
    by = By.cssSelector("#ZAMAN_ASIMI");
    string = driver.findElement(by).getAttribute("value");
    Assertions.assertTrue(string.startsWith(TwoMountsLater));

    // 41. Does 'Unvan (Mail)' contain 'Bireysel Alt Bayi (Silmeyiniz-Değiştirmeyiniz)'?
    by = By.cssSelector("#UNVAN");
    Assertions.assertTrue(driver.findElement(by).getText().contains("Bireysel Alt Bayi (Silmeyiniz-Değiştirmeyiniz)"));

    // 42. Does 'EMail' contain 'netahsilatotomasyon@yandex.com'?
    by = By.cssSelector("#EMail");
    Assertions.assertTrue(driver.findElement(by).getText().contains("netahsilatotomasyon@yandex.com"));

    // 43. Get text from 'GONDERIM TARIHI (Mail)'
    by = By.cssSelector("#GONDERIM_TARIHI");
    string = driver.findElement(by).getAttribute("value");
    Assertions.assertTrue(string.startsWith(CurrentDate));

    // 44. Does 'Telefon (Mail)' contain '(555)4443322'?
    by = By.cssSelector("#TELEFON");
    Assertions.assertTrue(driver.findElement(by).getText().contains("(555)4443322"));

    // 45. Get text from 'KAYIT_LINKI'
    by = By.cssSelector("#KAYIT_LINKI");
    string = driver.findElement(by).getAttribute("value");
    Assertions.assertTrue(string.startsWith("https://otomasyon2.netahsilatdemo.com/usercreditcard/addcardvialink?"));

    // 46. Does 'MOBIL_KOD' contain 'OTOMASYON2'?
    by = By.cssSelector("#MOBIL_KOD");
    Assertions.assertTrue(driver.findElement(by).getText().contains("OTOMASYON2"));

    // 47. Does 'Bayi Kodu ' contain 'BireyselAltBayi'?
    by = By.cssSelector("#BAYI_KODU");
    Assertions.assertTrue(driver.findElement(by).getText().contains("BireyselAltBayi"));

    // 48. Does 'BAYI_ERP_KODU' contain 'BireyselAltBayiErp'?
    by = By.cssSelector("#BAYI_ERP_KODU");
    Assertions.assertTrue(driver.findElement(by).getText().contains("BireyselAltBayiErp"));

    // 49. Does 'Musteri Temsilcisi (Mail)' contain 'Bireysel Ana Bayi'?
    by = By.cssSelector("#MUSTERI_TEMSILCISI");
    Assertions.assertTrue(driver.findElement(by).getText().contains("Bireysel Ana Bayi"));

    // 50. Navigate back
    driver.navigate().back();

    // 51. Click 'Kart Kayıt Linki Gönder'
    by = By.xpath("//a[. = 'Kart Kayıt Linki Gönder ']");
    driver.findElement(by).click();

    // 52. Click 'EmailTypeSelection (Checked)' if it's visible
    clickIfVisibleWeb = VisibleElementsOperations.clickIfVisibleWeb("1");
    by = By.cssSelector("#EmailTypeSelection:checked");
    clickIfVisibleWeb = (VisibleElementsOperations.ClickIfVisibleWeb)((ReportingDriver)driver).addons().execute(clickIfVisibleWeb, by, -1);

    // 53. Click 'SmsTypeSelection (Checked)' if it's visible
    clickIfVisibleWeb = VisibleElementsOperations.clickIfVisibleWeb("1");
    by = By.cssSelector("#SmsTypeSelection:checked");
    clickIfVisibleWeb = (VisibleElementsOperations.ClickIfVisibleWeb)((ReportingDriver)driver).addons().execute(clickIfVisibleWeb, by, -1);

    // 54. Click 'QrTypeSelection (UnChecked)'
    by = By.cssSelector("#QrTypeSelection:not(:checked)");
    driver.findElement(by).click();

    // 55. Click 'Gönder'
    by = By.xpath("//button[. = 'Gönder']");
    driver.findElement(by).click();

    // 56. Is 'QR Kodu İmage' visible?
    by = By.xpath("//img[contains(@src,'data:image/png')]");
    driver.findElement(by).isDisplayed();

    // 57. Reads QR code contents from selected web element
    readQRWebElement = DecodeQRcodetostring.getReadQRWebElement();
    by = By.xpath("//img[contains(@src,'data:image/png')]");
    readQRWebElement = (DecodeQRcodetostring.ReadQRWebElement)((ReportingDriver)driver).addons().execute(readQRWebElement, by, -1);
    QRUrl = String.valueOf(readQRWebElement.output);

    // 58. Navigate to '{{QRUrl}}'
    driver.navigate().to(QRUrl);

    // 59. Is 'Masterpass kart saklama alt yapısı ku...1' visible?
    by = By.xpath("//a[. = 'Masterpass kart saklama alt yapısı kullanım şartlarını okudum, onaylıyorum']");
    driver.findElement(by).isDisplayed();

  }

  @Override
  public ReportingDriver getDriver() {
    return (ReportingDriver) driver;
  }

  @AfterAll
  static void tearDown() {
    if (driver != null) {
      driver.quit();
    }
  }

  private static Stream provideParameters() throws Exception {
    return Stream.of(Arguments.of("https://otomasyon2.netahsilatdemo.com/","otomasyon@test.com","Kd!cyhz4","","",""));
  }
}
