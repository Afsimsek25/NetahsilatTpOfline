package netahsilat;

import io.testproject.addon.*;
import io.testproject.sdk.drivers.ReportingDriver;
import io.testproject.sdk.drivers.web.RemoteWebDriver;
import io.testproject.sdk.interfaces.junit5.ExceptionsReporter;
import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import java.util.concurrent.TimeUnit;
import java.util.stream.Stream;

/**
 * This class was automatically generated by TestProject
 * Project: Quality Museum Project
 * Test: C1717 Ödeme kalemi çoklu seçilerek ödeme işleminin tamamlanması - İşlem ve Mail Detayında Gözükmesi (1.21.03-NTH-13621)
 * Generated by: Ahmet Furkan SIMSEK (furkan.simsek@qualitymuseum.com)
 * Generated on Mon Oct 10 08:33:49 GMT 2022.
 */
@DisplayName("C1717 Ödeme kalemi çoklu seçilerek ödeme işleminin tamamlanması - İşlem ve Mail Detayında Gözükmesi (1.21.03-NTH-13621)")
public class C1717 implements ExceptionsReporter {
  public static WebDriver driver;

  @BeforeAll
  static void setup() throws Exception {
    driver = new RemoteWebDriver("wThDxIHw4zNaCydjAhcfe81WrQPYlMBFI7FPwUwV8M41", new ChromeOptions(), "Ahmet Furkan SIMSEK");
  }

  /**
   * In order to upload the test to TestProject need to un-comment @ArgumentsSource and set in comment the @MethodSource
   * @org.junit.jupiter.params.provider.ArgumentsSource(io.testproject.sdk.interfaces.parameterization.TestProjectParameterizer.class) */
  @DisplayName("C1717 Ödeme kalemi çoklu seçilerek ödeme işleminin tamamlanması - İşlem ve Mail Detayında Gözükmesi (1.21.03-NTH-13621)")
  @ParameterizedTest
  @MethodSource("provideParameters")
  void execute(String ApplicationURL, String password, String currentDateTime, String SeciliUrunler,
      String SeciliOlmayanUrunler, String ToplamUrunSayisi, String kartNo, String CVV, String ayYil,
      String adSoyad, String ReferansNumarasi, String userName) throws Exception {
    // set timeout for driver actions (similar to step timeout)
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);
    By by;
    boolean booleanResult;
    MethodParametrikdemesadeceKartTypeTextWithDelayIsimsiz methodparametrikdemesadecekarttypetextwithdelayisimsiz;
    MethodLogoutlogin methodlogoutlogin;
    String string;
    ElementExtensions.CountElementsFoundByWeb countElementsFoundByWeb;
    MathematicalUtilities.EvaluateMathExpr evaluateMathExpr;
    ImapMailOperations.ReadSpecificsMail readSpecificsMail;
    StringUtils.GetStringSubstring getStringSubstring;
    WebExtensions.SetElementAttribute setElementAttribute;

    // 1. Navigate to '{{UyeliksizOdemeURL}}'
    driver.navigate().to(ProjectParameters.UyeliksizOdemeURL);

    // 2. Click 'Tanımlı Ödeme'
    by = By.xpath("//span[. = 'Tanımlı Ödeme']");
    driver.findElement(by).click();

    // 3. Is 'dropDownOdemeKalemleri' visible?
    /* Step is disabled
    by = By.cssSelector("button[class='btn btn-middle dropdown-toggle']");
    driver.findElement(by).isDisplayed();
    */
    // 4. Click 'dropDownOdemeKalemleri'
    /* Step is disabled
    by = By.cssSelector("button[class='btn btn-middle dropdown-toggle']");
    driver.findElement(by).click();
    */
    // 5. Click 'Tablet 100 TL checkbox'
    by = By.xpath("(//td[text()='Tablet 100 TL']/..)[1]//input");
    driver.findElement(by).click();

    // 6. Is 'Tablet 100 TL checkbox' visible and selected?
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(2000, TimeUnit.MILLISECONDS);
    by = By.xpath("(//td[text()='Tablet 100 TL']/..)[1]//input");
    (new WebDriverWait(driver, 2)).until(ExpectedConditions.elementSelectionStateToBe(by, true));
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 7. Click 'Telefon 200 TL Checkbox'
    by = By.xpath("//td[text()='Telefon 200 TL']/..//input");
    driver.findElement(by).click();

    // 8. Is 'Telefon 200 TL Checkbox' visible and selected?
    by = By.xpath("//td[text()='Telefon 200 TL']/..//input");
    (new WebDriverWait(driver, 15)).until(ExpectedConditions.elementSelectionStateToBe(by, true));

    // 9. Count element found by '[NONE]'
    //    Toplam Checkbox sayısı
    countElementsFoundByWeb = ElementExtensions.countElementsFoundByWeb("XPATH","//tbody[@data-bind=\"foreach: availablePaymentItemList\"]//input","");
    countElementsFoundByWeb = (ElementExtensions.CountElementsFoundByWeb)((ReportingDriver)driver).addons().execute(countElementsFoundByWeb);
    ToplamUrunSayisi = String.valueOf(countElementsFoundByWeb.amount);

    // 10. Count element found by '[NONE]'
    //    Seçili olan Checkbox sayisi

    countElementsFoundByWeb = ElementExtensions.countElementsFoundByWeb("XPATH","//tbody[@data-bind=\"foreach: availablePaymentItemList\"]//input[not(@disabled)]","");
    countElementsFoundByWeb = (ElementExtensions.CountElementsFoundByWeb)((ReportingDriver)driver).addons().execute(countElementsFoundByWeb);
    SeciliUrunler = String.valueOf(countElementsFoundByWeb.amount);

    // 11. Count element found by '[NONE]'
    //    Seçili olmayanlar Checkbox Sayisi
    countElementsFoundByWeb = ElementExtensions.countElementsFoundByWeb("XPATH","//tbody[@data-bind=\"foreach: availablePaymentItemList\"]//input[(@disabled)]","");
    countElementsFoundByWeb = (ElementExtensions.CountElementsFoundByWeb)((ReportingDriver)driver).addons().execute(countElementsFoundByWeb);
    SeciliOlmayanUrunler = String.valueOf(countElementsFoundByWeb.amount);

    // 12. Evaluate '{{SeciliOlmayanUrunler}}+{{SeciliUrunler}}'
    //    disable olanlar ve enable olanların toplamı = Bütün checkbox sayısına
    evaluateMathExpr = MathematicalUtilities.evaluateMathExpr(String.format("%s+%s",SeciliOlmayanUrunler,SeciliUrunler));
    evaluateMathExpr = (MathematicalUtilities.EvaluateMathExpr)((ReportingDriver)driver).addons().execute(evaluateMathExpr);

    // 13. Click 'Tablet 100 TL checkbox'
    by = By.xpath("(//td[text()='Tablet 100 TL']/..)[1]//input");
    driver.findElement(by).click();

    // 14. Is 'Tablet 100 TL checkbox' visible and selected?
    //    INVERT STEP RESULT

    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(2000, TimeUnit.MILLISECONDS);
    try {
      by = By.xpath("(//td[text()='Tablet 100 TL']/..)[1]//input");
      (new WebDriverWait(driver, 2)).until(ExpectedConditions.elementSelectionStateToBe(by, true));
      Assertions.fail("Step 'Is 'Tablet 100 TL checkbox' visible and selected?' result inverted, step failed");
    }
    catch (RuntimeException ex) {
    }
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 15. Click 'Telefon 200 TL Checkbox'
    by = By.xpath("//td[text()='Telefon 200 TL']/..//input");
    driver.findElement(by).click();

    // 16. Is 'Telefon 200 TL Checkbox' visible and selected?
    //    INVERT STEP RESULT

    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(2000, TimeUnit.MILLISECONDS);
    try {
      by = By.xpath("//td[text()='Telefon 200 TL']/..//input");
      (new WebDriverWait(driver, 2)).until(ExpectedConditions.elementSelectionStateToBe(by, true));
      Assertions.fail("Step 'Is 'Telefon 200 TL Checkbox' visible and selected?' result inverted, step failed");
    }
    catch (RuntimeException ex) {
    }
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 17. Click 'Televizyon 500 USD checkbox'
    by = By.xpath("//td[text()='Televizyon 500 USD']/..//input");
    driver.findElement(by).click();

    // 18. Is 'Televizyon 500 USD checkbox' visible and selected?
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(2000, TimeUnit.MILLISECONDS);
    by = By.xpath("//td[text()='Televizyon 500 USD']/..//input");
    (new WebDriverWait(driver, 2)).until(ExpectedConditions.elementSelectionStateToBe(by, true));
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 19. Click 'Bilgisayar 400 USD Checkbox'
    by = By.xpath("//td[text()='Bilgisayar 400 USD']/..//input");
    driver.findElement(by).click();

    // 20. Is 'Bilgisayar 400 USD Checkbox' visible and selected?
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(2000, TimeUnit.MILLISECONDS);
    by = By.xpath("//td[text()='Bilgisayar 400 USD']/..//input");
    (new WebDriverWait(driver, 2)).until(ExpectedConditions.elementSelectionStateToBe(by, true));
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 21. Count element found by '[NONE]'
    //    Toplam Checkbox sayısı
    countElementsFoundByWeb = ElementExtensions.countElementsFoundByWeb("XPATH","//tbody[@data-bind=\"foreach: availablePaymentItemList\"]//input","");
    countElementsFoundByWeb = (ElementExtensions.CountElementsFoundByWeb)((ReportingDriver)driver).addons().execute(countElementsFoundByWeb);
    ToplamUrunSayisi = String.valueOf(countElementsFoundByWeb.amount);

    // 22. Count element found by '[NONE]'
    //    Seçili olan Checkbox sayisi

    countElementsFoundByWeb = ElementExtensions.countElementsFoundByWeb("XPATH","//tbody[@data-bind=\"foreach: availablePaymentItemList\"]//input[not(@disabled)]","");
    countElementsFoundByWeb = (ElementExtensions.CountElementsFoundByWeb)((ReportingDriver)driver).addons().execute(countElementsFoundByWeb);
    SeciliUrunler = String.valueOf(countElementsFoundByWeb.amount);

    // 23. Count element found by '[NONE]'
    //    Seçili olmayanlar Checkbox Sayisi
    countElementsFoundByWeb = ElementExtensions.countElementsFoundByWeb("XPATH","//tbody[@data-bind=\"foreach: availablePaymentItemList\"]//input[(@disabled)]","");
    countElementsFoundByWeb = (ElementExtensions.CountElementsFoundByWeb)((ReportingDriver)driver).addons().execute(countElementsFoundByWeb);
    SeciliOlmayanUrunler = String.valueOf(countElementsFoundByWeb.amount);

    // 24. Evaluate '{{SeciliOlmayanUrunler}}+{{SeciliUrunler}}'
    //    disable olanlar ve enable olanların toplamı = Bütün checkbox sayısına
    evaluateMathExpr = MathematicalUtilities.evaluateMathExpr(String.format("%s+%s",SeciliOlmayanUrunler,SeciliUrunler));
    evaluateMathExpr = (MathematicalUtilities.EvaluateMathExpr)((ReportingDriver)driver).addons().execute(evaluateMathExpr);

    // 25. Click 'Televizyon 500 USD checkbox'
    by = By.xpath("//td[text()='Televizyon 500 USD']/..//input");
    driver.findElement(by).click();

    // 26. Is 'Televizyon 500 USD checkbox' visible and selected?
    //    INVERT STEP RESULT

    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(2000, TimeUnit.MILLISECONDS);
    try {
      by = By.xpath("//td[text()='Televizyon 500 USD']/..//input");
      (new WebDriverWait(driver, 2)).until(ExpectedConditions.elementSelectionStateToBe(by, true));
      Assertions.fail("Step 'Is 'Televizyon 500 USD checkbox' visible and selected?' result inverted, step failed");
    }
    catch (RuntimeException ex) {
    }
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 27. Click 'Bilgisayar 400 USD Checkbox'
    by = By.xpath("//td[text()='Bilgisayar 400 USD']/..//input");
    driver.findElement(by).click();

    // 28. Is 'Bilgisayar 400 USD Checkbox' visible and selected?
    //    INVERT STEP RESULT

    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(2000, TimeUnit.MILLISECONDS);
    try {
      by = By.xpath("//td[text()='Bilgisayar 400 USD']/..//input");
      (new WebDriverWait(driver, 2)).until(ExpectedConditions.elementSelectionStateToBe(by, true));
      Assertions.fail("Step 'Is 'Bilgisayar 400 USD Checkbox' visible and selected?' result inverted, step failed");
    }
    catch (RuntimeException ex) {
    }
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 29. Click 'Bilgisayar 400 TL Provizyon Checkbox'
    by = By.xpath("//td[text()='Bilgisayar 400 TL Provizyon']/..//input");
    driver.findElement(by).click();

    // 30. Is 'Bilgisayar 400 TL Provizyon Checkbox' visible and selected?
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(2000, TimeUnit.MILLISECONDS);
    by = By.xpath("//td[text()='Bilgisayar 400 TL Provizyon']/..//input");
    (new WebDriverWait(driver, 2)).until(ExpectedConditions.elementSelectionStateToBe(by, true));
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 31. Count element found by '[NONE]'
    //    Toplam Checkbox sayısı
    countElementsFoundByWeb = ElementExtensions.countElementsFoundByWeb("XPATH","//tbody[@data-bind=\"foreach: availablePaymentItemList\"]//input","");
    countElementsFoundByWeb = (ElementExtensions.CountElementsFoundByWeb)((ReportingDriver)driver).addons().execute(countElementsFoundByWeb);
    ToplamUrunSayisi = String.valueOf(countElementsFoundByWeb.amount);

    // 32. Count element found by '[NONE]'
    //    Seçili olan Checkbox sayisi

    countElementsFoundByWeb = ElementExtensions.countElementsFoundByWeb("XPATH","//tbody[@data-bind=\"foreach: availablePaymentItemList\"]//input[not(@disabled)]","");
    countElementsFoundByWeb = (ElementExtensions.CountElementsFoundByWeb)((ReportingDriver)driver).addons().execute(countElementsFoundByWeb);
    SeciliUrunler = String.valueOf(countElementsFoundByWeb.amount);

    // 33. Count element found by '[NONE]'
    //    Seçili olmayanlar Checkbox Sayisi
    countElementsFoundByWeb = ElementExtensions.countElementsFoundByWeb("XPATH","//tbody[@data-bind=\"foreach: availablePaymentItemList\"]//input[(@disabled)]","");
    countElementsFoundByWeb = (ElementExtensions.CountElementsFoundByWeb)((ReportingDriver)driver).addons().execute(countElementsFoundByWeb);
    SeciliOlmayanUrunler = String.valueOf(countElementsFoundByWeb.amount);

    // 34. Evaluate '{{SeciliOlmayanUrunler}}+{{SeciliUrunler}}'
    //    disable olanlar ve enable olanların toplamı = Bütün checkbox sayısına
    evaluateMathExpr = MathematicalUtilities.evaluateMathExpr(String.format("%s+%s",SeciliOlmayanUrunler,SeciliUrunler));
    evaluateMathExpr = (MathematicalUtilities.EvaluateMathExpr)((ReportingDriver)driver).addons().execute(evaluateMathExpr);

    // 35. Click 'Bilgisayar 400 TL Provizyon Checkbox'
    by = By.xpath("//td[text()='Bilgisayar 400 TL Provizyon']/..//input");
    driver.findElement(by).click();

    // 36. Is 'Bilgisayar 400 TL Provizyon Checkbox' visible and selected?
    //    INVERT STEP RESULT

    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(2000, TimeUnit.MILLISECONDS);
    try {
      by = By.xpath("//td[text()='Bilgisayar 400 TL Provizyon']/..//input");
      (new WebDriverWait(driver, 2)).until(ExpectedConditions.elementSelectionStateToBe(by, true));
      Assertions.fail("Step 'Is 'Bilgisayar 400 TL Provizyon Checkbox' visible and selected?' result inverted, step failed");
    }
    catch (RuntimeException ex) {
    }
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 37. Click 'Televizyon 500 TL Checkbox'
    by = By.xpath("//td[text()='Televizyon 500 TL']/..//input");
    driver.findElement(by).click();

    // 38. Is 'Televizyon 500 TL Checkbox' visible and selected?
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(2000, TimeUnit.MILLISECONDS);
    by = By.xpath("//td[text()='Televizyon 500 TL']/..//input");
    (new WebDriverWait(driver, 2)).until(ExpectedConditions.elementSelectionStateToBe(by, true));
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 39. Click 'Bilgisayar 400 TL Checkbox'
    by = By.xpath("//td[text()='Bilgisayar 400 TL']/..//input");
    driver.findElement(by).click();

    // 40. Is 'Bilgisayar 400 TL Checkbox' visible and selected?
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(2000, TimeUnit.MILLISECONDS);
    by = By.xpath("//td[text()='Bilgisayar 400 TL']/..//input");
    (new WebDriverWait(driver, 2)).until(ExpectedConditions.elementSelectionStateToBe(by, true));
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 41. Count element found by '[NONE]'
    //    Toplam Checkbox sayısı
    countElementsFoundByWeb = ElementExtensions.countElementsFoundByWeb("XPATH","//tbody[@data-bind=\"foreach: availablePaymentItemList\"]//input","");
    countElementsFoundByWeb = (ElementExtensions.CountElementsFoundByWeb)((ReportingDriver)driver).addons().execute(countElementsFoundByWeb);
    ToplamUrunSayisi = String.valueOf(countElementsFoundByWeb.amount);

    // 42. Count element found by '[NONE]'
    //    Seçili olan Checkbox sayisi

    countElementsFoundByWeb = ElementExtensions.countElementsFoundByWeb("XPATH","//tbody[@data-bind=\"foreach: availablePaymentItemList\"]//input[not(@disabled)]","");
    countElementsFoundByWeb = (ElementExtensions.CountElementsFoundByWeb)((ReportingDriver)driver).addons().execute(countElementsFoundByWeb);
    SeciliUrunler = String.valueOf(countElementsFoundByWeb.amount);

    // 43. Count element found by '[NONE]'
    //    Seçili olmayanlar Checkbox Sayisi
    countElementsFoundByWeb = ElementExtensions.countElementsFoundByWeb("XPATH","//tbody[@data-bind=\"foreach: availablePaymentItemList\"]//input[(@disabled)]","");
    countElementsFoundByWeb = (ElementExtensions.CountElementsFoundByWeb)((ReportingDriver)driver).addons().execute(countElementsFoundByWeb);
    SeciliOlmayanUrunler = String.valueOf(countElementsFoundByWeb.amount);

    // 44. Evaluate '{{SeciliOlmayanUrunler}}+{{SeciliUrunler}}'
    //    disable olanlar ve enable olanların toplamı = Bütün checkbox sayısına
    evaluateMathExpr = MathematicalUtilities.evaluateMathExpr(String.format("%s+%s",SeciliOlmayanUrunler,SeciliUrunler));
    evaluateMathExpr = (MathematicalUtilities.EvaluateMathExpr)((ReportingDriver)driver).addons().execute(evaluateMathExpr);

    // 45. Run Method Parametrik Ödeme (Sadece Kart - Type text with delay)  - İsimsiz
    methodparametrikdemesadecekarttypetextwithdelayisimsiz = new MethodParametrikdemesadeceKartTypeTextWithDelayIsimsiz();
    methodparametrikdemesadecekarttypetextwithdelayisimsiz.kartNo = kartNo;
    methodparametrikdemesadecekarttypetextwithdelayisimsiz.CVV = CVV;
    methodparametrikdemesadecekarttypetextwithdelayisimsiz.ayYil = ayYil;
    methodparametrikdemesadecekarttypetextwithdelayisimsiz.adSoyad = adSoyad;
    methodparametrikdemesadecekarttypetextwithdelayisimsiz.execute(driver);

    // 46. Type 'netahsilatotomasyon@yandex.com' in 'Email 3'
    by = By.cssSelector("#Email");
    driver.findElement(by).sendKeys("netahsilatotomasyon@yandex.com");

    // 47. Type 'C1717' in 'TransactionDescription1'
    by = By.cssSelector("#TransactionDescription");
    driver.findElement(by).sendKeys("C1717");

    // 48. Move mouse to 'Akbank Tek Çekim Posu'
    by = By.xpath("(//td[contains(@class,'commRate-20')])[1]");
    (new Actions(driver)).moveToElement(driver.findElement(by)).perform();

    // 49. Move mouse to 'Akbank Tek Çekim Posu'
    by = By.xpath("(//td[contains(@class,'commRate-20')])[1]");
    (new Actions(driver)).moveToElement(driver.findElement(by)).perform();

    // 50. Click 'Akbank Tek Çekim Posu'
    by = By.xpath("(//td[contains(@class,'commRate-20')])[1]");
    driver.findElement(by).click();

    // 51. Click 'Ödeme Talimatı Oluştur Button'
    by = By.xpath("//input[@type='button' and @value='ÖDEME TALİMATI OLUŞTUR']");
    driver.findElement(by).click();

    // 52. Set 'style' attribute value on 'slimScrollDiv'
    setElementAttribute = WebExtensions.setElementAttribute("style","position: relative; overflow: hidden; width: auto; height: 999px; display: block;");
    by = By.cssSelector(".slimScrollDiv");
    setElementAttribute = (WebExtensions.SetElementAttribute)((ReportingDriver)driver).addons().execute(setElementAttribute, by, -1);

    // 53. Set 'style' attribute value on 'slimScrollDiv>div'
    setElementAttribute = WebExtensions.setElementAttribute("style","padding: 15px; overflow: hidden; width: auto; height: 999px !important;");
    by = By.cssSelector(".slimScrollDiv>div");
    setElementAttribute = (WebExtensions.SetElementAttribute)((ReportingDriver)driver).addons().execute(setElementAttribute, by, -1);

    // 54. Is 'Televizyon 500 TL' visible?
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);
    by = By.xpath("//td[1][. = 'Televizyon 500 TL']");
    driver.findElement(by).isDisplayed();
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 55. Is 'Bilgisayar 400 TL' visible?
    by = By.xpath("//td[1][. = 'Bilgisayar 400 TL']");
    driver.findElement(by).isDisplayed();

    // 56. Move mouse to 'btnNormalPayment'
    by = By.cssSelector("#btnNormalPayment");
    (new Actions(driver)).moveToElement(driver.findElement(by)).perform();

    // 57. Is 'btnNormalPayment' is clickable?
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(35000, TimeUnit.MILLISECONDS);
    by = By.cssSelector("#btnNormalPayment");
    (new WebDriverWait(driver, 35)).until(ExpectedConditions.elementToBeClickable(by));
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 58. Click 'btnNormalPayment'
    by = By.cssSelector("#btnNormalPayment");
    driver.findElement(by).click();

    // 59. Is 'Payment Efekti' visible?
    by = By.cssSelector("div[class='spinner']");
    driver.findElement(by).isDisplayed();

    // 60. Get text from 'txtReferansNumarasi'
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(35000, TimeUnit.MILLISECONDS);
    by = By.xpath("(//p[@class='payment-result-text'])[1]");
    string = driver.findElement(by).getAttribute("value");
    ReferansNumarasi = String.valueOf(string);
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 61. Get substring of '{{ReferansNumarasi}}' from '42' to '[NONE]'
    getStringSubstring = StringUtils.getStringSubstring(42,0,ReferansNumarasi);
    getStringSubstring = (StringUtils.GetStringSubstring)((ReportingDriver)driver).addons().execute(getStringSubstring);
    ReferansNumarasi = String.valueOf(getStringSubstring.result);

    // 62. Run Method Logout&Login
    //    admin@netahsilat.com
    methodlogoutlogin = new MethodLogoutlogin();
    methodlogoutlogin.ApplicationURL = ApplicationURL;
    methodlogoutlogin.userName = "admin@netahsilat.com";
    methodlogoutlogin.password = ProjectParameters.genelPassword;
    methodlogoutlogin.execute(driver);
    currentDateTime = String.valueOf(methodlogoutlogin.currentDateTime);

    // 63. Move mouse to 'moveToIslemler'
    by = By.cssSelector("li[class='tag']");
    (new Actions(driver)).moveToElement(driver.findElement(by)).perform();

    // 64. Click 'İŞLEMLER'
    by = By.cssSelector("a[title='İŞLEMLER']");
    driver.findElement(by).click();

    // 65. Click 'İŞLEM LİSTESİ1'
    by = By.xpath("//a[. = 'İŞLEM LİSTESİ']");
    driver.findElement(by).click();

    // 66. Type '{{ReferansNumarasi}}' in 'ReferenceNumber'
    by = By.cssSelector("#ReferenceNumber");
    driver.findElement(by).sendKeys(ReferansNumarasi);

    // 67. Click 'btnListele'
    by = By.xpath("//button[. = 'Listele']");
    driver.findElement(by).click();

    // 68. Is 'btnListele' is clickable?
    by = By.xpath("//button[. = 'Listele']");
    (new WebDriverWait(driver, 15)).until(ExpectedConditions.elementToBeClickable(by));

    // 69. Set 'style' attribute value on '//div[text()='Ödeme Kalemlerini Göster']/.//div'
    setElementAttribute = WebExtensions.setElementAttribute("style","display:inline;");
    by = By.xpath("//div[text()='Ödeme Kalemlerini Göster']/.//div");
    setElementAttribute = (WebExtensions.SetElementAttribute)((ReportingDriver)driver).addons().execute(setElementAttribute, by, -1);

    // 70. Get text from 'Televizyon 500 TL Text'
    by = By.xpath("//div[text()='Ödeme Kalemlerini Göster']/.//./li[1]");
    string = driver.findElement(by).getAttribute("value");
    Assertions.assertEquals("/ Televizyon 500 TL", string);

    // 71. Get text from 'Bilgisayar 400 TL Text'
    by = By.xpath("//div[text()='Ödeme Kalemlerini Göster']/.//./li[2]");
    string = driver.findElement(by).getAttribute("value");
    Assertions.assertEquals("/ Bilgisayar 400 TL", string);

    // 72. Click 'İşlem Detayları Button'
    by = By.xpath("//img[contains(@src,'salesdetail.png')]");
    driver.findElement(by).click();

    // 73. Is 'İşlem detayları > Televizyon 500 TL' visible?
    by = By.xpath("//div[text()='Televizyon 500 TL']");
    driver.findElement(by).isDisplayed();

    // 74. Is 'İşlem detayları > Bilgisayar 400 TL' visible?
    by = By.xpath("//div[text()='Bilgisayar 400 TL']");
    driver.findElement(by).isDisplayed();

    // 75. Click 'İşlem Detayları Talimat Formu'
    by = By.xpath("//div[@class='button menu-opener']");
    driver.findElement(by).click();

    // 76. Click 'Talimat Formu > Görüntüle'
    by = By.xpath("//div[@class='button menu-opener']//../a[text()='Görüntüle']");
    driver.findElement(by).click();

    // 77. Is '//td[text()='Televizyon 500 TL']' visible?
    by = By.xpath("//td[text()='Televizyon 500 TL']");
    driver.findElement(by).isDisplayed();

    // 78. Is '//td[text()='Bilgisayar 400 TL']' visible?
    by = By.xpath("//td[text()='Bilgisayar 400 TL']");
    driver.findElement(by).isDisplayed();

    // 79. Output searched string in specific mail
    readSpecificsMail = ImapMailOperations.readSpecificsMail("netahsilatotomasyon@yandex.com",ProjectParameters.yandexMailKey,ReferansNumarasi,"C:/TestProject/mail/C1717.html");
    readSpecificsMail = (ImapMailOperations.ReadSpecificsMail)((ReportingDriver)driver).addons().execute(readSpecificsMail);

    // 80. Navigate to 'file:///C:/TestProject/mail/C1717.html'
    driver.navigate().to("file:///C:/TestProject/mail/C1717.html");

    // 81. Is '//td[text()='Televizyon 500 TL']' visible?
    by = By.xpath("//td[text()='Televizyon 500 TL']");
    driver.findElement(by).isDisplayed();

    // 82. Is '//td[text()='Bilgisayar 400 TL']' visible?
    by = By.xpath("//td[text()='Bilgisayar 400 TL']");
    driver.findElement(by).isDisplayed();

  }

  @Override
  public ReportingDriver getDriver() {
    return (ReportingDriver) driver;
  }

  @AfterAll
  static void tearDown() {
    if (driver != null) {
      driver.quit();
    }
  }

  private static Stream provideParameters() throws Exception {
    return Stream.of(Arguments.of("https://otomasyon.netahsilatdemo.com/Account/LogOff","Kd!cyhz4","","","","","4355084355084358","000","12/26","Test Kartı","","otomasyon@test.com"));
  }
}
