package netahsilat;

import io.testproject.addon.*;
import io.testproject.sdk.drivers.ReportingDriver;
import io.testproject.sdk.drivers.web.RemoteWebDriver;
import io.testproject.sdk.interfaces.junit5.ExceptionsReporter;
import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;

import java.util.concurrent.TimeUnit;
import java.util.stream.Stream;

/**
 * This class was automatically generated by TestProject
 * Project: Quality Museum Project
 * Test: C1226  Excel'e Aktarım bayi girişi ile (tutar ,komisyon oranları doğruluğu kontrol edilmeli)
 * Generated by: Ahmet Furkan SIMSEK (furkan.simsek@qualitymuseum.com)
 * Generated on Mon Oct 03 15:30:12 GMT 2022.
 */
@DisplayName("C1226  Excel'e Aktarım bayi girişi ile (tutar ,komisyon oranları doğruluğu kontrol edilmeli)")
public class C1226 implements ExceptionsReporter {
  public static WebDriver driver;

  @BeforeAll
  static void setup() throws Exception {
    driver = new RemoteWebDriver("wThDxIHw4zNaCydjAhcfe81WrQPYlMBFI7FPwUwV8M41", new ChromeOptions(), "Ahmet Furkan SIMSEK");
  }

  /**
   * In order to upload the test to TestProject need to un-comment @ArgumentsSource and set in comment the @MethodSource
   * @org.junit.jupiter.params.provider.ArgumentsSource(io.testproject.sdk.interfaces.parameterization.TestProjectParameterizer.class) */
  @DisplayName("C1226  Excel'e Aktarım bayi girişi ile (tutar ,komisyon oranları doğruluğu kontrol edilmeli)")
  @ParameterizedTest
  @MethodSource("provideParameters")
  void execute(String ApplicationURL, String userName, String password, String threeDaysAgo,
      String tutarColumnIndex, String tutarValue, String tutarBoluKomisyon, String rowIndex,
      String referansNO, String taksitMiktari, String ReferansColumnValue, String taksitColumnIndex,
      String taksitColumnValue, String footerTotal, String cellData, String tutar, String Row,
      String Col, String iptalIade, String footerFullText, String totalIslem,
      String toplamTutarFromExcel, String iptalIadeTutari) throws Exception {
    // set timeout for driver actions (similar to step timeout)
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);
    By by;
    boolean booleanResult;
    MethodLogoutlogin methodlogoutlogin;
    String string;
    CommunityExcelActionsforWindows.deleteFile deleteFile;
    WebExtensions.SelectOptionbyVisibleText selectOptionbyVisibleText;
    MathematicalUtilities.EvaluateMathExpr evaluateMathExpr;
    StringUtils.ReplaceSubstringsWithRegex replaceSubstringsWithRegex;
    VisibleElementsOperations.GetTextIfVisibleWeb getTextIfVisibleWeb;
    CommunityExcelActionsforWindows.waitUntilFileDownloaded waitUntilFileDownloaded;
    CommunityExcelActionsforWindows.getSumOfTheColumnValues getSumOfTheColumnValues;
    CommunityExcelActionsforWindows.searchData searchData;
    CommunityExcelActionsforWindows.getData getData;
    StringUtils.ReplaceSubstrings replaceSubstrings;

    // 1. Run Method Logout&Login
    GeneratedUtils.sleep(500);
    methodlogoutlogin = new MethodLogoutlogin();
    methodlogoutlogin.ApplicationURL = ApplicationURL;
    methodlogoutlogin.userName = "bireyselanabayi@otomasyon.com";
    methodlogoutlogin.password = "Kd!cyhz4";
    methodlogoutlogin.execute(driver);

    // 2. Click 'YÖNETİCİ'
    GeneratedUtils.sleep(500);
    by = By.xpath("//a[. = 'YÖNETİCİ']");
    driver.findElement(by).click();

    // 3. Move mouse to 'moveToIslemler'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("li[class='tag']");
    (new Actions(driver)).moveToElement(driver.findElement(by)).perform();

    // 4. Click 'İŞLEMLER1'
    GeneratedUtils.sleep(500);
    by = By.xpath("//a[. = 'İŞLEMLER']");
    driver.findElement(by).click();

    // 5. Click 'İŞLEM DETAYLARI LİSTESİ'
    GeneratedUtils.sleep(500);
    by = By.xpath("//a[. = 'İŞLEM DETAYLARI LİSTESİ']");
    driver.findElement(by).click();

    // 6. Move mouse to 'StartDate'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#StartDate");
    (new Actions(driver)).moveToElement(driver.findElement(by)).perform();

    // 7. Select options in 'SelectedTransactionDirectionId' with text '[NONE]'
    GeneratedUtils.sleep(500);
    selectOptionbyVisibleText = WebExtensions.selectOptionbyVisibleText("Hepsi");
    by = By.cssSelector("#SelectedTransactionDirectionId");
    selectOptionbyVisibleText = (WebExtensions.SelectOptionbyVisibleText)((ReportingDriver)driver).addons().execute(selectOptionbyVisibleText, by, -1);

    // 8. Clear 'StartDate' contents
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#StartDate");
    driver.findElement(by).clear();

    // 9. Select options in 'SelectedTransactionDirectionId' with text '[NONE]'
    GeneratedUtils.sleep(500);
    selectOptionbyVisibleText = WebExtensions.selectOptionbyVisibleText("Yaptığım Ödemeler");
    by = By.cssSelector("#SelectedTransactionDirectionId");
    selectOptionbyVisibleText = (WebExtensions.SelectOptionbyVisibleText)((ReportingDriver)driver).addons().execute(selectOptionbyVisibleText, by, -1);

    // 10. Select options in 'VPosTransactionTypeId' with text '[NONE]'
    GeneratedUtils.sleep(500);
    selectOptionbyVisibleText = WebExtensions.selectOptionbyVisibleText("Satış");
    by = By.cssSelector("#VPosTransactionTypeId");
    selectOptionbyVisibleText = (WebExtensions.SelectOptionbyVisibleText)((ReportingDriver)driver).addons().execute(selectOptionbyVisibleText, by, -1);

    // 11. Click 'btnListele'
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(35000, TimeUnit.MILLISECONDS);
    GeneratedUtils.sleep(500);
    by = By.xpath("//button[. = 'Listele']");
    driver.findElement(by).click();
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 12. Is 'Refresh' visible?
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(35000, TimeUnit.MILLISECONDS);
    GeneratedUtils.sleep(500);
    by = By.cssSelector("a[class='t-icon t-refresh']");
    driver.findElement(by).isDisplayed();
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 13. Get text from '1.referansOnGridIslemDetaylariSayfasi' if it's visible
    /* Step is disabled
    GeneratedUtils.sleep(500);
    getTextIfVisibleWeb = VisibleElementsOperations.getTextIfVisibleWeb("");
    by = By.cssSelector("#VPosTransactionGrid > table > tbody > tr:nth-child(1) > td:nth-child(18)");
    getTextIfVisibleWeb = (VisibleElementsOperations.GetTextIfVisibleWeb)((ReportingDriver)driver).addons().execute(getTextIfVisibleWeb, by, -1);
    referansNO = String.valueOf(getTextIfVisibleWeb.text);
    */
    // 14. Get text from '1.TaksitOnGridIslemDetaylarıSayfasi' if it's visible
    /* Step is disabled
    GeneratedUtils.sleep(500);
    getTextIfVisibleWeb = VisibleElementsOperations.getTextIfVisibleWeb("");
    by = By.cssSelector("#VPosTransactionGrid > table > tbody > tr:nth-child(1) > td:nth-child(17)");
    getTextIfVisibleWeb = (VisibleElementsOperations.GetTextIfVisibleWeb)((ReportingDriver)driver).addons().execute(getTextIfVisibleWeb, by, -1);
    taksitMiktari = String.valueOf(getTextIfVisibleWeb.text);
    */
    // 15. Run Get Data From Grid
    /* Step is disabled
    GeneratedUtils.sleep(500);
    getData = GridOperations.getData("Referans",referansNO,"Contains");
    getData = (GridOperations.GetData)((ReportingDriver)driver).addons().execute(getData);
    */
    // 16. Delete File (if exist)
    //    %USERPROFİLE%\Downloads\Islem-Detaylari.xls
    GeneratedUtils.sleep(500);
    deleteFile = CommunityExcelActionsforWindows.deleteFile("%USERPROFILE%\\Downloads\\Islem-Detaylari.xls");
    deleteFile = (CommunityExcelActionsforWindows.deleteFile)((ReportingDriver)driver).addons().execute(deleteFile);

    // 17. Click 'Excel'e Aktar'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#btnExport");
    driver.findElement(by).click();

    // 18. Wait Until The File is Downloaded
    GeneratedUtils.sleep(500);
    waitUntilFileDownloaded = CommunityExcelActionsforWindows.waitUntilFileDownloaded("%USERPROFILE%\\Downloads\\Islem-Detaylari.xls",30);
    waitUntilFileDownloaded = (CommunityExcelActionsforWindows.waitUntilFileDownloaded)((ReportingDriver)driver).addons().execute(waitUntilFileDownloaded);

    // 19. Get Data From Excel
    GeneratedUtils.sleep(500);
    getData = CommunityExcelActionsforWindows.getData(1,3,5,"%USERPROFILE%\\Downloads\\Islem-Detaylari.xls");
    getData = (CommunityExcelActionsforWindows.getData)((ReportingDriver)driver).addons().execute(getData);
    cellData = String.valueOf(getData.Value);

    // 20. Replace all occurrences of '[.,]' with '[NONE]' in '{{cellData}}'
    GeneratedUtils.sleep(500);
    replaceSubstringsWithRegex = StringUtils.replaceSubstringsWithRegex(cellData,"[.,]","");
    replaceSubstringsWithRegex = (StringUtils.ReplaceSubstringsWithRegex)((ReportingDriver)driver).addons().execute(replaceSubstringsWithRegex);
    cellData = String.valueOf(replaceSubstringsWithRegex.resultString);

    // 21. Get text from 'footerTotal'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#footerTotal");
    string = driver.findElement(by).getAttribute("value");
    footerTotal = String.valueOf(string);

    // 22. Replace all occurrences of '[.,]' with '[NONE]' in '{{footerTotal}}'
    GeneratedUtils.sleep(500);
    replaceSubstringsWithRegex = StringUtils.replaceSubstringsWithRegex(footerTotal,"[.,]","");
    replaceSubstringsWithRegex = (StringUtils.ReplaceSubstringsWithRegex)((ReportingDriver)driver).addons().execute(replaceSubstringsWithRegex);
    footerTotal = String.valueOf(replaceSubstringsWithRegex.resultString);

    // 23. Get text from 'iptalIadeTutari'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#footerTotalCancel");
    string = driver.findElement(by).getAttribute("value");
    iptalIade = String.valueOf(string);

    // 24. Replace all occurrences of '[.,]' with '[NONE]' in '{{iptalIade}}'
    GeneratedUtils.sleep(500);
    replaceSubstringsWithRegex = StringUtils.replaceSubstringsWithRegex(iptalIade,"[.,]","");
    replaceSubstringsWithRegex = (StringUtils.ReplaceSubstringsWithRegex)((ReportingDriver)driver).addons().execute(replaceSubstringsWithRegex);
    iptalIade = String.valueOf(replaceSubstringsWithRegex.resultString);

    // 25. Evaluate '{{footerTotal}} - {{iptalIade}}'
    //    Grid'de ki toplam tutar ile Excel'de ki toplam tutarın karşılaştırılması
    GeneratedUtils.sleep(500);
    evaluateMathExpr = MathematicalUtilities.evaluateMathExpr(String.format("%s - %s",footerTotal,iptalIade));
    evaluateMathExpr = (MathematicalUtilities.EvaluateMathExpr)((ReportingDriver)driver).addons().execute(evaluateMathExpr);
    Col = String.valueOf(evaluateMathExpr.result);

    // 26. Search Data From Excel
    GeneratedUtils.sleep(500);
    searchData = CommunityExcelActionsforWindows.searchData("%USERPROFILE%\\Downloads\\Islem-Detaylari.xls",2,"Tutar");
    searchData = (CommunityExcelActionsforWindows.searchData)((ReportingDriver)driver).addons().execute(searchData);
    Row = String.valueOf(searchData.Row);
    Col = String.valueOf(searchData.Col);

    // 27. Get Sum Of The Column Values
    GeneratedUtils.sleep(500);
    getSumOfTheColumnValues = CommunityExcelActionsforWindows.getSumOfTheColumnValues("%USERPROFILE%\\Downloads\\Islem-Detaylari.xls",2,Integer.parseInt(Col));
    getSumOfTheColumnValues = (CommunityExcelActionsforWindows.getSumOfTheColumnValues)((ReportingDriver)driver).addons().execute(getSumOfTheColumnValues);
    toplamTutarFromExcel = String.valueOf(getSumOfTheColumnValues.columnValue);

    // 28. Replace all occurrences of '.' with '[NONE]' in '{{toplamTutarFromExcel}}'
    //    Bazen yuvarlama hatası olabiliyor.
    GeneratedUtils.sleep(500);
    replaceSubstrings = StringUtils.replaceSubstrings(toplamTutarFromExcel,".","");
    replaceSubstrings = (StringUtils.ReplaceSubstrings)((ReportingDriver)driver).addons().execute(replaceSubstrings);
    toplamTutarFromExcel = String.valueOf(replaceSubstrings.result);

  }

  @Override
  public ReportingDriver getDriver() {
    return (ReportingDriver) driver;
  }

  @AfterAll
  static void tearDown() {
    if (driver != null) {
      driver.quit();
    }
  }

  private static Stream provideParameters() throws Exception {
    return Stream.of(Arguments.of("https://otomasyon.netahsilatdemo.com/Account/LogOff","otomasyon@test.com","Kd!cyhz4","","","","","2","","","","","","","","","","","","","","",""));
  }
}
