package netahsilat;

import io.testproject.addon.JSActions;
import io.testproject.sdk.drivers.ReportingDriver;
import io.testproject.sdk.drivers.web.RemoteWebDriver;
import io.testproject.sdk.interfaces.junit5.ExceptionsReporter;
import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;

import java.util.concurrent.TimeUnit;
import java.util.stream.Stream;

/**
 * This class was automatically generated by TestProject
 * Project: Quality Museum Project
 * Test: C1693 Kayıtlı kartlar seçildikten sonra jokervadaa ve maximum sorgulamaları yapılmalıdır.
 * Generated by: Ahmet Furkan SIMSEK (furkan.simsek@qualitymuseum.com)
 * Generated on Mon Oct 10 07:17:50 GMT 2022.
 */
@DisplayName("C1693 Kayıtlı kartlar seçildikten sonra jokervadaa ve maximum sorgulamaları yapılmalıdır.")
public class C1693 implements ExceptionsReporter {
  public static WebDriver driver;

  @BeforeAll
  static void setup() throws Exception {
    driver = new RemoteWebDriver("wThDxIHw4zNaCydjAhcfe81WrQPYlMBFI7FPwUwV8M41", new ChromeOptions(), "Ahmet Furkan SIMSEK");
  }

  /**
   * In order to upload the test to TestProject need to un-comment @ArgumentsSource and set in comment the @MethodSource
   * @org.junit.jupiter.params.provider.ArgumentsSource(io.testproject.sdk.interfaces.parameterization.TestProjectParameterizer.class) */
  @DisplayName("C1693 Kayıtlı kartlar seçildikten sonra jokervadaa ve maximum sorgulamaları yapılmalıdır.")
  @ParameterizedTest
  @MethodSource("provideParameters")
  void execute(String ApplicationURL, String userName, String password, String currentDateTime)
      throws Exception {
    // set timeout for driver actions (similar to step timeout)
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);
    By by;
    boolean booleanResult;
    MethodMaximumKampanyaKontrol methodmaximumkampanyakontrol;
    MethodLogoutlogin methodlogoutlogin;
    MethodWorldKampanyaKontrol methodworldkampanyakontrol;
    JSActions.ClickAction clickAction;

    // 1. Run Method Logout&Login
    //    bayi@kartkaydi.com
    methodlogoutlogin = new MethodLogoutlogin();
    methodlogoutlogin.ApplicationURL = ApplicationURL;
    methodlogoutlogin.userName = "bayi@kartkaydi.com";
    methodlogoutlogin.password = ProjectParameters.genelPassword;
    methodlogoutlogin.execute(driver);
    currentDateTime = String.valueOf(methodlogoutlogin.currentDateTime);

    // 2. Click 'ONLINE ÖDEME'
    by = By.xpath("//a[.='ONLINE ÖDEME']");
    driver.findElement(by).click();

    // 3. Click 'Kayıtlı kredi kartlarınızı görmek için tıklayınız'
    by = By.xpath("//a[@data-bind='click: showStoredCreditCards']");
    driver.findElement(by).click();

    // 4. Click 'World'
    by = By.xpath("//td[text()='World']");
    driver.findElement(by).click();

    // 5. Click '//td[contains(@class,'commRate-120 pluses plus6-120 best-commrate')]//div[text()='5 x 0,00 ₺']'
    clickAction = JSActions.getClickAction();
    by = By.xpath("//td[contains(@class,'commRate-120 pluses plus6-120 best-commrate')]//div[text()='5 x 0,00 ₺']");
    clickAction = (JSActions.ClickAction)((ReportingDriver)driver).addons().execute(clickAction, by, -1);

    // 6. C1693 Kayıtlı kartlar seçildikten sonra jokervadaa ve maximum sorgulamaları yapılmalıdır. case'inde kullanıldı.
    //    ödeme sayfasında kampanya listesini kontrol etme methodu.
    methodworldkampanyakontrol = new MethodWorldKampanyaKontrol();
    methodworldkampanyakontrol.execute(driver);

    // 7. Click 'ONLINE ÖDEME'
    clickAction = JSActions.getClickAction();
    by = By.xpath("//a[.='ONLINE ÖDEME']");
    clickAction = (JSActions.ClickAction)((ReportingDriver)driver).addons().execute(clickAction, by, -1);

    // 8. Click 'Kayıtlı kredi kartlarınızı görmek için tıklayınız'
    by = By.xpath("//a[@data-bind='click: showStoredCreditCards']");
    driver.findElement(by).click();

    // 9. Click 'Maximum'
    by = By.xpath("//td[text()='Maximum']");
    driver.findElement(by).click();

    // 10. Type '000' in 'CVV'
    by = By.cssSelector("#CardCvv");
    driver.findElement(by).sendKeys("000");

    // 11. Send 'ENTER' key(s)
    (new Actions(driver)).sendKeys(GeneratedUtils.getKeys("ENTER")).build().perform();

    // 12. Click 'Maximum 5 Taksit Posu'
    clickAction = JSActions.getClickAction();
    by = By.xpath("(//td[contains(@class,'commRate-50')])[2]");
    clickAction = (JSActions.ClickAction)((ReportingDriver)driver).addons().execute(clickAction, by, -1);

    // 13. Maximum kartın kampanyalarını kontrol etme
    //    This step was auto generated from several steps
    methodmaximumkampanyakontrol = new MethodMaximumKampanyaKontrol();
    methodmaximumkampanyakontrol.execute(driver);

  }

  @Override
  public ReportingDriver getDriver() {
    return (ReportingDriver) driver;
  }

  @AfterAll
  static void tearDown() {
    if (driver != null) {
      driver.quit();
    }
  }

  private static Stream provideParameters() throws Exception {
    return Stream.of(Arguments.of("https://otomasyon.netahsilatdemo.com/Account/LogOff","otomasyon@test.com","Kd!cyhz4",""));
  }
}
