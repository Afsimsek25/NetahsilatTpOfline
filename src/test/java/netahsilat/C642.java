package netahsilat;

import io.testproject.sdk.drivers.ReportingDriver;
import io.testproject.sdk.drivers.web.RemoteWebDriver;
import io.testproject.sdk.interfaces.junit5.ExceptionsReporter;
import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import java.util.concurrent.TimeUnit;
import java.util.stream.Stream;

/**
 * This class was automatically generated by TestProject
 * Project: Quality Museum Project
 * Test: C642 Üye Bilgileri Sekmesi
 * Generated by: Ahmet Furkan SIMSEK (furkan.simsek@qualitymuseum.com)
 * Generated on Thu Oct 06 12:35:53 GMT 2022.
 */
@DisplayName("C642 Üye Bilgileri Sekmesi")
public class C642 implements ExceptionsReporter {
  public static WebDriver driver;

  @BeforeAll
  static void setup() throws Exception {
    driver = new RemoteWebDriver("wThDxIHw4zNaCydjAhcfe81WrQPYlMBFI7FPwUwV8M41", new ChromeOptions(), "Ahmet Furkan SIMSEK");
  }

  /**
   * In order to upload the test to TestProject need to un-comment @ArgumentsSource and set in comment the @MethodSource
   * @org.junit.jupiter.params.provider.ArgumentsSource(io.testproject.sdk.interfaces.parameterization.TestProjectParameterizer.class) */
  @DisplayName("C642 Üye Bilgileri Sekmesi")
  @ParameterizedTest
  @MethodSource("provideParameters")
  void execute(String ApplicationURL, String userName, String password) throws Exception {
    // set timeout for driver actions (similar to step timeout)
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);
    By by;
    boolean booleanResult;
    MethodLogoutlogin methodlogoutlogin;

    // 1. Run Method Logout&Login
    GeneratedUtils.sleep(500);
    methodlogoutlogin = new MethodLogoutlogin();
    methodlogoutlogin.ApplicationURL = ApplicationURL;
    methodlogoutlogin.userName = ProjectParameters.genelEmail;
    methodlogoutlogin.password = ProjectParameters.genelPassword;
    methodlogoutlogin.execute(driver);

    // 2. Move mouse to 'moveUstUyeYonetimi'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("li[class='content']");
    (new Actions(driver)).moveToElement(driver.findElement(by)).perform();

    // 3. Click 'moveUstUyeYonetimi'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("li[class='content']");
    driver.findElement(by).click();

    // 4. Click 'altUyeYonetimi'
    GeneratedUtils.sleep(500);
    by = By.xpath("//li[1]/a[. = 'ÜYE YÖNETİMİ']");
    driver.findElement(by).click();

    // 5. Type '22185081940' in 'SearchVendorName'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#SearchVendorName");
    driver.findElement(by).sendKeys("22185081940");

    // 6. Click 'Contains 22185081940'
    GeneratedUtils.sleep(500);
    by = By.xpath("//div[contains(text(),'22185081940')] ");
    driver.findElement(by).click();

    // 7. Click 'btnListele'
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(35000, TimeUnit.MILLISECONDS);
    GeneratedUtils.sleep(500);
    by = By.xpath("//button[. = 'Listele']");
    driver.findElement(by).click();
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 8. Is 'quality@museum.com' visible?
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(35000, TimeUnit.MILLISECONDS);
    GeneratedUtils.sleep(500);
    by = By.xpath("//td[. = 'quality@museum.com']");
    driver.findElement(by).isDisplayed();
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 9. Click 'EditButton'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("img[src*='fugue/edit.png']");
    driver.findElement(by).click();

    // 10. Does 'Adı1' contain 'Adı'?
    GeneratedUtils.sleep(500);
    by = By.xpath("//label[. = 'Adı']");
    Assertions.assertTrue(driver.findElement(by).getText().contains("Adı"));

    // 11. Does 'Soyadı1' contain 'Soyadı'?
    GeneratedUtils.sleep(500);
    by = By.xpath("//label[. = 'Soyadı']");
    Assertions.assertTrue(driver.findElement(by).getText().contains("Soyadı"));

    // 12. Does 'Şifre2' contain 'Şifre'?
    GeneratedUtils.sleep(500);
    by = By.xpath("//label[. = 'Şifre']");
    Assertions.assertTrue(driver.findElement(by).getText().contains("Şifre"));

    // 13. Does 'Şifre Tekrar1' contain 'Şifre Tekrar'?
    GeneratedUtils.sleep(500);
    by = By.xpath("//label[. = 'Şifre Tekrar']");
    Assertions.assertTrue(driver.findElement(by).getText().contains("Şifre Tekrar"));

    // 14. Does 'Üye Kodu' contain 'Üye Kodu'?
    GeneratedUtils.sleep(500);
    by = By.xpath("//label[. = 'Üye Kodu']");
    Assertions.assertTrue(driver.findElement(by).getText().contains("Üye Kodu"));

    // 15. Does 'Erp Kodu' contain 'Erp Kodu'?
    GeneratedUtils.sleep(500);
    by = By.xpath("//label[. = 'Erp Kodu']");
    Assertions.assertTrue(driver.findElement(by).getText().contains("Erp Kodu"));

    // 16. Is 'Entity.IsActive' is clickable?
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#Entity_IsActive");
    (new WebDriverWait(driver, 15)).until(ExpectedConditions.elementToBeClickable(by));

    // 17. Is 'Entity.IsCompany1' visible and selected?
    GeneratedUtils.sleep(500);
    by = By.xpath("//div[2]/fieldset[1]/div[1]//input[1]");
    (new WebDriverWait(driver, 15)).until(ExpectedConditions.elementSelectionStateToBe(by, true));

    // 18. Click 'Entity.IsActive'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#Entity_IsActive");
    driver.findElement(by).click();

    // 19. Click 'buttonKaydiTamamla'
    GeneratedUtils.sleep(500);
    by = By.xpath("//button[. = 'Tamam']");
    driver.findElement(by).click();

    // 20. Is 'Aktif mi? (RedButton)' visible?
    GeneratedUtils.sleep(500);
    by = By.cssSelector("img[src*='busy.png']");
    driver.findElement(by).isDisplayed();

    // 21. Click 'EditButton'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("img[src*='fugue/edit.png']");
    driver.findElement(by).click();

    // 22. Click 'Entity.IsActive'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#Entity_IsActive");
    driver.findElement(by).click();

    // 23. Click 'buttonKaydiTamamla'
    GeneratedUtils.sleep(500);
    by = By.xpath("//button[. = 'Tamam']");
    driver.findElement(by).click();

  }

  @Override
  public ReportingDriver getDriver() {
    return (ReportingDriver) driver;
  }

  @AfterAll
  static void tearDown() {
    if (driver != null) {
      driver.quit();
    }
  }

  private static Stream provideParameters() throws Exception {
    return Stream.of(Arguments.of("https://otomasyon.netahsilatdemo.com/Account/LogOff","otomasyon@test.com","Kd!cyhz4"));
  }
}
