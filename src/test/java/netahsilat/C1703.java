package netahsilat;

import io.testproject.addon.CombinedActions;
import io.testproject.addon.RandomDataGenerator;
import io.testproject.addon.StringUtils;
import io.testproject.sdk.drivers.ReportingDriver;
import io.testproject.sdk.drivers.web.RemoteWebDriver;
import io.testproject.sdk.interfaces.junit5.ExceptionsReporter;
import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeOptions;

import java.util.concurrent.TimeUnit;
import java.util.stream.Stream;

/**
 * This class was automatically generated by TestProject
 * Project: Quality Museum Project
 * Test: C1703 Bayi login olup ödeme yapma
 * Generated by: Ahmet Furkan SIMSEK (furkan.simsek@qualitymuseum.com)
 * Generated on Mon Oct 10 07:21:30 GMT 2022.
 */
@DisplayName("C1703 Bayi login olup ödeme yapma")
public class C1703 implements ExceptionsReporter {
  public static WebDriver driver;

  @BeforeAll
  static void setup() throws Exception {
    driver = new RemoteWebDriver("wThDxIHw4zNaCydjAhcfe81WrQPYlMBFI7FPwUwV8M41", new ChromeOptions(), "Ahmet Furkan SIMSEK");
  }

  /**
   * In order to upload the test to TestProject need to un-comment @ArgumentsSource and set in comment the @MethodSource
   * @org.junit.jupiter.params.provider.ArgumentsSource(io.testproject.sdk.interfaces.parameterization.TestProjectParameterizer.class) */
  @DisplayName("C1703 Bayi login olup ödeme yapma")
  @ParameterizedTest
  @MethodSource("provideParameters")
  void execute(String ApplicationURL, String password, String currentDateTime, String RandomTutar1,
      String RandomTutar2, String adSoyad, String ReferansNumber, String Tutar) throws Exception {
    // set timeout for driver actions (similar to step timeout)
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);
    By by;
    boolean booleanResult;
    MethodParametrikdemesadeceKartTypeTextWithDelayIsimsiz methodparametrikdemesadecekarttypetextwithdelayisimsiz;
    MethodVakfbankIlemDurumuSorgulama methodvakfbankilemdurumusorgulama;
    MethodLogin methodlogin;
    String string;
    CombinedActions.ClearAndTypeAction clearAndTypeAction;
    StringUtils.GetStringSubstring getStringSubstring;
    RandomDataGenerator.GenerateNumberInRange generateNumberInRange;

    // 1. Navigate to '{{Otomasyon2Logout}}'
    driver.navigate().to(ProjectParameters.Otomasyon2Logout);

    // 2. Run Method Login
    //    altbayipos@yandex.com
    methodlogin = new MethodLogin();
    methodlogin.ApplicationURL = ApplicationURL;
    methodlogin.userName = "altbayipos@yandex.com";
    methodlogin.password = ProjectParameters.genelPassword;
    methodlogin.execute(driver);
    currentDateTime = String.valueOf(methodlogin.currentDateTime);

    // 3. Click 'ONLINE ÖDEME1'
    by = By.xpath("//a[. = 'ONLINE ÖDEME']");
    driver.findElement(by).click();

    // 4. Generate random number between '1' and '9999'
    generateNumberInRange = RandomDataGenerator.generateNumberInRange("1","9999");
    generateNumberInRange = (RandomDataGenerator.GenerateNumberInRange)((ReportingDriver)driver).addons().execute(generateNumberInRange);
    RandomTutar1 = String.valueOf(generateNumberInRange.result);

    // 5. Generate random number between '1' and '99'
    generateNumberInRange = RandomDataGenerator.generateNumberInRange("1","99");
    generateNumberInRange = (RandomDataGenerator.GenerateNumberInRange)((ReportingDriver)driver).addons().execute(generateNumberInRange);
    RandomTutar2 = String.valueOf(generateNumberInRange.result);

    // 6. Run Clear 'PureAmount' contents and type '{{RandomTutar1}},{{RandomTutar2}}'
    clearAndTypeAction = CombinedActions.clearAndTypeAction(String.format("%s,%s",RandomTutar1,RandomTutar2));
    by = By.cssSelector("#PureAmount");
    clearAndTypeAction = (CombinedActions.ClearAndTypeAction)((ReportingDriver)driver).addons().execute(clearAndTypeAction, by, -1);

    // 7. Click 'Kredi Kartı Bilgileri'
    by = By.xpath("//legend[. = '\n            Kredi Kartı Bilgileri\n\n        ']");
    driver.findElement(by).click();

    // 8. Get text from 'PureAmount'
    by = By.cssSelector("#PureAmount");
    string = driver.findElement(by).getAttribute("value");
    Tutar = String.valueOf(string);

    // 9. Run Method Parametrik Ödeme (Sadece Kart - Type text with delay)  - İsimsiz
    methodparametrikdemesadecekarttypetextwithdelayisimsiz = new MethodParametrikdemesadeceKartTypeTextWithDelayIsimsiz();
    methodparametrikdemesadecekarttypetextwithdelayisimsiz.kartNo = "4938460158754205";
    methodparametrikdemesadecekarttypetextwithdelayisimsiz.CVV = "715";
    methodparametrikdemesadecekarttypetextwithdelayisimsiz.ayYil = "11/24";
    methodparametrikdemesadecekarttypetextwithdelayisimsiz.adSoyad = adSoyad;
    methodparametrikdemesadecekarttypetextwithdelayisimsiz.execute(driver);

    // 10. Click 'Vakıfbank Tek Çekim Posu'
    by = By.cssSelector("td[class*='commRate-4050'] input");
    driver.findElement(by).click();

    // 11. Click 'btnNormalPayment'
    by = By.cssSelector("#btnNormalPayment");
    driver.findElement(by).click();

    // 12. Is 'Payment Efekti' visible?
    by = By.cssSelector("div[class='spinner']");
    driver.findElement(by).isDisplayed();

    // 13. Get text from 'txtReferansNumarasi'
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(35000, TimeUnit.MILLISECONDS);
    by = By.xpath("(//p[@class='payment-result-text'])[1]");
    string = driver.findElement(by).getAttribute("value");
    ReferansNumber = String.valueOf(string);
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 14. Get substring of '{{ReferansNumber}}' from '42' to '[NONE]'
    getStringSubstring = StringUtils.getStringSubstring(42,0,ReferansNumber);
    getStringSubstring = (StringUtils.GetStringSubstring)((ReportingDriver)driver).addons().execute(getStringSubstring);
    ReferansNumber = String.valueOf(getStringSubstring.result);

    // 15. Run Method Vakıfbank İşlem Durumu Sorgulama
    methodvakfbankilemdurumusorgulama = new MethodVakfbankIlemDurumuSorgulama();
    methodvakfbankilemdurumusorgulama.HostSubMerchantId = "000100000012805";
    methodvakfbankilemdurumusorgulama.OrderId = ReferansNumber;
    methodvakfbankilemdurumusorgulama.execute(driver);

  }

  @Override
  public ReportingDriver getDriver() {
    return (ReportingDriver) driver;
  }

  @AfterAll
  static void tearDown() {
    if (driver != null) {
      driver.quit();
    }
  }

  private static Stream provideParameters() throws Exception {
    return Stream.of(Arguments.of("https://otomasyon2.netahsilatdemo.com/","Kd!cyhz4","","","","Test Kartı","",""));
  }
}
