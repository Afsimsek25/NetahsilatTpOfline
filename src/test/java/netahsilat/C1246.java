package netahsilat;

import io.testproject.addon.JSActions;
import io.testproject.addon.WebExtensions;
import io.testproject.sdk.drivers.ReportingDriver;
import io.testproject.sdk.drivers.web.RemoteWebDriver;
import io.testproject.sdk.interfaces.junit5.ExceptionsReporter;
import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import java.util.concurrent.TimeUnit;
import java.util.stream.Stream;

/**
 * This class was automatically generated by TestProject
 * Project: Quality Museum Project
 * Test: C1246 Bayi aktarımlarında bireysel durumlarda TCKN / passaport durumları (NTH-7126)
 * Generated by: Ahmet Furkan SIMSEK (furkan.simsek@qualitymuseum.com)
 * Generated on Fri Oct 07 10:18:52 GMT 2022.
 */
@DisplayName("C1246 Bayi aktarımlarında bireysel durumlarda TCKN / passaport durumları (NTH-7126)")
public class C1246 implements ExceptionsReporter {
  public static WebDriver driver;

  @BeforeAll
  static void setup() throws Exception {
    driver = new RemoteWebDriver("wThDxIHw4zNaCydjAhcfe81WrQPYlMBFI7FPwUwV8M41", new ChromeOptions(), "Ahmet Furkan SIMSEK");
  }

  /**
   * In order to upload the test to TestProject need to un-comment @ArgumentsSource and set in comment the @MethodSource
   * @org.junit.jupiter.params.provider.ArgumentsSource(io.testproject.sdk.interfaces.parameterization.TestProjectParameterizer.class) */
  @DisplayName("C1246 Bayi aktarımlarında bireysel durumlarda TCKN / passaport durumları (NTH-7126)")
  @ParameterizedTest
  @MethodSource("provideParameters")
  void execute(String ApplicationURL, String userName, String password) throws Exception {
    // set timeout for driver actions (similar to step timeout)
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);
    By by;
    boolean booleanResult;
    MethodLogoutlogin methodlogoutlogin;
    WebExtensions.SelectOptionbyVisibleText selectOptionbyVisibleText;
    JSActions.ClickAction clickAction;
    FileUpload.UploadFileElementAction uploadFileElementAction;

    // 1. Run Method Logout&Login
    GeneratedUtils.sleep(500);
    methodlogoutlogin = new MethodLogoutlogin();
    methodlogoutlogin.ApplicationURL = ApplicationURL;
    methodlogoutlogin.userName = ProjectParameters.genelEmail;
    methodlogoutlogin.password = ProjectParameters.genelPassword;
    methodlogoutlogin.execute(driver);

    // 2. Move mouse to 'moveUstUyeYonetimi'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("li[class='content']");
    (new Actions(driver)).moveToElement(driver.findElement(by)).perform();

    // 3. Click 'ustUyeYonetimi'
    GeneratedUtils.sleep(500);
    by = By.xpath("//li[4]/a[. = 'ÜYE YÖNETİMİ']");
    driver.findElement(by).click();

    // 4. Click 'ÜYE AKTARIM'
    GeneratedUtils.sleep(500);
    by = By.xpath("//a[. = 'ÜYE AKTARIM']");
    driver.findElement(by).click();

    // 5. Uploads a file to a given element with the 'file' type
    GeneratedUtils.sleep(500);
    uploadFileElementAction = FileUpload.uploadFileElementAction("C:\\TestProject\\C1246-Val1.xlsx");
    by = By.cssSelector("#import");
    uploadFileElementAction = (FileUpload.UploadFileElementAction)((ReportingDriver)driver).addons().execute(uploadFileElementAction, by, -1);

    // 6. Click 'Tamam1'
    GeneratedUtils.sleep(500);
    by = By.xpath("//button[. = 'Tamam']");
    driver.findElement(by).click();

    // 7. Select options in 'primarykey' with text '[NONE]'
    GeneratedUtils.sleep(500);
    selectOptionbyVisibleText = WebExtensions.selectOptionbyVisibleText("Code");
    by = By.cssSelector("#primarykey");
    selectOptionbyVisibleText = (WebExtensions.SelectOptionbyVisibleText)((ReportingDriver)driver).addons().execute(selectOptionbyVisibleText, by, -1);

    // 8. Is 'Aktarımı Başlat' is clickable?
    GeneratedUtils.sleep(500);
    by = By.xpath("//button[. = 'Aktarımı Başlat']");
    (new WebDriverWait(driver, 15)).until(ExpectedConditions.elementToBeClickable(by));

    // 9. Click 'Aktarımı Başlat'
    GeneratedUtils.sleep(500);
    by = By.xpath("//button[. = 'Aktarımı Başlat']");
    driver.findElement(by).click();

    // 10. Does 'Hata :Tckn ve vergi alanları aynı and...' contain 'Hata :Tckn ve vergi alanları aynı anda dolu olamaz. Sütun: 8 Satır: 1'?
    GeneratedUtils.sleep(500);
    by = By.xpath("//div/div/div/div[1]/div/p");
    Assertions.assertTrue(driver.findElement(by).getText().contains("Hata :Tckn ve vergi alanları aynı anda dolu olamaz. Sütun: 8 Satır: 1"));

    // 11. Click 'ÜYE AKTARIM'
    GeneratedUtils.sleep(500);
    by = By.xpath("//a[. = 'ÜYE AKTARIM']");
    driver.findElement(by).click();

    // 12. Uploads a file to a given element with the 'file' type
    GeneratedUtils.sleep(500);
    uploadFileElementAction = FileUpload.uploadFileElementAction("C:\\TestProject\\C1246-Val2.xlsx");
    by = By.cssSelector("#import");
    uploadFileElementAction = (FileUpload.UploadFileElementAction)((ReportingDriver)driver).addons().execute(uploadFileElementAction, by, -1);

    // 13. Click 'Tamam1'
    GeneratedUtils.sleep(500);
    by = By.xpath("//button[. = 'Tamam']");
    driver.findElement(by).click();

    // 14. Select options in 'primarykey' with text '[NONE]'
    GeneratedUtils.sleep(500);
    selectOptionbyVisibleText = WebExtensions.selectOptionbyVisibleText("Code");
    by = By.cssSelector("#primarykey");
    selectOptionbyVisibleText = (WebExtensions.SelectOptionbyVisibleText)((ReportingDriver)driver).addons().execute(selectOptionbyVisibleText, by, -1);

    // 15. Is 'Aktarımı Başlat' is clickable?
    GeneratedUtils.sleep(500);
    by = By.xpath("//button[. = 'Aktarımı Başlat']");
    (new WebDriverWait(driver, 15)).until(ExpectedConditions.elementToBeClickable(by));

    // 16. Click 'Aktarımı Başlat'
    GeneratedUtils.sleep(500);
    by = By.xpath("//button[. = 'Aktarımı Başlat']");
    driver.findElement(by).click();

    // 17. Does 'Hata :Tckn ve vergi alanları aynı and...' contain 'Hata :Uyruk TR iken TCKN alanı boş geçilemez Sütun: 8 Satır: 1'?
    GeneratedUtils.sleep(500);
    by = By.xpath("//div/div/div/div[1]/div/p");
    Assertions.assertTrue(driver.findElement(by).getText().contains("Hata :Uyruk TR iken TCKN alanı boş geçilemez Sütun: 8 Satır: 1"));

    // 18. Click 'ÜYE AKTARIM'
    GeneratedUtils.sleep(500);
    by = By.xpath("//a[. = 'ÜYE AKTARIM']");
    driver.findElement(by).click();

    // 19. Uploads a file to a given element with the 'file' type
    GeneratedUtils.sleep(500);
    uploadFileElementAction = FileUpload.uploadFileElementAction("C:\\TestProject\\C1246-Val3.xlsx");
    by = By.cssSelector("#import");
    uploadFileElementAction = (FileUpload.UploadFileElementAction)((ReportingDriver)driver).addons().execute(uploadFileElementAction, by, -1);

    // 20. Click 'Tamam1'
    GeneratedUtils.sleep(500);
    by = By.xpath("//button[. = 'Tamam']");
    driver.findElement(by).click();

    // 21. Select options in 'primarykey' with text '[NONE]'
    GeneratedUtils.sleep(500);
    selectOptionbyVisibleText = WebExtensions.selectOptionbyVisibleText("Code");
    by = By.cssSelector("#primarykey");
    selectOptionbyVisibleText = (WebExtensions.SelectOptionbyVisibleText)((ReportingDriver)driver).addons().execute(selectOptionbyVisibleText, by, -1);

    // 22. Is 'Aktarımı Başlat' is clickable?
    GeneratedUtils.sleep(500);
    by = By.xpath("//button[. = 'Aktarımı Başlat']");
    (new WebDriverWait(driver, 15)).until(ExpectedConditions.elementToBeClickable(by));

    // 23. Click 'Aktarımı Başlat'
    GeneratedUtils.sleep(500);
    by = By.xpath("//button[. = 'Aktarımı Başlat']");
    driver.findElement(by).click();

    // 24. Does 'Hata :Tckn ve vergi alanları aynı and...' contain 'Hata :Sadece yabancı uyruklu müşteriler için pasaport numarası girilir. Sütun: 7 Satır: 1'?
    GeneratedUtils.sleep(500);
    by = By.xpath("//div/div/div/div[1]/div/p");
    Assertions.assertTrue(driver.findElement(by).getText().contains("Hata :Sadece yabancı uyruklu müşteriler için pasaport numarası girilir. Sütun: 7 Satır: 1"));

    // 25. Click 'ÜYE AKTARIM'
    GeneratedUtils.sleep(500);
    by = By.xpath("//a[. = 'ÜYE AKTARIM']");
    driver.findElement(by).click();

    // 26. Uploads a file to a given element with the 'file' type
    GeneratedUtils.sleep(500);
    uploadFileElementAction = FileUpload.uploadFileElementAction("C:\\TestProject\\C1246-Val4.xlsx");
    by = By.cssSelector("#import");
    uploadFileElementAction = (FileUpload.UploadFileElementAction)((ReportingDriver)driver).addons().execute(uploadFileElementAction, by, -1);

    // 27. Click 'Tamam1'
    GeneratedUtils.sleep(500);
    by = By.xpath("//button[. = 'Tamam']");
    driver.findElement(by).click();

    // 28. Select options in 'primarykey' with text '[NONE]'
    GeneratedUtils.sleep(500);
    selectOptionbyVisibleText = WebExtensions.selectOptionbyVisibleText("Code");
    by = By.cssSelector("#primarykey");
    selectOptionbyVisibleText = (WebExtensions.SelectOptionbyVisibleText)((ReportingDriver)driver).addons().execute(selectOptionbyVisibleText, by, -1);

    // 29. Is 'Aktarımı Başlat' is clickable?
    GeneratedUtils.sleep(500);
    by = By.xpath("//button[. = 'Aktarımı Başlat']");
    (new WebDriverWait(driver, 15)).until(ExpectedConditions.elementToBeClickable(by));

    // 30. Click 'Aktarımı Başlat'
    GeneratedUtils.sleep(500);
    by = By.xpath("//button[. = 'Aktarımı Başlat']");
    driver.findElement(by).click();

    // 31. Does 'Hata :Tckn ve vergi alanları aynı and...' contain 'Hata :Tckn ve pasaport numarası aynı anda dolu olamaz Sütun: 8 Satır: 1'?
    GeneratedUtils.sleep(500);
    by = By.xpath("//div/div/div/div[1]/div/p");
    Assertions.assertTrue(driver.findElement(by).getText().contains("Hata :Tckn ve pasaport numarası aynı anda dolu olamaz Sütun: 8 Satır: 1"));

    // 32. Click 'ÜYE AKTARIM'
    GeneratedUtils.sleep(500);
    by = By.xpath("//a[. = 'ÜYE AKTARIM']");
    driver.findElement(by).click();

    // 33. Uploads a file to a given element with the 'file' type
    GeneratedUtils.sleep(500);
    uploadFileElementAction = FileUpload.uploadFileElementAction("C:\\TestProject\\C1246-Comp5.xlsx");
    by = By.cssSelector("#import");
    uploadFileElementAction = (FileUpload.UploadFileElementAction)((ReportingDriver)driver).addons().execute(uploadFileElementAction, by, -1);

    // 34. Click 'Tamam1'
    GeneratedUtils.sleep(500);
    by = By.xpath("//button[. = 'Tamam']");
    driver.findElement(by).click();

    // 35. Select options in 'primarykey' with text '[NONE]'
    GeneratedUtils.sleep(500);
    selectOptionbyVisibleText = WebExtensions.selectOptionbyVisibleText("Code");
    by = By.cssSelector("#primarykey");
    selectOptionbyVisibleText = (WebExtensions.SelectOptionbyVisibleText)((ReportingDriver)driver).addons().execute(selectOptionbyVisibleText, by, -1);

    // 36. Is 'Aktarımı Başlat' is clickable?
    GeneratedUtils.sleep(500);
    by = By.xpath("//button[. = 'Aktarımı Başlat']");
    (new WebDriverWait(driver, 15)).until(ExpectedConditions.elementToBeClickable(by));

    // 37. Click 'Aktarımı Başlat'
    GeneratedUtils.sleep(500);
    by = By.xpath("//button[. = 'Aktarımı Başlat']");
    driver.findElement(by).click();

    // 38. Move mouse to 'altUyeYonetimi'
    GeneratedUtils.sleep(500);
    by = By.xpath("//li[1]/a[. = 'ÜYE YÖNETİMİ']");
    (new Actions(driver)).moveToElement(driver.findElement(by)).perform();

    // 39. Click 'altUyeYonetimi'
    GeneratedUtils.sleep(500);
    clickAction = JSActions.getClickAction();
    by = By.xpath("//li[1]/a[. = 'ÜYE YÖNETİMİ']");
    clickAction = (JSActions.ClickAction)((ReportingDriver)driver).addons().execute(clickAction, by, -1);

    // 40. Type 'KurumsalCode001' in 'SearchVendorNameVN'
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(35000, TimeUnit.MILLISECONDS);
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#SearchVendorName");
    driver.findElement(by).sendKeys("KurumsalCode001");
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 41. Click '//div[contains(text(),'KurumsalCode001')]'
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(35000, TimeUnit.MILLISECONDS);
    GeneratedUtils.sleep(500);
    by = By.xpath("//div[contains(text(),'KurumsalCode001')]");
    driver.findElement(by).click();
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 42. Click 'btnListele'
    GeneratedUtils.sleep(500);
    by = By.xpath("//button[. = 'Listele']");
    driver.findElement(by).click();

    // 43. Is 'KurumsalCode001' visible?
    GeneratedUtils.sleep(500);
    by = By.xpath("//td[. = 'KurumsalCode001']");
    driver.findElement(by).isDisplayed();

    // 44. Click 'EditButton'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("img[src*='fugue/edit.png']");
    driver.findElement(by).click();

    // 45. Does 'Entity.SelectedCountry' contain 'United States'?
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#Entity_SelectedCountry");
    Assertions.assertTrue(driver.findElement(by).getText().contains("United States"));

    // 46. Does 'Entity.PassportNumber' contain '12123123123'?
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#Entity_PassportNumber");
    Assertions.assertTrue(driver.findElement(by).getText().contains("12123123123"));

    // 47. Does 'Entity.AddressModel.CityId' contain 'İstanbul'?
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#Entity_AddressModel_CityId");
    Assertions.assertTrue(driver.findElement(by).getText().contains("İstanbul"));

    // 48. Does 'Entity.AddressModel.DistrictId' contain 'Esenler'?
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#Entity_AddressModel_DistrictId");
    Assertions.assertTrue(driver.findElement(by).getText().contains("Esenler"));

    // 49. Does 'Entity.AddressModel.NeighborhoodId' contain 'Atışalanı'?
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#Entity_AddressModel_NeighborhoodId");
    Assertions.assertTrue(driver.findElement(by).getText().contains("Atışalanı"));

    // 50. Click 'Vazgeç1'
    GeneratedUtils.sleep(500);
    by = By.xpath("//button[. = 'Vazgeç']");
    driver.findElement(by).click();

    // 51. Click 'Kullanıcı Silme'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("img[src$$='/trash.png']");
    driver.findElement(by).click();

    // 52. Click 'Tamam1'
    GeneratedUtils.sleep(500);
    by = By.xpath("//button[. = 'Tamam']");
    driver.findElement(by).click();

    // 53. Does 'Gösterilecek Kayıt Bulunamadı.2' contain 'Gösterilecek Kayıt Bulunamadı.'?
    GeneratedUtils.sleep(500);
    by = By.xpath("//div[3]/div/table//td[. = 'Gösterilecek Kayıt Bulunamadı.']");
    Assertions.assertTrue(driver.findElement(by).getText().contains("Gösterilecek Kayıt Bulunamadı."));

  }

  @Override
  public ReportingDriver getDriver() {
    return (ReportingDriver) driver;
  }

  @AfterAll
  static void tearDown() {
    if (driver != null) {
      driver.quit();
    }
  }

  private static Stream provideParameters() throws Exception {
    return Stream.of(Arguments.of("https://otomasyon.netahsilatdemo.com/Account/LogOff","otomasyon@test.com","Kd!cyhz4"));
  }
}
