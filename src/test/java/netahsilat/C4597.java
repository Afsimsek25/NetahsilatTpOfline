package netahsilat;

import io.testproject.addon.GridOperations;
import io.testproject.addon.NetahsilatUtills;
import io.testproject.addon.WebExtensions;
import io.testproject.sdk.drivers.ReportingDriver;
import io.testproject.sdk.drivers.web.RemoteWebDriver;
import io.testproject.sdk.interfaces.junit5.ExceptionsReporter;
import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import java.util.concurrent.TimeUnit;
import java.util.stream.Stream;

/**
 * This class was automatically generated by TestProject
 * Project: Quality Museum Project
 * Test: C4597 Rol Grubu Kopyalama İşlemi
 * Generated by: Ahmet Furkan SIMSEK (furkan.simsek@qualitymuseum.com)
 * Generated on Mon Oct 10 07:13:52 GMT 2022.
 */
@DisplayName("C4597 Rol Grubu Kopyalama İşlemi")
public class C4597 implements ExceptionsReporter {
  public static WebDriver driver;

  @BeforeAll
  static void setup() throws Exception {
    driver = new RemoteWebDriver("wThDxIHw4zNaCydjAhcfe81WrQPYlMBFI7FPwUwV8M41", new ChromeOptions(), "Ahmet Furkan SIMSEK");
  }

  /**
   * In order to upload the test to TestProject need to un-comment @ArgumentsSource and set in comment the @MethodSource
   * @org.junit.jupiter.params.provider.ArgumentsSource(io.testproject.sdk.interfaces.parameterization.TestProjectParameterizer.class) */
  @DisplayName("C4597 Rol Grubu Kopyalama İşlemi")
  @ParameterizedTest
  @MethodSource("provideParameters")
  void execute(String ApplicationURL, String userName, String password, String currentDateTime)
      throws Exception {
    // set timeout for driver actions (similar to step timeout)
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);
    By by;
    boolean booleanResult;
    MethodLogin methodlogin;
    WebExtensions.SelectOptionbyVisibleText selectOptionbyVisibleText;
    NetahsilatUtills.ClickUntilGone clickUntilGone;
    GridOperations.GetData getData;

    // 1. Navigate to '{{Otomasyon3Logout}}'
    GeneratedUtils.sleep(500);
    driver.navigate().to(ProjectParameters.Otomasyon3Logout);

    // 2. Run Method Login
    //    otomasyon@test.com
    GeneratedUtils.sleep(500);
    methodlogin = new MethodLogin();
    methodlogin.ApplicationURL = ApplicationURL;
    methodlogin.userName = "otomasyon@test.com";
    methodlogin.password = password;
    methodlogin.execute(driver);
    currentDateTime = String.valueOf(methodlogin.currentDateTime);

    // 3. Move mouse to 'moveToKullaniciYönetimi'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("li[class='user']");
    (new Actions(driver)).moveToElement(driver.findElement(by)).perform();

    // 4. Click 'KULLANICI YÖNETİMİ2'
    GeneratedUtils.sleep(500);
    by = By.xpath("//a[. = 'KULLANICI YÖNETİMİ']");
    driver.findElement(by).click();

    // 5. Click 'ROL YÖNETİMİ'
    GeneratedUtils.sleep(500);
    by = By.xpath("//a[. = 'ROL YÖNETİMİ']");
    driver.findElement(by).click();

    // 6. Select options in 'RoleGroupId' with text '[NONE]'
    //    TestSiteYetki Silmeyiniz
    GeneratedUtils.sleep(500);
    selectOptionbyVisibleText = WebExtensions.selectOptionbyVisibleText("TestSiteYetki Silmeyiniz");
    by = By.cssSelector("#RoleGroupId");
    selectOptionbyVisibleText = (WebExtensions.SelectOptionbyVisibleText)((ReportingDriver)driver).addons().execute(selectOptionbyVisibleText, by, -1);

    // 7. Click 'Listele'
    GeneratedUtils.sleep(500);
    by = By.xpath("//button[. = 'Listele']");
    driver.findElement(by).click();

    // 8. Run Get Data From Grid
    GeneratedUtils.sleep(500);
    getData = GridOperations.getData("Rol Grubu","TestSiteYetki Silmeyiniz","Equals");
    getData = (GridOperations.GetData)((ReportingDriver)driver).addons().execute(getData);

    // 9. Click 'Rol Grubu TestSiteYetki Silmeyiniz	'
    GeneratedUtils.sleep(500);
    by = By.xpath("//td[text()='TestSiteYetki Silmeyiniz']/..//img[contains(@src,'copy.png')]");
    driver.findElement(by).click();

    // 10. Type 'CopyTest' in 'Rol Grubu Adı'
    GeneratedUtils.sleep(500);
    by = By.xpath("//input[@id='RoleGroupName']");
    driver.findElement(by).sendKeys("CopyTest");

    // 11. Run Click Until Gone
    GeneratedUtils.sleep(500);
    clickUntilGone = NetahsilatUtills.clickUntilGone(30);
    by = By.xpath("//button[. = 'Tamam']");
    clickUntilGone = (NetahsilatUtills.ClickUntilGone)((ReportingDriver)driver).addons().execute(clickUntilGone, by, -1);

    // 12. Move mouse to 'moveToAnasayfa'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("li[class='dashboard nochildren']");
    (new Actions(driver)).moveToElement(driver.findElement(by)).perform();

    // 13. Click 'ANASAYFA'
    GeneratedUtils.sleep(500);
    by = By.xpath("//a[. = 'ANASAYFA']");
    driver.findElement(by).click();

    // 14. Move mouse to 'moveToKullaniciYönetimi'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("li[class='user']");
    (new Actions(driver)).moveToElement(driver.findElement(by)).perform();

    // 15. Click 'KULLANICI YÖNETİMİ2'
    GeneratedUtils.sleep(500);
    by = By.xpath("//a[. = 'KULLANICI YÖNETİMİ']");
    driver.findElement(by).click();

    // 16. Click 'ROL YÖNETİMİ'
    GeneratedUtils.sleep(500);
    by = By.xpath("//a[. = 'ROL YÖNETİMİ']");
    driver.findElement(by).click();

    // 17. Click 'Listele'
    GeneratedUtils.sleep(500);
    by = By.xpath("//button[. = 'Listele']");
    driver.findElement(by).click();

    // 18. Select options in 'RoleGroupId' with text '[NONE]'
    GeneratedUtils.sleep(500);
    selectOptionbyVisibleText = WebExtensions.selectOptionbyVisibleText("CopyTest");
    by = By.cssSelector("#RoleGroupId");
    selectOptionbyVisibleText = (WebExtensions.SelectOptionbyVisibleText)((ReportingDriver)driver).addons().execute(selectOptionbyVisibleText, by, -1);

    // 19. Click 'CopyTest Edit img'
    GeneratedUtils.sleep(500);
    by = By.xpath("//td[text()='CopyTest']/..//img[contains(@src,'edit.png')]");
    driver.findElement(by).click();

    // 20. Is 'Cari Hesap Hareket Yönetimi Checkbox' visible and selected?
    //    INVERT STEP RESULT

    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(2000, TimeUnit.MILLISECONDS);
    try {
      by = By.xpath("//span[text()='Cari Hesap Hareket Yönetimi']//..//input[2]");
      (new WebDriverWait(driver, 2)).until(ExpectedConditions.elementSelectionStateToBe(by, true));
      Assertions.fail("Step 'Is 'Cari Hesap Hareket Yönetimi Checkbox' visible and selected?' result inverted, step failed");
    }
    catch (RuntimeException ex) {
    }
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 21. Is 'İşlemler Checkbox' visible and selected?
    //    INVERT STEP RESULT

    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(2000, TimeUnit.MILLISECONDS);
    try {
      GeneratedUtils.sleep(500);
      by = By.xpath("//span[text()='İşlemler']//..//input[2]");
      (new WebDriverWait(driver, 2)).until(ExpectedConditions.elementSelectionStateToBe(by, true));
      Assertions.fail("Step 'Is 'İşlemler Checkbox' visible and selected?' result inverted, step failed");
    }
    catch (RuntimeException ex) {
    }
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 22. Is ' Ödeme Seti Checkbox' visible and selected?
    //    INVERT STEP RESULT

    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(2000, TimeUnit.MILLISECONDS);
    try {
      GeneratedUtils.sleep(500);
      by = By.xpath("//span[text()='Ödeme Seti']//..//input[2]");
      (new WebDriverWait(driver, 2)).until(ExpectedConditions.elementSelectionStateToBe(by, true));
      Assertions.fail("Step 'Is ' Ödeme Seti Checkbox' visible and selected?' result inverted, step failed");
    }
    catch (RuntimeException ex) {
    }
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 23. Is 'Site Yönetimi Checkvbox' visible and selected?
    //    INVERT STEP RESULT

    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(2000, TimeUnit.MILLISECONDS);
    try {
      GeneratedUtils.sleep(500);
      by = By.xpath("//span[text()='Site Yönetimi']//..//input[2]");
      (new WebDriverWait(driver, 2)).until(ExpectedConditions.elementSelectionStateToBe(by, true));
      Assertions.fail("Step 'Is 'Site Yönetimi Checkvbox' visible and selected?' result inverted, step failed");
    }
    catch (RuntimeException ex) {
    }
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 24. Click 'Tahsilat Yöntemleri + işareti'
    GeneratedUtils.sleep(500);
    by = By.xpath("//span[text()='Tahsilat Yöntemleri']//..//span[@class='t-icon t-plus']");
    driver.findElement(by).click();

    // 25. Is 'Email Order Checkbox' visible and selected?
    //    INVERT STEP RESULT

    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(2000, TimeUnit.MILLISECONDS);
    try {
      GeneratedUtils.sleep(500);
      by = By.xpath("//span[text()='Email Order']//..//input[2]");
      (new WebDriverWait(driver, 2)).until(ExpectedConditions.elementSelectionStateToBe(by, true));
      Assertions.fail("Step 'Is 'Email Order Checkbox' visible and selected?' result inverted, step failed");
    }
    catch (RuntimeException ex) {
    }
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 26. Is 'Email Order (Üyeliksiz) Checkbox' visible and selected?
    //    INVERT STEP RESULT

    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(2000, TimeUnit.MILLISECONDS);
    try {
      GeneratedUtils.sleep(500);
      by = By.xpath("//span[text()='Email Order (Üyeliksiz)']//..//input[2]");
      (new WebDriverWait(driver, 2)).until(ExpectedConditions.elementSelectionStateToBe(by, true));
      Assertions.fail("Step 'Is 'Email Order (Üyeliksiz) Checkbox' visible and selected?' result inverted, step failed");
    }
    catch (RuntimeException ex) {
    }
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 27. Is 'Email Order Takip Checkbox' visible and selected?
    //    INVERT STEP RESULT

    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(2000, TimeUnit.MILLISECONDS);
    try {
      GeneratedUtils.sleep(500);
      by = By.xpath("//span[text()='EMail Order Takip']//..//input[2]");
      (new WebDriverWait(driver, 2)).until(ExpectedConditions.elementSelectionStateToBe(by, true));
      Assertions.fail("Step 'Is 'Email Order Takip Checkbox' visible and selected?' result inverted, step failed");
    }
    catch (RuntimeException ex) {
    }
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 28. Is 'Email Order Yönetim Checkbox' visible and selected?
    //    INVERT STEP RESULT

    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(2000, TimeUnit.MILLISECONDS);
    try {
      GeneratedUtils.sleep(500);
      by = By.xpath("//span[text()='Email Order Yönetim']//..//input[2]");
      (new WebDriverWait(driver, 2)).until(ExpectedConditions.elementSelectionStateToBe(by, true));
      Assertions.fail("Step 'Is 'Email Order Yönetim Checkbox' visible and selected?' result inverted, step failed");
    }
    catch (RuntimeException ex) {
    }
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 29. Is 'Fatura Email Order Checkbox' visible and selected?
    //    INVERT STEP RESULT

    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(2000, TimeUnit.MILLISECONDS);
    try {
      GeneratedUtils.sleep(500);
      by = By.xpath("//span[text()='Fatura Email Order']//..//input[2]");
      (new WebDriverWait(driver, 2)).until(ExpectedConditions.elementSelectionStateToBe(by, true));
      Assertions.fail("Step 'Is 'Fatura Email Order Checkbox' visible and selected?' result inverted, step failed");
    }
    catch (RuntimeException ex) {
    }
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 30. Is 'Toplu Email Order Checkbox' visible and selected?
    //    INVERT STEP RESULT

    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(2000, TimeUnit.MILLISECONDS);
    try {
      GeneratedUtils.sleep(500);
      by = By.xpath("//span[text()='Toplu Email Order']//..//input[2]");
      (new WebDriverWait(driver, 2)).until(ExpectedConditions.elementSelectionStateToBe(by, true));
      Assertions.fail("Step 'Is 'Toplu Email Order Checkbox' visible and selected?' result inverted, step failed");
    }
    catch (RuntimeException ex) {
    }
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 31. Is 'Toplu Email Order (Üyeliksiz) Checkbox' visible and selected?
    //    INVERT STEP RESULT

    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(2000, TimeUnit.MILLISECONDS);
    try {
      GeneratedUtils.sleep(500);
      by = By.xpath("//span[text()='Toplu Email Order (Üyeliksiz)']//..//input[2]");
      (new WebDriverWait(driver, 2)).until(ExpectedConditions.elementSelectionStateToBe(by, true));
      Assertions.fail("Step 'Is 'Toplu Email Order (Üyeliksiz) Checkbox' visible and selected?' result inverted, step failed");
    }
    catch (RuntimeException ex) {
    }
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 32. Run Click Until Gone
    GeneratedUtils.sleep(500);
    clickUntilGone = NetahsilatUtills.clickUntilGone(30);
    by = By.xpath("//button[. = 'Tamam']");
    clickUntilGone = (NetahsilatUtills.ClickUntilGone)((ReportingDriver)driver).addons().execute(clickUntilGone, by, -1);

    // 33. Click 'CopyTest Sil img'
    GeneratedUtils.sleep(500);
    by = By.xpath("//td[text()='CopyTest']/..//img[contains(@src,'trash.png')]");
    driver.findElement(by).click();

    // 34. Run Click Until Gone
    GeneratedUtils.sleep(500);
    clickUntilGone = NetahsilatUtills.clickUntilGone(30);
    by = By.xpath("//button[. = 'Tamam']");
    clickUntilGone = (NetahsilatUtills.ClickUntilGone)((ReportingDriver)driver).addons().execute(clickUntilGone, by, -1);

    // 35. Is 'CopyTest Edit img' not present or invisible?
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(7000, TimeUnit.MILLISECONDS);
    GeneratedUtils.sleep(500);
    by = By.xpath("//td[text()='CopyTest']/..//img[contains(@src,'edit.png')]");
    (new WebDriverWait(driver, 7)).until(ExpectedConditions.invisibilityOf(driver.findElement(by)));
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

  }

  @Override
  public ReportingDriver getDriver() {
    return (ReportingDriver) driver;
  }

  @AfterAll
  static void tearDown() {
    if (driver != null) {
      driver.quit();
    }
  }

  private static Stream provideParameters() throws Exception {
    return Stream.of(Arguments.of("https://otomasyon3.netahsilatdemo.com/","otomasyon@test.com","Kd!cyhz4",""));
  }
}
