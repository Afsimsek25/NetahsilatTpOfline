package netahsilat;

import io.testproject.addon.JSActions;
import io.testproject.addon.VisibleElementsOperations;
import io.testproject.sdk.drivers.ReportingDriver;
import io.testproject.sdk.interfaces.junit5.ExceptionsReporter;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import java.util.concurrent.TimeUnit;

/**
 * This class was automatically generated by TestProject
 * Project: Quality Museum Project
 * Test: Method Parametrik Ödeme (Sadece Kart Bilgisi)
 * Generated by: Ahmet Furkan SIMSEK (furkan.simsek@qualitymuseum.com)
 * Generated on Fri Oct 07 11:24:12 GMT 2022.
 */
public class MethodParametrikdemesadeceKartBilgisi implements Test, ExceptionsReporter {
  public static WebDriver driver;

  /**
   * kartNo test parameter
   */
  public String kartNo = "4355084355084358";

  /**
   * CVV test parameter
   */
  public String CVV = "000";

  /**
   * ayYil test parameter
   */
  public String ayYil = "12/30";

  public void execute(WebDriver parentDriver) throws Exception {
    driver = parentDriver;
    // set timeout for driver actions (similar to step timeout)
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);
    By by;
    boolean booleanResult;
    JSActions.TypeTextAction typeTextAction;
    VisibleElementsOperations.ClickIfVisibleWeb clickIfVisibleWeb;

    // 1. Clear 'Kart Üzerindeki İsim' contents
    by = By.cssSelector("#CardHolderName");
    driver.findElement(by).clear();

    // 2. Clear 'Kart No' contents
    by = By.cssSelector("#CardNumber");
    driver.findElement(by).clear();

    // 3. Clear 'Ay / Yıl' contents
    by = By.cssSelector("#CardExpireDate");
    driver.findElement(by).clear();

    // 4. Clear 'CVV' contents
    by = By.cssSelector("#CardCvv");
    driver.findElement(by).clear();

    // 5. Type '{{ayYil}}' in 'Ay / Yıl'
    typeTextAction = JSActions.typeTextAction(ayYil);
    by = By.cssSelector("#CardExpireDate");
    typeTextAction = (JSActions.TypeTextAction)((ReportingDriver)driver).addons().execute(typeTextAction, by, -1);

    // 6. Click 'Ay / Yıl' if it's visible
    clickIfVisibleWeb = VisibleElementsOperations.clickIfVisibleWeb("");
    by = By.cssSelector("#CardExpireDate");
    clickIfVisibleWeb = (VisibleElementsOperations.ClickIfVisibleWeb)((ReportingDriver)driver).addons().execute(clickIfVisibleWeb, by, -1);

    // 7. Send 'ENTER' key(s)
    by = By.cssSelector("#CardExpireDate");
    (new Actions(driver)).sendKeys(GeneratedUtils.getKeys("ENTER")).build().perform();

    // 8. Type '{{CVV}}' in 'CVV'
    by = By.cssSelector("#CardCvv");
    driver.findElement(by).sendKeys(CVV);

    // 9. Type 'Odeme User' in 'Kart Üzerindeki İsim'
    by = By.cssSelector("#CardHolderName");
    driver.findElement(by).sendKeys("Odeme User");

    // 10. Type '{{kartNo}}' in 'Kart No'
    typeTextAction = JSActions.typeTextAction(kartNo);
    by = By.cssSelector("#CardNumber");
    typeTextAction = (JSActions.TypeTextAction)((ReportingDriver)driver).addons().execute(typeTextAction, by, -1);

    // 11. Is 'Spinner (Loading)' not present or invisible?
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(2000, TimeUnit.MILLISECONDS);
    by = By.cssSelector("div.spinner");
    (new WebDriverWait(driver, 2)).until(ExpectedConditions.invisibilityOf(driver.findElement(by)));
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 12. Click 'Kart No' if it's visible
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(2000, TimeUnit.MILLISECONDS);
    clickIfVisibleWeb = VisibleElementsOperations.clickIfVisibleWeb("0");
    by = By.cssSelector("#CardNumber");
    clickIfVisibleWeb = (VisibleElementsOperations.ClickIfVisibleWeb)((ReportingDriver)driver).addons().execute(clickIfVisibleWeb, by, -1);
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 13. Send 'ENTER' key(s)
    by = By.cssSelector("#CardNumber");
    (new Actions(driver)).sendKeys(GeneratedUtils.getKeys("ENTER")).build().perform();

  }

  @Override
  public ReportingDriver getDriver() {
    return (ReportingDriver) driver;
  }
}
