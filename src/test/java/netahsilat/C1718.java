package netahsilat;

import io.testproject.addon.StringUtils;
import io.testproject.sdk.drivers.ReportingDriver;
import io.testproject.sdk.drivers.web.RemoteWebDriver;
import io.testproject.sdk.interfaces.junit5.ExceptionsReporter;
import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;

import java.util.concurrent.TimeUnit;
import java.util.stream.Stream;

/**
 * This class was automatically generated by TestProject
 * Project: Quality Museum Project
 * Test: C1718 Netahsilat UI - İşlem Listesi detaylarında Ödeme kalemleri görünmelidir.
 * Generated by: Ahmet Furkan SIMSEK (furkan.simsek@qualitymuseum.com)
 * Generated on Mon Oct 10 08:33:41 GMT 2022.
 */
@DisplayName("C1718 Netahsilat UI - İşlem Listesi detaylarında Ödeme kalemleri görünmelidir.")
public class C1718 implements ExceptionsReporter {
  public static WebDriver driver;

  @BeforeAll
  static void setup() throws Exception {
    driver = new RemoteWebDriver("wThDxIHw4zNaCydjAhcfe81WrQPYlMBFI7FPwUwV8M41", new ChromeOptions(), "Ahmet Furkan SIMSEK");
  }

  /**
   * In order to upload the test to TestProject need to un-comment @ArgumentsSource and set in comment the @MethodSource
   * @org.junit.jupiter.params.provider.ArgumentsSource(io.testproject.sdk.interfaces.parameterization.TestProjectParameterizer.class) */
  @DisplayName("C1718 Netahsilat UI - İşlem Listesi detaylarında Ödeme kalemleri görünmelidir.")
  @ParameterizedTest
  @MethodSource("provideParameters")
  void execute(String ApplicationURL, String password, String currentDateTime, String kartNo,
      String CVV, String ayYil, String adSoyad, String ReferansNumber) throws Exception {
    // set timeout for driver actions (similar to step timeout)
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);
    By by;
    boolean booleanResult;
    MethodParametrikdemesadeceKartTypeTextWithDelayIsimsiz methodparametrikdemesadecekarttypetextwithdelayisimsiz;
    MethodLogoutlogin methodlogoutlogin;
    String string;
    StringUtils.GetStringSubstring getStringSubstring;

    // 1. Run Method Logout&Login
    //    netahsilatotomasyon@yandex.com
    methodlogoutlogin = new MethodLogoutlogin();
    methodlogoutlogin.ApplicationURL = ApplicationURL;
    methodlogoutlogin.userName = "netahsilatotomasyon@yandex.com";
    methodlogoutlogin.password = ProjectParameters.genelPassword;
    methodlogoutlogin.execute(driver);
    currentDateTime = String.valueOf(methodlogoutlogin.currentDateTime);

    // 2. Click 'Tanımlı Ödeme'
    by = By.xpath("//span[. = 'Tanımlı Ödeme']");
    driver.findElement(by).click();

    // 3. Click 'Televizyon 500 TL Checkbox'
    by = By.xpath("//td[text()='Televizyon 500 TL']/..//input");
    driver.findElement(by).click();

    // 4. Click 'Bilgisayar 400 TL Checkbox'
    by = By.xpath("//td[text()='Bilgisayar 400 TL']/..//input");
    driver.findElement(by).click();

    // 5. Run Method Parametrik Ödeme (Sadece Kart - Type text with delay)  - İsimsiz
    methodparametrikdemesadecekarttypetextwithdelayisimsiz = new MethodParametrikdemesadeceKartTypeTextWithDelayIsimsiz();
    methodparametrikdemesadecekarttypetextwithdelayisimsiz.kartNo = kartNo;
    methodparametrikdemesadecekarttypetextwithdelayisimsiz.CVV = CVV;
    methodparametrikdemesadecekarttypetextwithdelayisimsiz.ayYil = ayYil;
    methodparametrikdemesadecekarttypetextwithdelayisimsiz.adSoyad = adSoyad;
    methodparametrikdemesadecekarttypetextwithdelayisimsiz.execute(driver);

    // 6. Type 'C1718' in 'TransactionDescription1'
    by = By.cssSelector("#TransactionDescription");
    driver.findElement(by).sendKeys("C1718");

    // 7. Move mouse to 'Akbank Tek Çekim Posu'
    by = By.xpath("(//td[contains(@class,'commRate-20')])[1]");
    (new Actions(driver)).moveToElement(driver.findElement(by)).perform();

    // 8. Click 'Akbank Tek Çekim Posu'
    by = By.xpath("(//td[contains(@class,'commRate-20')])[1]");
    driver.findElement(by).click();

    // 9. Click 'Ödeme Talimatı Oluştur Button'
    by = By.xpath("//input[@type='button' and @value='ÖDEME TALİMATI OLUŞTUR']");
    driver.findElement(by).click();

    // 10. Click 'btnNormalPayment'
    by = By.cssSelector("#btnNormalPayment");
    driver.findElement(by).click();

    // 11. Is 'Payment Efekti' visible?
    by = By.cssSelector("div[class='spinner']");
    driver.findElement(by).isDisplayed();

    // 12. Get text from 'txtReferansNumarasi'
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(35000, TimeUnit.MILLISECONDS);
    by = By.xpath("(//p[@class='payment-result-text'])[1]");
    string = driver.findElement(by).getAttribute("value");
    ReferansNumber = String.valueOf(string);
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 13. Get substring of '{{ReferansNumber}}' from '42' to '[NONE]'
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(25000, TimeUnit.MILLISECONDS);
    getStringSubstring = StringUtils.getStringSubstring(42,0,ReferansNumber);
    getStringSubstring = (StringUtils.GetStringSubstring)((ReportingDriver)driver).addons().execute(getStringSubstring);
    ReferansNumber = String.valueOf(getStringSubstring.result);
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 14. Click 'İŞLEMLER1'
    by = By.xpath("//a[. = 'İŞLEMLER']");
    driver.findElement(by).click();

    // 15. Click 'İşlem Detayları img'
    by = By.xpath("//img[contains(@src,'transaction-form-icon')]");
    driver.findElement(by).click();

    // 16. Is 'Ödeme Detayları >Televizyon 500 TL' visible?
    by = By.xpath("//td[contains(text(),'Televizyon 500 TL')]//../td[contains(text(),'500,00')]");
    driver.findElement(by).isDisplayed();

    // 17. Is 'Ödeme Detayları >Bilgisayar 400 TL' visible?
    by = By.xpath("//td[contains(text(),'Bilgisayar 400 TL')]//../td[contains(text(),'400,00')]");
    driver.findElement(by).isDisplayed();

    // 18. Click 'İşlemler3'
    by = By.xpath("//button[. = '\n                        İşlemler \n                    ']");
    driver.findElement(by).click();

    // 19. Click 'Talimat Formunu Görüntüle'
    by = By.xpath("//a[. = 'Talimat Formunu Görüntüle']");
    driver.findElement(by).click();

    // 20. Get text from 'Ödeme Detayları Referans Numarası'
    by = By.xpath("//strong[text()='Referans']//..//..//td[2]");
    string = driver.findElement(by).getAttribute("value");
    Assertions.assertEquals(String.format(":%s",ReferansNumber), string);

    // 21. Is 'Kredi Kartı Ödeme Talimatı Televizyon 500 TL' visible?
    by = By.xpath("//td[text()='Televizyon 500 TL']");
    driver.findElement(by).isDisplayed();

    // 22. Is 'Kredi Kartı Ödeme Talimatı Bilgisayar 400 TL' visible?
    by = By.xpath("//td[text()='Bilgisayar 400 TL']");
    driver.findElement(by).isDisplayed();

  }

  @Override
  public ReportingDriver getDriver() {
    return (ReportingDriver) driver;
  }

  @AfterAll
  static void tearDown() {
    if (driver != null) {
      driver.quit();
    }
  }

  private static Stream provideParameters() throws Exception {
    return Stream.of(Arguments.of("https://otomasyon.netahsilatdemo.com/Account/LogOff","Kd!cyhz4","","4355084355084358","000","12/26","Test Kartı",""));
  }
}
