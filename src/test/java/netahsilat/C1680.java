package netahsilat;

import io.testproject.addon.DateTimeOperations;
import io.testproject.addon.ImapMailOperations;
import io.testproject.addon.MathematicalUtilities;
import io.testproject.addon.WebExtensions;
import io.testproject.sdk.drivers.ReportingDriver;
import io.testproject.sdk.drivers.web.RemoteWebDriver;
import io.testproject.sdk.interfaces.junit5.ExceptionsReporter;
import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;

import java.util.concurrent.TimeUnit;
import java.util.stream.Stream;

/**
 * This class was automatically generated by TestProject
 * Project: Quality Museum Project
 * Test: C1680 İşlem İade ilgili kullanıcılara mail gönderilmesi (Üyeliksiz)
 * Generated by: Ahmet Furkan SIMSEK (furkan.simsek@qualitymuseum.com)
 * Generated on Thu Sep 29 18:20:01 GMT 2022.
 */
@DisplayName("C1680 İşlem İade ilgili kullanıcılara mail gönderilmesi (Üyeliksiz)")
public class C1680 implements ExceptionsReporter {
  public static WebDriver driver;

  @BeforeAll
  static void setup() throws Exception {
    driver = new RemoteWebDriver("wThDxIHw4zNaCydjAhcfe81WrQPYlMBFI7FPwUwV8M41", new ChromeOptions(), "Ahmet Furkan SIMSEK");
  }

  /**
   * In order to upload the test to TestProject need to un-comment @ArgumentsSource and set in comment the @MethodSource
   * @org.junit.jupiter.params.provider.ArgumentsSource(io.testproject.sdk.interfaces.parameterization.TestProjectParameterizer.class) */
  @DisplayName("C1680 İşlem İade ilgili kullanıcılara mail gönderilmesi (Üyeliksiz)")
  @ParameterizedTest
  @MethodSource("provideParameters")
  void execute(String ApplicationURL, String email, String emailPassword, String referansNumarasi,
      String userName, String password, String currentDate, String onDayAgo, String tutar,
      String Bakiye) throws Exception {
    // set timeout for driver actions (similar to step timeout)
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);
    By by;
    boolean booleanResult;
    MethodLogoutlogin methodlogoutlogin;
    String string;
    WebExtensions.SelectOptionbyVisibleText selectOptionbyVisibleText;
    WebExtensions.GetNumbersOnly getNumbersOnly;
    MathematicalUtilities.EvaluateMathExpr evaluateMathExpr;
    ImapMailOperations.ReadSpecificsMail readSpecificsMail;
    WebExtensions.WaitForAlertPresence waitForAlertPresence;
    ImapMailOperations.DeleteAllMails deleteAllMails;
    DateTimeOperations.SetDays setDays;
    WebExtensions.AcceptAlert acceptAlert;
    WebExtensions.GetAlertText getAlertText;
    DateTimeOperations.CurrentDate xcurrentDate;
    WebExtensions.DeselectAllOptions deselectAllOptions;

    // 1. Run Method Logout&Login
    GeneratedUtils.sleep(500);
    methodlogoutlogin = new MethodLogoutlogin();
    methodlogoutlogin.ApplicationURL = ApplicationURL;
    methodlogoutlogin.userName = ProjectParameters.genelEmail;
    methodlogoutlogin.password = ProjectParameters.genelPassword;
    methodlogoutlogin.execute(driver);

    // 2. Delete All Mails
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(35000, TimeUnit.MILLISECONDS);
    GeneratedUtils.sleep(500);
    deleteAllMails = ImapMailOperations.deleteAllMails(ProjectParameters.odemeEmail,ProjectParameters.yandexMailKey);
    deleteAllMails = (ImapMailOperations.DeleteAllMails)((ReportingDriver)driver).addons().execute(deleteAllMails);
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 3. Move mouse to 'moveToIslemler'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("li[class='tag']");
    (new Actions(driver)).moveToElement(driver.findElement(by)).perform();

    // 4. Click 'İŞLEMLER1'
    GeneratedUtils.sleep(500);
    by = By.xpath("//a[. = 'İŞLEMLER']");
    driver.findElement(by).click();

    // 5. Click 'İŞLEM LİSTESİ'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("a[title='İŞLEM LİSTESİ']");
    driver.findElement(by).click();

    // 6. Move mouse to 'StartDate'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#StartDate");
    (new Actions(driver)).moveToElement(driver.findElement(by)).perform();

    // 7. Clear 'StartDate' contents
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#StartDate");
    driver.findElement(by).clear();

    // 8. Clear 'EndDate' contents
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#EndDate");
    driver.findElement(by).clear();

    // 9. Get current date
    GeneratedUtils.sleep(500);
    xcurrentDate = DateTimeOperations.currentDate("dd.MM.yyy");
    xcurrentDate = (DateTimeOperations.CurrentDate)((ReportingDriver)driver).addons().execute(xcurrentDate);
    String strcurrentDate = String.valueOf(xcurrentDate.result);

    // 10. Set '-1' days to '{{currentDate}}'
    GeneratedUtils.sleep(500);
    setDays = DateTimeOperations.setDays("-1",strcurrentDate,"dd.MM.yyyy","dd.MM.yyyy");
    setDays = (DateTimeOperations.SetDays)((ReportingDriver)driver).addons().execute(setDays);
    onDayAgo = String.valueOf(setDays.result);

    // 11. Type '{{onDayAgo}}' in 'EndDate'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#EndDate");
    driver.findElement(by).sendKeys(onDayAgo);

    // 12. Deselect all options in 'VendorVPosId'
    GeneratedUtils.sleep(500);
    deselectAllOptions = WebExtensions.getDeselectAllOptions();
    by = By.cssSelector("#VendorVPosId");
    deselectAllOptions = (WebExtensions.DeselectAllOptions)((ReportingDriver)driver).addons().execute(deselectAllOptions, by, -1);

    // 13. Select options in 'VendorVPosId' with text '[NONE]'
    GeneratedUtils.sleep(500);
    selectOptionbyVisibleText = WebExtensions.selectOptionbyVisibleText("Akbank1");
    by = By.cssSelector("#VendorVPosId");
    selectOptionbyVisibleText = (WebExtensions.SelectOptionbyVisibleText)((ReportingDriver)driver).addons().execute(selectOptionbyVisibleText, by, -1);

    // 14. Select options in 'CancelledRefundedStatusId' with text '[NONE]'
    GeneratedUtils.sleep(500);
    selectOptionbyVisibleText = WebExtensions.selectOptionbyVisibleText("İptal ya da iade edilmemiş transactions");
    by = By.cssSelector("#CancelledRefundedStatusId");
    selectOptionbyVisibleText = (WebExtensions.SelectOptionbyVisibleText)((ReportingDriver)driver).addons().execute(selectOptionbyVisibleText, by, -1);

    // 15. Select options in 'VendorTypeId' with text '[NONE]'
    GeneratedUtils.sleep(500);
    selectOptionbyVisibleText = WebExtensions.selectOptionbyVisibleText("Üyeliksiz");
    by = By.cssSelector("#VendorTypeId");
    selectOptionbyVisibleText = (WebExtensions.SelectOptionbyVisibleText)((ReportingDriver)driver).addons().execute(selectOptionbyVisibleText, by, -1);

    // 16. Click 'btnListele'
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(35000, TimeUnit.MILLISECONDS);
    GeneratedUtils.sleep(500);
    by = By.xpath("//button[. = 'Listele']");
    driver.findElement(by).click();
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 17. Is 'Refresh' visible?
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(35000, TimeUnit.MILLISECONDS);
    GeneratedUtils.sleep(500);
    by = By.cssSelector("a[class='t-icon t-refresh']");
    driver.findElement(by).isDisplayed();
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 18. Get text from '1.referansOnGridIslemler'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#VPosTransactionGrid > table > tbody > tr:nth-child(1) > td:nth-child(29)");
    string = driver.findElement(by).getAttribute("value");
    referansNumarasi = String.valueOf(string);

    // 19. Click 'btnIptalOnGrid'
    GeneratedUtils.sleep(500);
    by = By.xpath("//td/a[1]/img");
    driver.findElement(by).click();

    // 20. Return only numbers from the text
    GeneratedUtils.sleep(500);
    getNumbersOnly = WebExtensions.getGetNumbersOnly();
    by = By.cssSelector("input[type='text'][value*=',']");
    getNumbersOnly = (WebExtensions.GetNumbersOnly)((ReportingDriver)driver).addons().execute(getNumbersOnly, by, -1);
    tutar = String.valueOf(getNumbersOnly.output);

    // 21. Clear 'inputRefundPopup' contents
    GeneratedUtils.sleep(500);
    by = By.cssSelector("input[type='text'][value*=',']");
    driver.findElement(by).clear();

    // 22. Type '1,00' in 'inputRefundPopup'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("input[type='text'][value*=',']");
    driver.findElement(by).sendKeys("1,00");

    // 23. Type 'otomasyon tarafından iade edilmiştir 181212***' in 'TransactionDescripton'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#TransactionDescripton");
    driver.findElement(by).sendKeys("otomasyon tarafından iade edilmiştir 181212***");

    // 24. Click 'buttonKaydiTamamla'
    GeneratedUtils.sleep(500);
    by = By.xpath("//button[. = 'Tamam']");
    driver.findElement(by).click();

    // 25. Does 'txtIptal/IadeResult' contain 'İşlem yapılıyor. Lütfen bekleyiniz...'?
    GeneratedUtils.sleep(500);
    by = By.xpath("//div[. = 'İşlem yapılıyor. Lütfen bekleyiniz...']");
    Assertions.assertTrue(driver.findElement(by).getText().contains("İşlem yapılıyor. Lütfen bekleyiniz..."));

    // 26. Is alert displayed?
    GeneratedUtils.sleep(500);
    waitForAlertPresence = WebExtensions.waitForAlertPresence(50000);
    waitForAlertPresence = (WebExtensions.WaitForAlertPresence)((ReportingDriver)driver).addons().execute(waitForAlertPresence);

    // 27. Get alert text
    GeneratedUtils.sleep(500);
    getAlertText = WebExtensions.getGetAlertText();
    getAlertText = (WebExtensions.GetAlertText)((ReportingDriver)driver).addons().execute(getAlertText);

    // 28. Accept alert
    GeneratedUtils.sleep(500);
    acceptAlert = WebExtensions.acceptAlert(0);
    acceptAlert = (WebExtensions.AcceptAlert)((ReportingDriver)driver).addons().execute(acceptAlert);

    // 29. Output searched string in specific mail
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(35000, TimeUnit.MILLISECONDS);
    GeneratedUtils.sleep(500);
    readSpecificsMail = ImapMailOperations.readSpecificsMail(ProjectParameters.odemeEmail,ProjectParameters.yandexMailKey,referansNumarasi,"C:\\TestProject\\mail\\C1680.html");
    readSpecificsMail = (ImapMailOperations.ReadSpecificsMail)((ReportingDriver)driver).addons().execute(readSpecificsMail);
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 30. Navigate to 'file:///C:\TestProject\mail\C1680.html'
    GeneratedUtils.sleep(500);
    driver.navigate().to("file:///C:\\TestProject\\mail\\C1680.html");

    // 31. Get text from '[id="islemno"]'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#islemno");
    string = driver.findElement(by).getAttribute("value");
    Assertions.assertEquals(referansNumarasi, string);

    // 32. Return only numbers from the text
    GeneratedUtils.sleep(500);
    getNumbersOnly = WebExtensions.getGetNumbersOnly();
    by = By.cssSelector("#bakiye");
    getNumbersOnly = (WebExtensions.GetNumbersOnly)((ReportingDriver)driver).addons().execute(getNumbersOnly, by, -1);
    Bakiye = String.valueOf(getNumbersOnly.output);

    // 33. Evaluate '{{tutar}} - 100'
    GeneratedUtils.sleep(500);
    evaluateMathExpr = MathematicalUtilities.evaluateMathExpr(String.format("%s - 100",tutar));
    evaluateMathExpr = (MathematicalUtilities.EvaluateMathExpr)((ReportingDriver)driver).addons().execute(evaluateMathExpr);

  }

  @Override
  public ReportingDriver getDriver() {
    return (ReportingDriver) driver;
  }

  @AfterAll
  static void tearDown() {
    if (driver != null) {
      driver.quit();
    }
  }

  private static Stream provideParameters() throws Exception {
    return Stream.of(Arguments.of("https://otomasyon.netahsilatdemo.com/Account/LogOff","otomasyon@e-cozum.com","kY2*m5J","","otomasyon@test.com","Kd!cyhz4","","","",""));
  }
}
