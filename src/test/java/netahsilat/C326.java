package netahsilat;


import io.testproject.addon.*;
import io.testproject.sdk.drivers.ReportingDriver;
import io.testproject.sdk.drivers.web.RemoteWebDriver;
import io.testproject.sdk.interfaces.junit5.ExceptionsReporter;
import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;

import java.util.concurrent.TimeUnit;
import java.util.stream.Stream;

/**
 * This class was automatically generated by TestProject
 * Project: Quality Museum Project
 * Test: C326 Ödeme Bilgileri
 * Generated by: Ahmet Furkan SIMSEK (furkan.simsek@qualitymuseum.com)
 * Generated on Wed Sep 28 10:28:53 GMT 2022.
 */
@DisplayName("C326 Ödeme Bilgileri")
public class C326 implements ExceptionsReporter {
  public static WebDriver driver;

  @BeforeAll
  static void setup() throws Exception {
    driver = new RemoteWebDriver("wThDxIHw4zNaCydjAhcfe81WrQPYlMBFI7FPwUwV8M41", new ChromeOptions(), "Ahmet Furkan SIMSEK");
  }

  /**
   * In order to upload the test to TestProject need to un-comment @ArgumentsSource and set in comment the @MethodSource
   * @org.junit.jupiter.params.provider.ArgumentsSource(io.testproject.sdk.interfaces.parameterization.TestProjectParameterizer.class) */
  @DisplayName("C326 Ödeme Bilgileri")
  @ParameterizedTest
  @MethodSource("provideParameters")
  void execute(String ApplicationURL, String userName, String password, String sonIslemlerTutar,
      String txToplamSatis, String odemeBilgileri, String odemeTutari, String curentDateTime,
      String birHaftaOncesiDateTime, String birAyOnceDataTime, String hatfaninGunu, String ayinGunu,
      String gunlukToplamSatis, String haftalikToplamSatis, String gunlukIslem,
      String haftalikIslem, String starIndex, String aylikToplamSatis, String aylikIslem) throws
      Exception {
    // set timeout for driver actions (similar to step timeout)
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);
    By by;
    boolean booleanResult;
    MethodLogoutlogin methodlogoutlogin;
    String string;
    MathematicalUtilities.EvaluateMathExpr evaluateMathExpr;
    CombinedActions.ClearAndTypeAction clearAndTypeAction;
    StringUtils.ExtractStringUsingRegex extractStringUsingRegex;
    StringUtils.GetStringSubstring getStringSubstring;
    JSActions.ClickAction clickAction;
    StringUtils.FindSubstringIndex findSubstringIndex;
    DateTimeOperations.SetDays setDays;
    ElementExtensions.DoubleClickNoJs doubleClickNoJs;
    DateTimeOperations.GetDayOfWeek getDayOfWeek;
    StringUtils.ReplaceSubstrings replaceSubstrings;
    DateTimeOperations.CurrentDate currentDate;

    // 1. Run Method Logout&Login
    GeneratedUtils.sleep(500);
    methodlogoutlogin = new MethodLogoutlogin();
    methodlogoutlogin.ApplicationURL = ApplicationURL;
    methodlogoutlogin.userName = ProjectParameters.genelEmail;
    methodlogoutlogin.password = ProjectParameters.genelPassword;
    methodlogoutlogin.execute(driver);

    // 2. Click 'İŞLEM LİSTESİ'
    clickAction = JSActions.getClickAction();
    by = By.cssSelector("a[title='İŞLEM LİSTESİ']");
    clickAction = (JSActions.ClickAction)((ReportingDriver)driver).addons().execute(clickAction, by, -1);

    // 3. Is 'Refresh' visible?
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(35000, TimeUnit.MILLISECONDS);
    by = By.cssSelector("a[class='t-icon t-refresh']");
    driver.findElement(by).isDisplayed();
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 4. Get text from 'textToplamSatis'
    //    Get {gunlukToplamSatis}
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(35000, TimeUnit.MILLISECONDS);
    by = By.cssSelector("#footerTotal");
    string = driver.findElement(by).getAttribute("value");
    gunlukToplamSatis = String.valueOf(string);
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 5. Replace all occurrences of 'null' with '0,00' in '{{gunlukToplamSatis}}'
    replaceSubstrings = StringUtils.replaceSubstrings(gunlukToplamSatis,"null","0,00");
    replaceSubstrings = (StringUtils.ReplaceSubstrings)((ReportingDriver)driver).addons().execute(replaceSubstrings);
    gunlukToplamSatis = String.valueOf(replaceSubstrings.result);

    // 6. Get text from 'Displaying items'
    //    Get {gunlukIslem}
    by = By.xpath("//div[contains(text(),'Displaying')]");
    gunlukIslem = driver.findElement(by).getText();

    // 7. Get the index of the first occurrence of '[NONE]' in '{{gunlukIslem}}'
    //    Get {startIndex}
    findSubstringIndex = StringUtils.findSubstringIndex(gunlukIslem,"f",0);
    findSubstringIndex = (StringUtils.FindSubstringIndex)((ReportingDriver)driver).addons().execute(findSubstringIndex);
    starIndex = String.valueOf(findSubstringIndex.index);

    // 8. Evaluate '{{starIndex}}+2'
    evaluateMathExpr = MathematicalUtilities.evaluateMathExpr(String.format("%s+2",starIndex));
    evaluateMathExpr = (MathematicalUtilities.EvaluateMathExpr)((ReportingDriver)driver).addons().execute(evaluateMathExpr);
    starIndex = String.valueOf(evaluateMathExpr.result);

    // 9. Get substring of '{{gunlukIslem}}' from '{{starIndex}}' to '[NONE]'
    //    Get {gunlukIslem}
    getStringSubstring = StringUtils.getStringSubstring(Integer.parseInt(starIndex),0,gunlukIslem);
    getStringSubstring = (StringUtils.GetStringSubstring)((ReportingDriver)driver).addons().execute(getStringSubstring);
    gunlukIslem = String.valueOf(getStringSubstring.result);

    // 10. Get current date
    currentDate = DateTimeOperations.currentDate("dd.MM.yyyy");
    currentDate = (DateTimeOperations.CurrentDate)((ReportingDriver)driver).addons().execute(currentDate);
    curentDateTime = String.valueOf(currentDate.result);

    // 11. Get day of the week from '{{curentDateTime}}'
    getDayOfWeek = DateTimeOperations.getDayOfWeek(curentDateTime,"dd.MM.yyyy");
    getDayOfWeek = (DateTimeOperations.GetDayOfWeek)((ReportingDriver)driver).addons().execute(getDayOfWeek);
    hatfaninGunu = String.valueOf(getDayOfWeek.result);

    // 12. Replace all occurrences of '7' with '0' in '{{hatfaninGunu}}'
    replaceSubstrings = StringUtils.replaceSubstrings(hatfaninGunu,"7","0");
    replaceSubstrings = (StringUtils.ReplaceSubstrings)((ReportingDriver)driver).addons().execute(replaceSubstrings);
    hatfaninGunu = String.valueOf(replaceSubstrings.result);

    // 13. Set '-{{hatfaninGunu}}' days to '{{curentDateTime}}'
    setDays = DateTimeOperations.setDays(String.format("-%s",hatfaninGunu),curentDateTime,"dd.MM.yyyy","dd.MM.yyyy");
    setDays = (DateTimeOperations.SetDays)((ReportingDriver)driver).addons().execute(setDays);
    birHaftaOncesiDateTime = String.valueOf(setDays.result);

    // 14. Run Clear 'StartDate' contents and type '{{birHaftaOncesiDateTime}}'
    clearAndTypeAction = CombinedActions.clearAndTypeAction(birHaftaOncesiDateTime);
    by = By.cssSelector("#StartDate");
    clearAndTypeAction = (CombinedActions.ClearAndTypeAction)((ReportingDriver)driver).addons().execute(clearAndTypeAction, by, -1);

    // 15. Send 'ENTER' key(s)
    by = By.cssSelector("#StartDate");
    (new Actions(driver)).sendKeys(GeneratedUtils.getKeys("ENTER")).build().perform();

    // 16. Double Click 'btnListele'
    doubleClickNoJs = ElementExtensions.getDoubleClickNoJs();
    by = By.xpath("//button[. = 'Listele']");
    doubleClickNoJs = (ElementExtensions.DoubleClickNoJs)((ReportingDriver)driver).addons().execute(doubleClickNoJs, by, -1);

    // 17. Is 'Refresh' visible?
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(35000, TimeUnit.MILLISECONDS);
    by = By.cssSelector("a[class='t-icon t-refresh']");
    driver.findElement(by).isDisplayed();
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 18. Get text from 'textToplamSatis'
    //    Get {haftalikToplamSatis}
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(35000, TimeUnit.MILLISECONDS);
    by = By.cssSelector("#footerTotal");
    haftalikToplamSatis = driver.findElement(by).getText();
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 19. Get text from 'Displaying items'
    //    Get {haftalıkIslem}
    by = By.xpath("//div[contains(text(),'Displaying')]");
    haftalikIslem = driver.findElement(by).getText();

    // 20. Get the index of the first occurrence of '[NONE]' in '{{haftalikIslem}}'
    //    Get {startIndex}
    findSubstringIndex = StringUtils.findSubstringIndex(haftalikIslem,"f",0);
    findSubstringIndex = (StringUtils.FindSubstringIndex)((ReportingDriver)driver).addons().execute(findSubstringIndex);
    starIndex = String.valueOf(findSubstringIndex.index);

    // 21. Evaluate '{{starIndex}}+2'
    evaluateMathExpr = MathematicalUtilities.evaluateMathExpr(String.format("%s+2",starIndex));
    evaluateMathExpr = (MathematicalUtilities.EvaluateMathExpr)((ReportingDriver)driver).addons().execute(evaluateMathExpr);
    starIndex = String.valueOf(evaluateMathExpr.result);

    // 22. Get substring of '{{haftalikIslem}}' from '{{starIndex}}' to '[NONE]'
    //    Get {haftalıkIslem}
    getStringSubstring = StringUtils.getStringSubstring(Integer.parseInt(starIndex),0,haftalikIslem);
    getStringSubstring = (StringUtils.GetStringSubstring)((ReportingDriver)driver).addons().execute(getStringSubstring);
    haftalikIslem = String.valueOf(getStringSubstring.result);

    // 23. Get current date
    currentDate = DateTimeOperations.currentDate("01.MM.yyyy 00:00");
    currentDate = (DateTimeOperations.CurrentDate)((ReportingDriver)driver).addons().execute(currentDate);
    birAyOnceDataTime = String.valueOf(currentDate.result);

    // 24. Run Clear 'StartDate' contents and type '{{birAyOnceDataTime}}'
    clearAndTypeAction = CombinedActions.clearAndTypeAction(birAyOnceDataTime);
    by = By.cssSelector("#StartDate");
    clearAndTypeAction = (CombinedActions.ClearAndTypeAction)((ReportingDriver)driver).addons().execute(clearAndTypeAction, by, -1);

    // 25. Send 'ENTER' key(s)
    by = By.cssSelector("#StartDate");
    (new Actions(driver)).sendKeys(GeneratedUtils.getKeys("ENTER")).build().perform();

    // 26. Double Click 'btnListele'
    doubleClickNoJs = ElementExtensions.getDoubleClickNoJs();
    by = By.xpath("//button[. = 'Listele']");
    doubleClickNoJs = (ElementExtensions.DoubleClickNoJs)((ReportingDriver)driver).addons().execute(doubleClickNoJs, by, -1);

    // 27. Is 'Refresh' visible?
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(35000, TimeUnit.MILLISECONDS);
    by = By.cssSelector("a[class='t-icon t-refresh']");
    driver.findElement(by).isDisplayed();
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 28. Get text from 'textToplamSatis'
    //    Get {aylikToplamSatis}
    by = By.cssSelector("#footerTotal");
    aylikToplamSatis = driver.findElement(by).getText();

    // 29. Get text from 'Displaying items'
    //    Get {aylikIslem}
    by = By.xpath("//div[contains(text(),'Displaying')]");
    aylikIslem = driver.findElement(by).getText();

    // 30. Get the index of the first occurrence of '[NONE]' in '{{aylikIslem}}'
    //    Get {startIndex}
    findSubstringIndex = StringUtils.findSubstringIndex(aylikIslem,"f",0);
    findSubstringIndex = (StringUtils.FindSubstringIndex)((ReportingDriver)driver).addons().execute(findSubstringIndex);
    starIndex = String.valueOf(findSubstringIndex.index);

    // 31. Evaluate '{{starIndex}}+2'
    evaluateMathExpr = MathematicalUtilities.evaluateMathExpr(String.format("%s+2",starIndex));
    evaluateMathExpr = (MathematicalUtilities.EvaluateMathExpr)((ReportingDriver)driver).addons().execute(evaluateMathExpr);
    starIndex = String.valueOf(evaluateMathExpr.result);

    // 32. Get substring of '{{aylikIslem}}' from '{{starIndex}}' to '[NONE]'
    //    Get {aylikIslem}
    getStringSubstring = StringUtils.getStringSubstring(Integer.parseInt(starIndex),0,aylikIslem);
    getStringSubstring = (StringUtils.GetStringSubstring)((ReportingDriver)driver).addons().execute(getStringSubstring);
    aylikIslem = String.valueOf(getStringSubstring.result);

    // 33. Click 'ANASAYFA'
    clickAction = JSActions.getClickAction();
    by = By.xpath("//a[. = 'ANASAYFA']");
    clickAction = (JSActions.ClickAction)((ReportingDriver)driver).addons().execute(clickAction, by, -1);

    // 34. Get text from 'txtOdemeBilgileri'
    by = By.cssSelector("div[id='tab-dailysum'] ul li:nth-child(1)");
    odemeBilgileri = driver.findElement(by).getText();

    // 35. Extract Sub-String from '{{odemeBilgileri}}' using '.*'
    extractStringUsingRegex = StringUtils.extractStringUsingRegex(".*",odemeBilgileri);
    extractStringUsingRegex = (StringUtils.ExtractStringUsingRegex)((ReportingDriver)driver).addons().execute(extractStringUsingRegex);
    odemeTutari = String.valueOf(extractStringUsingRegex.output);

    Thread.sleep(2000);
    // 36. Click 'haftalikToplam'
    by = By.xpath("//div[1]/ul/li[2]//img");
    driver.findElement(by).click();

    // 37. Get text from 'txtHaftalikOdemeBilgileri'
    by = By.cssSelector("#tab-weeklysum > ul > li:nth-child(1)");
    odemeBilgileri = driver.findElement(by).getText();

    // 38. Extract Sub-String from '{{odemeBilgileri}}' using '.*'
    extractStringUsingRegex = StringUtils.extractStringUsingRegex(".*",odemeBilgileri);
    extractStringUsingRegex = (StringUtils.ExtractStringUsingRegex)((ReportingDriver)driver).addons().execute(extractStringUsingRegex);
    odemeTutari = String.valueOf(extractStringUsingRegex.output);

    // 39. Click 'aylikOdemeBilgileri'
    by = By.xpath("//div[1]/ul/li[3]//img");
    driver.findElement(by).click();

    // 40. Get text from 'txtAylikOdemeBilgileri'
    by = By.cssSelector("div[id='tab-monthlysum'] ul li:nth-child(1)");
    odemeBilgileri = driver.findElement(by).getText();

    // 41. Extract Sub-String from '{{odemeBilgileri}}' using '.*'
    extractStringUsingRegex = StringUtils.extractStringUsingRegex(".*",odemeBilgileri);
    extractStringUsingRegex = (StringUtils.ExtractStringUsingRegex)((ReportingDriver)driver).addons().execute(extractStringUsingRegex);
    odemeTutari = String.valueOf(extractStringUsingRegex.output);

  }

  @Override
  public ReportingDriver getDriver() {
    return (ReportingDriver) driver;
  }

  @AfterAll
  static void tearDown() {
    if (driver != null) {
      driver.quit();
    }
  }

  private static Stream provideParameters() throws Exception {
    return Stream.of(Arguments.of("https://otomasyon.netahsilatdemo.com/Account/LogOff","","","","","","","","","","","","","","","","","",""));
  }
}
