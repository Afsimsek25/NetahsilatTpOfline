package netahsilat;

import io.testproject.addon.*;
import io.testproject.sdk.drivers.ReportingDriver;
import io.testproject.sdk.drivers.web.RemoteWebDriver;
import io.testproject.sdk.interfaces.junit5.ExceptionsReporter;
import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;

import java.util.concurrent.TimeUnit;
import java.util.stream.Stream;

/**
 * This class was automatically generated by TestProject
 * Project: Quality Museum Project
 * Test: C741 İşlem İade ile ilgili kullanıcılara mail gönderilmesi (Üyelikli)
 * Generated by: Ahmet Furkan SIMSEK (furkan.simsek@qualitymuseum.com)
 * Generated on Thu Sep 29 18:04:23 GMT 2022.
 */
@DisplayName("C741 İşlem İade ile ilgili kullanıcılara mail gönderilmesi (Üyelikli)")
public class C741 implements ExceptionsReporter {
  public static WebDriver driver;

  @BeforeAll
  static void setup() throws Exception {
    driver = new RemoteWebDriver("wThDxIHw4zNaCydjAhcfe81WrQPYlMBFI7FPwUwV8M41", new ChromeOptions(), "Ahmet Furkan SIMSEK");
  }

  /**
   * In order to upload the test to TestProject need to un-comment @ArgumentsSource and set in comment the @MethodSource
   * @org.junit.jupiter.params.provider.ArgumentsSource(io.testproject.sdk.interfaces.parameterization.TestProjectParameterizer.class) */
  @DisplayName("C741 İşlem İade ile ilgili kullanıcılara mail gönderilmesi (Üyelikli)")
  @ParameterizedTest
  @MethodSource("provideParameters")
  void execute(String ApplicationURL, String email, String emailPassword, String referansNumarasi,
      String userName, String password, String currentDate, String tutar, String Bakiye,
      String randomNumber, String refundReferenceNumber) throws Exception {
    // set timeout for driver actions (similar to step timeout)
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);
    By by;
    boolean booleanResult;
    MethodLogoutlogin methodlogoutlogin;
    String string;
    WebExtensions.SelectOptionbyVisibleText selectOptionbyVisibleText;
    WebExtensions.GetNumbersOnly getNumbersOnly;
    MathematicalUtilities.EvaluateMathExpr evaluateMathExpr;
    ImapMailOperations.ReadSpecificsMail readSpecificsMail;
    WebExtensions.WaitForAlertPresence waitForAlertPresence;
    RandomDataGenerator.GenerateNumberInRange generateNumberInRange;
    ImapMailOperations.DeleteAllMails deleteAllMails;
    WebExtensions.AcceptAlert acceptAlert;
    WebExtensions.GetAlertText getAlertText;
    DateTimeOperations.CurrentDate currentDatex;
    WebExtensions.DeselectAllOptions deselectAllOptions;

    // 1. Delete All Mails
    GeneratedUtils.sleep(500);
    deleteAllMails = ImapMailOperations.deleteAllMails(ProjectParameters.odemeEmail,ProjectParameters.yandexMailKey);
    deleteAllMails = (ImapMailOperations.DeleteAllMails)((ReportingDriver)driver).addons().execute(deleteAllMails);

    // 1. Run Method Logout&Login
    GeneratedUtils.sleep(500);
    methodlogoutlogin = new MethodLogoutlogin();
    methodlogoutlogin.ApplicationURL = ApplicationURL;
    methodlogoutlogin.userName = ProjectParameters.genelEmail;
    methodlogoutlogin.password = ProjectParameters.genelPassword;
    methodlogoutlogin.execute(driver);

    // 3. Move mouse to 'moveToIslemler'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("li[class='tag']");
    (new Actions(driver)).moveToElement(driver.findElement(by)).perform();

    // 4. Click 'İŞLEMLER1'
    GeneratedUtils.sleep(500);
    by = By.xpath("//a[. = 'İŞLEMLER']");
    driver.findElement(by).click();

    // 5. Click 'İŞLEM LİSTESİ'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("a[title='İŞLEM LİSTESİ']");
    driver.findElement(by).click();

    // 6. Is 'StartDate' visible?
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#StartDate");
    driver.findElement(by).isDisplayed();

    // 7. Clear 'StartDate' contents
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#StartDate");
    driver.findElement(by).clear();

    // 8. Get current date
    GeneratedUtils.sleep(500);
    currentDatex = DateTimeOperations.currentDate("dd.MM.yyy 00:00");
    currentDatex = (DateTimeOperations.CurrentDate)((ReportingDriver)driver).addons().execute(currentDatex);
    String strDate = String.valueOf(currentDatex.result);

    // 9. Clear 'EndDate' contents
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#EndDate");
    driver.findElement(by).clear();

    // 10. Type '{{currentDate}}' in 'EndDate'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#EndDate");
    driver.findElement(by).sendKeys(strDate);

    // 11. Deselect all options in 'VPosTransactionTypeId'
    GeneratedUtils.sleep(500);
    deselectAllOptions = WebExtensions.getDeselectAllOptions();
    by = By.cssSelector("#VPosTransactionTypeId");
    deselectAllOptions = (WebExtensions.DeselectAllOptions)((ReportingDriver)driver).addons().execute(deselectAllOptions, by, -1);

    // 12. Select options in 'VPosTransactionTypeId' with text '[NONE]'
    GeneratedUtils.sleep(500);
    selectOptionbyVisibleText = WebExtensions.selectOptionbyVisibleText("Satış");
    by = By.cssSelector("#VPosTransactionTypeId");
    selectOptionbyVisibleText = (WebExtensions.SelectOptionbyVisibleText)((ReportingDriver)driver).addons().execute(selectOptionbyVisibleText, by, -1);

    // 13. Select options in 'CancelledRefundedStatusId' with text '[NONE]'
    GeneratedUtils.sleep(500);
    selectOptionbyVisibleText = WebExtensions.selectOptionbyVisibleText("İptal ya da iade edilmemiş transactions");
    by = By.cssSelector("#CancelledRefundedStatusId");
    selectOptionbyVisibleText = (WebExtensions.SelectOptionbyVisibleText)((ReportingDriver)driver).addons().execute(selectOptionbyVisibleText, by, -1);

    // 14. Type '71249112816' in 'VendorName'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#VendorName");
    driver.findElement(by).sendKeys("71249112816");

    // 15. Click 'Bireysel Türk (- Yok)'
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(25000, TimeUnit.MILLISECONDS);
    GeneratedUtils.sleep(500);
    by = By.xpath("//div[contains(text(),',71249112816')] ");
    driver.findElement(by).click();
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 16. Click 'btnListele'
    GeneratedUtils.sleep(500);
    by = By.xpath("//button[. = 'Listele']");
    driver.findElement(by).click();

    // 17. Is 'Refresh' visible?
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(35000, TimeUnit.MILLISECONDS);
    GeneratedUtils.sleep(500);
    by = By.cssSelector("a[class='t-icon t-refresh']");
    driver.findElement(by).isDisplayed();
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 18. Get text from 'iadeye ait referans numarası'
    GeneratedUtils.sleep(500);
    by = By.xpath("//a[contains(@href,\"Refund\")]//..//..//td[starts-with(text(),'NT')]");
    string = driver.findElement(by).getAttribute("value");
    refundReferenceNumber = String.valueOf(string);

    // 19. Click 'iadeFromGrid'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("a[href*='Refund']");
    driver.findElement(by).click();

    // 20. Return only numbers from the text
    GeneratedUtils.sleep(500);
    getNumbersOnly = WebExtensions.getGetNumbersOnly();
    by = By.cssSelector("input[type='text'][value*=',']");
    getNumbersOnly = (WebExtensions.GetNumbersOnly)((ReportingDriver)driver).addons().execute(getNumbersOnly, by, -1);
    tutar = String.valueOf(getNumbersOnly.output);

    // 21. Clear 'inputRefundPopup' contents
    GeneratedUtils.sleep(500);
    by = By.cssSelector("input[type='text'][value*=',']");
    driver.findElement(by).clear();

    // 22. Type '1,00' in 'inputRefundPopup'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("input[type='text'][value*=',']");
    driver.findElement(by).sendKeys("1,00");

    // 23. Generate random number between '[NONE]' and '99999999'
    GeneratedUtils.sleep(500);
    generateNumberInRange = RandomDataGenerator.generateNumberInRange("","99999999");
    generateNumberInRange = (RandomDataGenerator.GenerateNumberInRange)((ReportingDriver)driver).addons().execute(generateNumberInRange);
    randomNumber = String.valueOf(generateNumberInRange.result);

    // 24. Type '{{randomNumber}}' in 'TransactionDescripton'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#TransactionDescripton");
    driver.findElement(by).sendKeys(randomNumber);

    // 25. Click 'buttonKaydiTamamla'
    GeneratedUtils.sleep(500);
    by = By.xpath("//button[. = 'Tamam']");
    driver.findElement(by).click();

    // 26. Does 'txtIptal/IadeResult' contain 'İşlem yapılıyor. Lütfen bekleyiniz...'?
    GeneratedUtils.sleep(500);
    by = By.xpath("//div[. = 'İşlem yapılıyor. Lütfen bekleyiniz...']");
    Assertions.assertTrue(driver.findElement(by).getText().contains("İşlem yapılıyor. Lütfen bekleyiniz..."));

    // 27. Is alert displayed?
    GeneratedUtils.sleep(500);
    waitForAlertPresence = WebExtensions.waitForAlertPresence(80000);
    waitForAlertPresence = (WebExtensions.WaitForAlertPresence)((ReportingDriver)driver).addons().execute(waitForAlertPresence);

    // 28. Get alert text
    GeneratedUtils.sleep(500);
    getAlertText = WebExtensions.getGetAlertText();
    getAlertText = (WebExtensions.GetAlertText)((ReportingDriver)driver).addons().execute(getAlertText);

    // 29. Accept alert
    GeneratedUtils.sleep(500);
    acceptAlert = WebExtensions.acceptAlert(0);
    acceptAlert = (WebExtensions.AcceptAlert)((ReportingDriver)driver).addons().execute(acceptAlert);

    // 30. Output searched string in specific mail
    GeneratedUtils.sleep(500);
    readSpecificsMail = ImapMailOperations.readSpecificsMail(ProjectParameters.odemeEmail,ProjectParameters.yandexMailKey,refundReferenceNumber,"C:\\TestProject\\mail\\C741.html");
    readSpecificsMail = (ImapMailOperations.ReadSpecificsMail)((ReportingDriver)driver).addons().execute(readSpecificsMail);

    // 31. Navigate to 'file:///C:\TestProject\mail\C741.html'
    GeneratedUtils.sleep(500);
    driver.navigate().to("file:///C:/TestProject/mail/C741.html");

    // 32. Return only numbers from the text
    GeneratedUtils.sleep(500);
    getNumbersOnly = WebExtensions.getGetNumbersOnly();
    by = By.cssSelector("#bakiye");
    getNumbersOnly = (WebExtensions.GetNumbersOnly)((ReportingDriver)driver).addons().execute(getNumbersOnly, by, -1);
    Bakiye = String.valueOf(getNumbersOnly.output);

    // 33. Evaluate '{{tutar}} - 100'
    GeneratedUtils.sleep(500);
    evaluateMathExpr = MathematicalUtilities.evaluateMathExpr(String.format("%s - 100",tutar));
    evaluateMathExpr = (MathematicalUtilities.EvaluateMathExpr)((ReportingDriver)driver).addons().execute(evaluateMathExpr);

  }

  @Override
  public ReportingDriver getDriver() {
    return (ReportingDriver) driver;
  }

  @AfterAll
  static void tearDown() {
    if (driver != null) {
      driver.quit();
    }
  }

  private static Stream provideParameters() throws Exception {
    return Stream.of(Arguments.of("https://otomasyon.netahsilatdemo.com/Account/LogOff","otomasyon@e-cozum.com","kY2*m5J","","otomasyon@test.com","Kd!cyhz4","","","","",""));
  }
}
