package netahsilat;

import io.testproject.sdk.drivers.ReportingDriver;
import io.testproject.sdk.drivers.web.RemoteWebDriver;
import io.testproject.sdk.interfaces.junit5.ExceptionsReporter;
import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;

import java.util.concurrent.TimeUnit;
import java.util.stream.Stream;

/**
 * This class was automatically generated by TestProject
 * Project: Quality Museum Project
 * Test: C1660 işlem tarihi ve son ödeme tarihine göre filtreleme yapılabilmeli
 * Generated by: Ahmet Furkan SIMSEK (furkan.simsek@qualitymuseum.com)
 * Generated on Fri Oct 07 11:07:45 GMT 2022.
 */
@DisplayName("C1660 işlem tarihi ve son ödeme tarihine göre filtreleme yapılabilmeli")
public class C1660 implements ExceptionsReporter {
  public static WebDriver driver;

  @BeforeAll
  static void setup() throws Exception {
    driver = new RemoteWebDriver("wThDxIHw4zNaCydjAhcfe81WrQPYlMBFI7FPwUwV8M41", new ChromeOptions(), "Ahmet Furkan SIMSEK");
  }

  /**
   * In order to upload the test to TestProject need to un-comment @ArgumentsSource and set in comment the @MethodSource
   * @org.junit.jupiter.params.provider.ArgumentsSource(io.testproject.sdk.interfaces.parameterization.TestProjectParameterizer.class) */
  @DisplayName("C1660 işlem tarihi ve son ödeme tarihine göre filtreleme yapılabilmeli")
  @ParameterizedTest
  @MethodSource("provideParameters")
  void execute(String ApplicationURL, String userName, String password, String currentDate,
      String faturaErpKodu, String faturaNumarasi, String dokumanKodu, String odemeLinki) throws
      Exception {
    // set timeout for driver actions (similar to step timeout)
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);
    By by;
    boolean booleanResult;
    MethodLogoutlogin methodlogoutlogin;

    // 1. Run Method Logout&Login
    GeneratedUtils.sleep(500);
    methodlogoutlogin = new MethodLogoutlogin();
    methodlogoutlogin.ApplicationURL = ApplicationURL;
    methodlogoutlogin.userName = ProjectParameters.genelEmail;
    methodlogoutlogin.password = ProjectParameters.genelPassword;
    methodlogoutlogin.execute(driver);

    // 2. Move mouse to 'moveCariHesapYonetimi'
    GeneratedUtils.sleep(500);
    by = By.cssSelector(".accountmanagement");
    (new Actions(driver)).moveToElement(driver.findElement(by)).perform();

    // 3. Click 'moveCariHesapYonetimi'
    GeneratedUtils.sleep(500);
    by = By.cssSelector(".accountmanagement");
    driver.findElement(by).click();

    // 4. Click 'BORÇ TAKİBİ'
    GeneratedUtils.sleep(500);
    by = By.xpath("//a[. = 'BORÇ TAKİBİ']");
    driver.findElement(by).click();

    // 5. Type '23.09.21' in 'FilterTransactionDateStart'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#FilterTransactionDateStart");
    driver.findElement(by).sendKeys("23.09.21");

    // 6. Type '23.09.21' in 'FilterTransactionDateEnd'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#FilterTransactionDateEnd");
    driver.findElement(by).sendKeys("23.09.21");

    // 7. Click 'btnListele'
    GeneratedUtils.sleep(500);
    by = By.xpath("//button[. = 'Listele']");
    driver.findElement(by).click();

    // 8. Does 'PAİDERP123' contain 'PAİDERP123'?
    //    CurrentAccountTransactions = ID 3366
    GeneratedUtils.sleep(500);
    by = By.xpath("//td[. = 'PAİDERP123']");
    Assertions.assertTrue(driver.findElement(by).getText().contains("PAİDERP123"));

    // 9. Does 'columnIslemDurumu' contain '23.09.21 18:21'?
    GeneratedUtils.sleep(500);
    by = By.xpath("//div[2]//td[2]");
    Assertions.assertTrue(driver.findElement(by).getText().contains("23.09.21 18:21"));

    // 10. Clear 'FilterTransactionDateStart' contents
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#FilterTransactionDateStart");
    driver.findElement(by).clear();

    // 11. Clear 'FilterTransactionDateEnd' contents
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#FilterTransactionDateEnd");
    driver.findElement(by).clear();

    // 12. Type '01.10.21' in 'FilterDueDateStart'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#FilterDueDateStart");
    driver.findElement(by).sendKeys("01.10.21");

    // 13. Type '01.10.21' in 'FilterDueDateEnd'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#FilterDueDateEnd");
    driver.findElement(by).sendKeys("01.10.21");

    // 14. Click 'btnListele'
    GeneratedUtils.sleep(500);
    by = By.xpath("//button[. = 'Listele']");
    driver.findElement(by).click();

    // 15. Does 'PAİDERP123' contain 'PAİDERP123'?
    GeneratedUtils.sleep(500);
    by = By.xpath("//td[. = 'PAİDERP123']");
    Assertions.assertTrue(driver.findElement(by).getText().contains("PAİDERP123"));

    // 16. Does 'columnIslemDurumu' contain '23.09.21 18:21'?
    GeneratedUtils.sleep(500);
    by = By.xpath("//div[2]//td[2]");
    Assertions.assertTrue(driver.findElement(by).getText().contains("23.09.21 18:21"));

  }

  @Override
  public ReportingDriver getDriver() {
    return (ReportingDriver) driver;
  }

  @AfterAll
  static void tearDown() {
    if (driver != null) {
      driver.quit();
    }
  }

  private static Stream provideParameters() throws Exception {
    return Stream.of(Arguments.of("https://otomasyon.netahsilatdemo.com/Account/LogOff","otomasyon@test.com","Kd!cyhz4","","","","",""));
  }
}
