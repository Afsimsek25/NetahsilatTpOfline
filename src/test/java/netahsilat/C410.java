package netahsilat;

import io.testproject.addon.CombinedActions;
import io.testproject.addon.GridOperations;
import io.testproject.addon.JSActions;
import io.testproject.sdk.drivers.ReportingDriver;
import io.testproject.sdk.drivers.web.RemoteWebDriver;
import io.testproject.sdk.interfaces.junit5.ExceptionsReporter;
import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeOptions;

import java.util.concurrent.TimeUnit;
import java.util.stream.Stream;

/**
 * This class was automatically generated by TestProject
 * Project: Quality Museum Project
 * Test: C410 Müşteri Temsilcisi İle Listeleme
 * Generated by: Ahmet Furkan SIMSEK (furkan.simsek@qualitymuseum.com)
 * Generated on Thu Sep 29 15:21:52 GMT 2022.
 */
@DisplayName("C410 Müşteri Temsilcisi İle Listeleme")
public class C410 implements ExceptionsReporter {
  public static WebDriver driver;

  @BeforeAll
  static void setup() throws Exception {
    driver = new RemoteWebDriver("wThDxIHw4zNaCydjAhcfe81WrQPYlMBFI7FPwUwV8M41", new ChromeOptions(), "Ahmet Furkan SIMSEK");
  }

  /**
   * In order to upload the test to TestProject need to un-comment @ArgumentsSource and set in comment the @MethodSource
   * @org.junit.jupiter.params.provider.ArgumentsSource(io.testproject.sdk.interfaces.parameterization.TestProjectParameterizer.class) */
  @DisplayName("C410 Müşteri Temsilcisi İle Listeleme")
  @ParameterizedTest
  @MethodSource("provideParameters")
  void execute(String ApplicationURL, String userName, String password) throws Exception {
    // set timeout for driver actions (similar to step timeout)
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);
    By by;
    boolean booleanResult;
    MethodRefreshLoadingControl methodrefreshloadingcontrol;
    MethodLogoutlogin methodlogoutlogin;
    CombinedActions.ClearAndTypeAction clearAndTypeAction;
    JSActions.ClickAction clickAction;
    GridOperations.GetData getData;

    // 1. Run Method Logout&Login
    GeneratedUtils.sleep(500);
    methodlogoutlogin = new MethodLogoutlogin();
    methodlogoutlogin.ApplicationURL = ApplicationURL;
    methodlogoutlogin.userName = ProjectParameters.genelEmail;
    methodlogoutlogin.password = ProjectParameters.genelPassword;
    methodlogoutlogin.execute(driver);

    // 2. Click 'İŞLEM LİSTESİ1'
    clickAction = JSActions.getClickAction();
    by = By.xpath("//a[. = 'İŞLEM LİSTESİ']");
    clickAction = (JSActions.ClickAction)((ReportingDriver)driver).addons().execute(clickAction, by, -1);

    // 3. Is 'StartDate' visible?
    by = By.cssSelector("#StartDate");
    driver.findElement(by).isDisplayed();

    // 4. This test was auto generated from steps of the 'C1909-Listelerde ki verilerin maskelenmesi' test
    methodrefreshloadingcontrol = new MethodRefreshLoadingControl();
    methodrefreshloadingcontrol.execute(driver);

    // 5. Run Clear 'StartDate' contents and type '1.07.2022 00:00'
    clearAndTypeAction = CombinedActions.clearAndTypeAction("1.07.2022 00:00");
    by = By.cssSelector("#StartDate");
    clearAndTypeAction = (CombinedActions.ClearAndTypeAction)((ReportingDriver)driver).addons().execute(clearAndTypeAction, by, -1);

    // 6. Is 'Refresh' visible?
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(35000, TimeUnit.MILLISECONDS);
    by = By.cssSelector("a[class='t-icon t-refresh']");
    driver.findElement(by).isDisplayed();
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 7. Type 'Otomasyon Test' in 'Müşteri temsilcisi select'
    by = By.xpath("//*[@class='select2-input select2-default']");
    driver.findElement(by).sendKeys("Otomasyon Test");

    // 8. Click 'Otomasyon Test3'
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(25000, TimeUnit.MILLISECONDS);
    by = By.xpath("//li/div[. = 'Otomasyon Test']");
    driver.findElement(by).click();
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 9. Click 'btnListele'
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(35000, TimeUnit.MILLISECONDS);
    by = By.xpath("//button[. = 'Listele']");
    driver.findElement(by).click();
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 10. This test was auto generated from steps of the 'C1909-Listelerde ki verilerin maskelenmesi' test
    methodrefreshloadingcontrol = new MethodRefreshLoadingControl();
    methodrefreshloadingcontrol.execute(driver);

    // 11. Run Get Data From Grid
    //    Üye ErpKodu - OtoTestERP555 - Equals
    getData = GridOperations.getData("Üye ErpKodu","OtoTestERP555","Equals");
    getData = (GridOperations.GetData)((ReportingDriver)driver).addons().execute(getData);

    // 12. Click 'Müşteri temsilcisi clear'
    clickAction = JSActions.getClickAction();
    by = By.xpath("//div[@id='s2id_RepresentativeName']//ul//li//a");
    clickAction = (JSActions.ClickAction)((ReportingDriver)driver).addons().execute(clickAction, by, -1);

    // 13. Click 'İŞLEM LİSTESİ3'
    //    Filtre'den sildikten sonra boş bir alana tıklanması gerekiyor.
    by = By.xpath("//span[. = 'İŞLEM LİSTESİ']");
    driver.findElement(by).click();

    // 14. Type 'otomasyon' in 'Müşteri temsilcisi select'
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(25000, TimeUnit.MILLISECONDS);
    by = By.xpath("//*[@class='select2-input select2-default']");
    driver.findElement(by).sendKeys("otomasyon");
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 15. Click 'Otomasyon Test6'
    by = By.xpath("//div[. = 'Otomasyon Test']");
    driver.findElement(by).click();

    // 16. Click 'btnListele'
    by = By.xpath("//button[. = 'Listele']");
    driver.findElement(by).click();

    // 17. This test was auto generated from steps of the 'C1909-Listelerde ki verilerin maskelenmesi' test
    methodrefreshloadingcontrol = new MethodRefreshLoadingControl();
    methodrefreshloadingcontrol.execute(driver);

    // 18. Run Get Data From Grid
    //    Üye ErpKodu - OtoTestERP555 - Equals
    getData = GridOperations.getData("Üye ErpKodu","OtoTestERP555","Equals");
    getData = (GridOperations.GetData)((ReportingDriver)driver).addons().execute(getData);

    // 19. Click 'Müşteri temsilcisi clear'
    clickAction = JSActions.getClickAction();
    by = By.xpath("//div[@id='s2id_RepresentativeName']//ul//li//a");
    clickAction = (JSActions.ClickAction)((ReportingDriver)driver).addons().execute(clickAction, by, -1);

    // 20. Click 'İŞLEM LİSTESİ3'
    //    Filtre'den sildikten sonra boş bir alana tıklanması gerekiyor.
    by = By.xpath("//span[. = 'İŞLEM LİSTESİ']");
    driver.findElement(by).click();

    // 21. Type 'otomasyon@test.com' in 'Müşteri temsilcisi select'
    by = By.xpath("//*[@class='select2-input select2-default']");
    driver.findElement(by).sendKeys("otomasyon@test.com");

    // 22. Click 'Otomasyon Test6'
    by = By.xpath("//div[. = 'Otomasyon Test']");
    driver.findElement(by).click();

    // 23. Click 'btnListele'
    by = By.xpath("//button[. = 'Listele']");
    driver.findElement(by).click();

    // 24. This test was auto generated from steps of the 'C1909-Listelerde ki verilerin maskelenmesi' test
    methodrefreshloadingcontrol = new MethodRefreshLoadingControl();
    methodrefreshloadingcontrol.execute(driver);

    // 25. Run Get Data From Grid
    //    Üye ErpKodu - OtoTestERP555 - Equals
    getData = GridOperations.getData("Üye ErpKodu","OtoTestERP555","Equals");
    getData = (GridOperations.GetData)((ReportingDriver)driver).addons().execute(getData);

    // 26. Click 'Müşteri temsilcisi clear'
    clickAction = JSActions.getClickAction();
    by = By.xpath("//div[@id='s2id_RepresentativeName']//ul//li//a");
    clickAction = (JSActions.ClickAction)((ReportingDriver)driver).addons().execute(clickAction, by, -1);

    // 27. Click 'İŞLEM LİSTESİ3'
    //    Filtre'den sildikten sonra boş bir alana tıklanması gerekiyor.
    by = By.xpath("//span[. = 'İŞLEM LİSTESİ']");
    driver.findElement(by).click();

    // 28. Type '44444444440' in 'Müşteri temsilcisi select'
    by = By.xpath("//*[@class='select2-input select2-default']");
    driver.findElement(by).sendKeys("44444444440");

    // 29. Click 'Otomasyon Test6'
    by = By.xpath("//div[. = 'Otomasyon Test']");
    driver.findElement(by).click();

    // 30. Click 'btnListele'
    by = By.xpath("//button[. = 'Listele']");
    driver.findElement(by).click();

    // 31. This test was auto generated from steps of the 'C1909-Listelerde ki verilerin maskelenmesi' test
    methodrefreshloadingcontrol = new MethodRefreshLoadingControl();
    methodrefreshloadingcontrol.execute(driver);

    // 32. Run Get Data From Grid
    //    Üye ErpKodu - OtoTestERP555 - Equals
    getData = GridOperations.getData("Üye ErpKodu","OtoTestERP555","Equals");
    getData = (GridOperations.GetData)((ReportingDriver)driver).addons().execute(getData);

  }

  @Override
  public ReportingDriver getDriver() {
    return (ReportingDriver) driver;
  }

  @AfterAll
  static void tearDown() {
    if (driver != null) {
      driver.quit();
    }
  }

  private static Stream provideParameters() throws Exception {
    return Stream.of(Arguments.of("https://otomasyon.netahsilatdemo.com/Account/LogOff","",""));
  }
}
