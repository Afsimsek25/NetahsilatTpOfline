package netahsilat;

import io.testproject.addon.WebExtensions;
import io.testproject.sdk.drivers.ReportingDriver;
import io.testproject.sdk.drivers.web.RemoteWebDriver;
import io.testproject.sdk.interfaces.junit5.ExceptionsReporter;
import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.RepeatedTest;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;

import java.util.concurrent.TimeUnit;
import java.util.stream.Stream;

/**
 * This class was automatically generated by TestProject
 * Project: Quality Museum Project
 * Test: C397 İşlem Tipi İle Listeleme
 * Generated by: Ahmet Furkan SIMSEK (furkan.simsek@qualitymuseum.com)
 * Generated on Wed Sep 28 20:31:32 GMT 2022.
 */
@DisplayName("C397 İşlem Tipi İle Listeleme")
public class C397 implements ExceptionsReporter {
  public static WebDriver driver;

  @BeforeAll
  static void setup() throws Exception {
    driver = new RemoteWebDriver("wThDxIHw4zNaCydjAhcfe81WrQPYlMBFI7FPwUwV8M41", new ChromeOptions(), "Ahmet Furkan SIMSEK");
  }

  /**
   * In order to upload the test to TestProject need to un-comment @ArgumentsSource and set in comment the @MethodSource
   * @org.junit.jupiter.params.provider.ArgumentsSource(io.testproject.sdk.interfaces.parameterization.TestProjectParameterizer.class) */
  @DisplayName("C397 İşlem Tipi İle Listeleme")
  @ParameterizedTest
  @MethodSource("provideParameters")
  void execute(String ApplicationURL, String userName, String password) throws Exception {
    // set timeout for driver actions (similar to step timeout)
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);
    By by;
    boolean booleanResult;
    MethodLogoutlogin methodlogoutlogin;
    WebExtensions.ClickAndHold clickAndHold;
    WebExtensions.ReleaseClick releaseClick;

    // 1. Run Method Logout&Login
    GeneratedUtils.sleep(500);
    methodlogoutlogin = new MethodLogoutlogin();
    methodlogoutlogin.ApplicationURL = ApplicationURL;
    methodlogoutlogin.userName = ProjectParameters.genelEmail2;
    methodlogoutlogin.password = ProjectParameters.genelPassword;
    methodlogoutlogin.execute(driver);

    // 2. Move mouse to 'moveToIslemler'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("li[class='tag']");
    (new Actions(driver)).moveToElement(driver.findElement(by)).perform();

    // 3. Click 'İŞLEMLER'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("a[title='İŞLEMLER']");
    driver.findElement(by).click();

    // 4. Click 'İŞLEM LİSTESİ'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("a[title='İŞLEM LİSTESİ']");
    driver.findElement(by).click();

    // 5. Move mouse to 'Satış'
    GeneratedUtils.sleep(500);
    by = By.xpath("//option[. = 'Satış']");
    (new Actions(driver)).moveToElement(driver.findElement(by)).perform();

    // 6. Click and hold
    GeneratedUtils.sleep(500);
    clickAndHold = WebExtensions.getClickAndHold();
    clickAndHold = (WebExtensions.ClickAndHold)((ReportingDriver)driver).addons().execute(clickAndHold);

    // 7. Release left mouse button
    GeneratedUtils.sleep(500);
    releaseClick = WebExtensions.getReleaseClick();
    releaseClick = (WebExtensions.ReleaseClick)((ReportingDriver)driver).addons().execute(releaseClick);

    // 8. Move mouse to 'StartDate'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#StartDate");
    (new Actions(driver)).moveToElement(driver.findElement(by)).perform();

    // 9. Clear 'StartDate' contents
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#StartDate");
    driver.findElement(by).clear();

    // 10. Type '1.02.2021 00:00' in 'StartDate'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#StartDate");
    driver.findElement(by).sendKeys("1.02.2021 00:00");

    // 11. Click 'btnListele'
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(35000, TimeUnit.MILLISECONDS);
    GeneratedUtils.sleep(500);
    by = By.xpath("//button[. = 'Listele']");
    driver.findElement(by).click();
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 12. Is 'Refresh' visible?
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(35000, TimeUnit.MILLISECONDS);
    GeneratedUtils.sleep(500);
    by = By.cssSelector("a[class='t-icon t-refresh']");
    driver.findElement(by).isDisplayed();
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 13. Is 'satisOnGrid' visible?
    GeneratedUtils.sleep(500);
    by = By.xpath("//td[text()='Satış']");
    driver.findElement(by).isDisplayed();

    // 14. Move mouse to 'Provizyon'
    GeneratedUtils.sleep(500);
    by = By.xpath("//option[3][. = 'Provizyon']");
    (new Actions(driver)).moveToElement(driver.findElement(by)).perform();

    // 15. Click and hold
    GeneratedUtils.sleep(500);
    clickAndHold = WebExtensions.getClickAndHold();
    clickAndHold = (WebExtensions.ClickAndHold)((ReportingDriver)driver).addons().execute(clickAndHold);

    // 16. Release left mouse button
    GeneratedUtils.sleep(500);
    releaseClick = WebExtensions.getReleaseClick();
    releaseClick = (WebExtensions.ReleaseClick)((ReportingDriver)driver).addons().execute(releaseClick);

    // 17. Click 'btnListele'
    GeneratedUtils.sleep(500);
    by = By.xpath("//button[. = 'Listele']");
    driver.findElement(by).click();

    // 18. Is 'Refresh' visible?
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(35000, TimeUnit.MILLISECONDS);
    GeneratedUtils.sleep(500);
    by = By.cssSelector("a[class='t-icon t-refresh']");
    driver.findElement(by).isDisplayed();
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 19. Is 'provizyonOnGrid' visible?
    GeneratedUtils.sleep(500);
    by = By.xpath("//td[text()='Provizyon']");
    driver.findElement(by).isDisplayed();

    // 20. Move mouse to 'Provizyon Onay'
    GeneratedUtils.sleep(500);
    by = By.xpath("//option[. = 'Provizyon Onay']");
    (new Actions(driver)).moveToElement(driver.findElement(by)).perform();

    // 21. Click and hold
    GeneratedUtils.sleep(500);
    clickAndHold = WebExtensions.getClickAndHold();
    clickAndHold = (WebExtensions.ClickAndHold)((ReportingDriver)driver).addons().execute(clickAndHold);

    // 22. Release left mouse button
    GeneratedUtils.sleep(500);
    releaseClick = WebExtensions.getReleaseClick();
    releaseClick = (WebExtensions.ReleaseClick)((ReportingDriver)driver).addons().execute(releaseClick);

    // 23. Click 'btnListele'
    GeneratedUtils.sleep(500);
    by = By.xpath("//button[. = 'Listele']");
    driver.findElement(by).click();

    // 24. Is 'Refresh' visible?
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(35000, TimeUnit.MILLISECONDS);
    GeneratedUtils.sleep(500);
    by = By.cssSelector("a[class='t-icon t-refresh']");
    driver.findElement(by).isDisplayed();
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 25. Is 'provizyonOnayOnGrid' visible?
    GeneratedUtils.sleep(500);
    by = By.xpath("//td[text()='Provizyon Onay']");
    driver.findElement(by).isDisplayed();

  }

  @Override
  public ReportingDriver getDriver() {
    return (ReportingDriver) driver;
  }

  @AfterAll
  static void tearDown() {
    if (driver != null) {
      driver.quit();
    }
  }

  private static Stream provideParameters() throws Exception {
    return Stream.of(Arguments.of("https://otomasyon.netahsilatdemo.com/Account/LogOff","",""));
  }
}
