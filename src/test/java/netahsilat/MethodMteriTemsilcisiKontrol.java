package netahsilat;

import io.testproject.addon.StringUtils;
import io.testproject.addon.WebExtensions;
import io.testproject.sdk.drivers.ReportingDriver;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;

import java.util.concurrent.TimeUnit;

/**
 * This class was automatically generated by TestProject
 * Project: Quality Museum Project
 * Test: Method Müşteri Temsilcisi kontrolü
 * Generated by: Ahmet Furkan SIMSEK (furkan.simsek@qualitymuseum.com)
 * Generated on Mon Oct 10 08:34:29 GMT 2022.
 */
public class MethodMteriTemsilcisiKontrol implements Test {
  public static WebDriver driver;

  /**
   * element test parameter
   */
  public String element = "";

  /**
   * ReplaceData test parameter
   */
  public String ReplaceData = "";

  /**
   * Temsilci1 test parameter
   */
  public String Temsilci1 = "";

  /**
   * Temsilci2 test parameter
   */
  public String Temsilci2 = "";

  /**
   * Temsilci3 test parameter
   */
  public String Temsilci3 = "!!";

  /**
   * Temsilci4 test parameter
   */
  public String Temsilci4 = "!!";

  /**
   * TabloBaslik test parameter
   */
  public String TabloBaslik = "Müşteri Temsilcisi Adı";

  public void execute(WebDriver parentDriver) throws Exception {
    driver = parentDriver;
    // set timeout for driver actions (similar to step timeout)
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);
    By by;
    boolean booleanResult;
    StringUtils.TrimString trimString;
    WebExtensions.ExecuteJavascript executeJavascript;
    StringUtils.ReplaceSubstrings replaceSubstrings;

    // 1. Execute JavaScript '$("table th").each(function(index){\n if ($(this).text() == '{{TabloBaslik}}')\n{\nreturn x = index;\n}});\nreturn x+1;' with arguments '[NONE]'
    //    tablo başlık adı
    executeJavascript = WebExtensions.executeJavascript(String.format("$(\"table th\").each(function(index){ if ($(this).text() == '%s') { return x = index;}}); return x+1;",TabloBaslik),"");
    executeJavascript = (WebExtensions.ExecuteJavascript)((ReportingDriver)driver).addons().execute(executeJavascript);
    element = String.valueOf(executeJavascript.output);

    // 2. Execute JavaScript 'res = "{XXTEMSILCILERXX}";\n$("tr td:nth-child({{element}})").each(function() {\n    res = res + ($(this).text());\n});\n\nreturn res;' with arguments '[NONE]'
    executeJavascript = WebExtensions.executeJavascript(String.format("res = \"{XXTEMSILCILERXX}\"; $(\"tr td:nth-child(%s)\").each(function() { res = res + ($(this).text());}); return res;",element),"");
    executeJavascript = (WebExtensions.ExecuteJavascript)((ReportingDriver)driver).addons().execute(executeJavascript);
    element = String.valueOf(executeJavascript.output);

    // 3. Replace all occurrences of 'Müşteri temsilcileri' with '[NONE]' in '{{element}}'
    //    Target : tablo içindeki değerler
    replaceSubstrings = StringUtils.replaceSubstrings(element,"Müşteri temsilcileri","");
    replaceSubstrings = (StringUtils.ReplaceSubstrings)((ReportingDriver)driver).addons().execute(replaceSubstrings);
    ReplaceData = String.valueOf(replaceSubstrings.result);

    // 4. Replace all occurrences of '{{Temsilci1}}' with '[NONE]' in '{{ReplaceData}}'
    replaceSubstrings = StringUtils.replaceSubstrings(ReplaceData,Temsilci1,"");
    replaceSubstrings = (StringUtils.ReplaceSubstrings)((ReportingDriver)driver).addons().execute(replaceSubstrings);
    ReplaceData = String.valueOf(replaceSubstrings.result);

    // 5. Replace all occurrences of '{{Temsilci2}}' with '[NONE]' in '{{ReplaceData}}'
    replaceSubstrings = StringUtils.replaceSubstrings(ReplaceData,Temsilci2,"");
    replaceSubstrings = (StringUtils.ReplaceSubstrings)((ReportingDriver)driver).addons().execute(replaceSubstrings);
    ReplaceData = String.valueOf(replaceSubstrings.result);

    // 6. Replace all occurrences of '{{Temsilci3}}' with '[NONE]' in '{{ReplaceData}}'
    replaceSubstrings = StringUtils.replaceSubstrings(ReplaceData,Temsilci3,"");
    replaceSubstrings = (StringUtils.ReplaceSubstrings)((ReportingDriver)driver).addons().execute(replaceSubstrings);
    ReplaceData = String.valueOf(replaceSubstrings.result);

    // 7. Replace all occurrences of '{{Temsilci4}}' with '[NONE]' in '{{ReplaceData}}'
    replaceSubstrings = StringUtils.replaceSubstrings(ReplaceData,Temsilci4,"");
    replaceSubstrings = (StringUtils.ReplaceSubstrings)((ReportingDriver)driver).addons().execute(replaceSubstrings);
    ReplaceData = String.valueOf(replaceSubstrings.result);

    // 8. Trim '{{ReplaceData}}'
    trimString = StringUtils.trimString(ReplaceData);
    trimString = (StringUtils.TrimString)((ReportingDriver)driver).addons().execute(trimString);
    ReplaceData = String.valueOf(trimString.resultString);

    // 9. Type '{{ReplaceData}}' in 'ErpCode'
    /* Step is disabled
    by = By.cssSelector("#ErpCode");
    driver.findElement(by).sendKeys(ReplaceData);
    */
    // 10. Type '{{ReplaceData}}' in 'CustomerId'
    /* Step is disabled
    by = By.cssSelector("#CustomerId");
    driver.findElement(by).sendKeys(ReplaceData);
    */
    // 11. Execute JavaScript '$(".t-header").each(function(index){\n if ($(this).text() == '{{TabloBaslik}}')\n{\n//$(".diff-button").html(index) \nreturn x = index;\n}});\nreturn x+1;' with arguments '[NONE]'
    //    Kolon adı
    /* Step is disabled
    executeJavascript = WebExtensions.executeJavascript(String.format("$(\".t-header\").each(function(index){
         if ($(this).text() == '%s')
        {
        //$(\".diff-button\").html(index) 
        return x = index;
        }});
        return x+1;",TabloBaslik),"");
    executeJavascript = (WebExtensions.ExecuteJavascript)((ReportingDriver)driver).addons().execute(executeJavascript);
    element = String.valueOf(executeJavascript.output);
    */
  }
}
