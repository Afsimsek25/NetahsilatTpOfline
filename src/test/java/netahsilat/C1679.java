package netahsilat;

import io.testproject.addon.ImapMailOperations;
import io.testproject.addon.StringUtils;
import io.testproject.addon.WebExtensions;
import io.testproject.sdk.drivers.ReportingDriver;
import io.testproject.sdk.drivers.web.RemoteWebDriver;
import io.testproject.sdk.interfaces.junit5.ExceptionsReporter;
import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;

import java.util.concurrent.TimeUnit;
import java.util.stream.Stream;

/**
 * This class was automatically generated by TestProject
 * Project: Quality Museum Project
 * Test: C1679 İşlem İptal ilgili kullanıcılara mail gönderilmesi (Üyeliksiz)
 * Generated by: Ahmet Furkan SIMSEK (furkan.simsek@qualitymuseum.com)
 * Generated on Thu Sep 29 18:15:42 GMT 2022.
 */
@DisplayName("C1679 İşlem İptal ilgili kullanıcılara mail gönderilmesi (Üyeliksiz)")
public class C1679 implements ExceptionsReporter {
  public static WebDriver driver;

  @BeforeAll
  static void setup() throws Exception {
    driver = new RemoteWebDriver("wThDxIHw4zNaCydjAhcfe81WrQPYlMBFI7FPwUwV8M41", new ChromeOptions(), "Ahmet Furkan SIMSEK");
  }

  /**
   * In order to upload the test to TestProject need to un-comment @ArgumentsSource and set in comment the @MethodSource
   * @org.junit.jupiter.params.provider.ArgumentsSource(io.testproject.sdk.interfaces.parameterization.TestProjectParameterizer.class) */
  @DisplayName("C1679 İşlem İptal ilgili kullanıcılara mail gönderilmesi (Üyeliksiz)")
  @ParameterizedTest
  @MethodSource("provideParameters")
  void execute(String ApplicationURL, String email, String emailPassword, String referansNumarasi,
      String userName, String password) throws Exception {
    // set timeout for driver actions (similar to step timeout)
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);
    By by;
    boolean booleanResult;
    MethodGeneldeme methodgeneldeme;
    MethodLogoutlogin methodlogoutlogin;
    String string;
    ImapMailOperations.ReadSpecificsMail readSpecificsMail;
    WebExtensions.WaitForAlertPresence waitForAlertPresence;
    StringUtils.GetStringSubstring getStringSubstring;
    WebExtensions.AcceptAlert acceptAlert;
    WebExtensions.GetAlertText getAlertText;

    // 1. Navigate to '{{logOutUrl}}'
    GeneratedUtils.sleep(500);
    driver.navigate().to(ProjectParameters.logOutUrl);

    // 2. Navigate to '{{UyeliksizOdemeURL}}'
    GeneratedUtils.sleep(500);
    driver.navigate().to(ProjectParameters.UyeliksizOdemeURL);

    // 3. Clear 'PureAmount' contents
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#PureAmount");
    driver.findElement(by).clear();

    // 4. Type '75,00' in 'PureAmount'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#PureAmount");
    driver.findElement(by).sendKeys("75,00");

    // 5. Run Method Genel Ödeme
    GeneratedUtils.sleep(500);
    methodgeneldeme = new MethodGeneldeme();
    methodgeneldeme.ApplicationURL = ApplicationURL;
    methodgeneldeme.execute(driver);

    // 6. Click 'odemeTalimatiOlustur'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("input[value='ÖDEME TALİMATI OLUŞTUR']");
    driver.findElement(by).click();

    // 7. Is 'btnNormalPayment' visible?
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#btnNormalPayment");
    driver.findElement(by).isDisplayed();

    // 8. Click 'btnOdemeyiTamamla'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#btnNormalPayment");
    driver.findElement(by).click();

    // 9. Is 'txtReferansNumarasi' visible?
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(135000, TimeUnit.MILLISECONDS);
    GeneratedUtils.sleep(500);
    by = By.xpath("(//p[@class='payment-result-text'])[1]");
    driver.findElement(by).isDisplayed();
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 10. Get text from 'txtReferansNumarasi'
    GeneratedUtils.sleep(500);
    by = By.xpath("(//p[@class='payment-result-text'])[1]");
    string = driver.findElement(by).getAttribute("value");
    referansNumarasi = String.valueOf(string);

    // 11. Get substring of '{{referansNumarasi}}' from '42' to '[NONE]'
    GeneratedUtils.sleep(500);
    getStringSubstring = StringUtils.getStringSubstring(42,0,referansNumarasi);
    getStringSubstring = (StringUtils.GetStringSubstring)((ReportingDriver)driver).addons().execute(getStringSubstring);
    referansNumarasi = String.valueOf(getStringSubstring.result);

    // 12. Run Method Logout&Login
    GeneratedUtils.sleep(500);
    methodlogoutlogin = new MethodLogoutlogin();
    methodlogoutlogin.ApplicationURL = ApplicationURL;
    methodlogoutlogin.userName = ProjectParameters.odemeEmail;
    methodlogoutlogin.password = password;
    methodlogoutlogin.execute(driver);

    // 13. Move mouse to 'moveToIslemler'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("li[class='tag']");
    (new Actions(driver)).moveToElement(driver.findElement(by)).perform();

    // 14. Click 'İŞLEMLER1'
    GeneratedUtils.sleep(500);
    by = By.xpath("//a[. = 'İŞLEMLER']");
    driver.findElement(by).click();

    // 15. Click 'İŞLEM LİSTESİ'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("a[title='İŞLEM LİSTESİ']");
    driver.findElement(by).click();

    // 16. Type '{{referansNumarasi}}' in 'ReferenceNumber'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#ReferenceNumber");
    driver.findElement(by).sendKeys(referansNumarasi);

    // 17. Click 'btnListele'
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(35000, TimeUnit.MILLISECONDS);
    GeneratedUtils.sleep(500);
    by = By.xpath("//button[. = 'Listele']");
    driver.findElement(by).click();
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 18. Is 'Refresh' visible?
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(35000, TimeUnit.MILLISECONDS);
    GeneratedUtils.sleep(500);
    by = By.cssSelector("a[class='t-icon t-refresh']");
    driver.findElement(by).isDisplayed();
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 19. Click 'btnIptalOnGrid'
    GeneratedUtils.sleep(500);
    by = By.xpath("//td/a[1]/img");
    driver.findElement(by).click();

    // 20. Type 'otomasyon tarafından iptal edilmiştir 181212***' in 'TransactionDescripton'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#TransactionDescripton");
    driver.findElement(by).sendKeys("otomasyon tarafından iptal edilmiştir 181212***");

    // 21. Click 'buttonKaydiTamamla'
    GeneratedUtils.sleep(500);
    by = By.xpath("//button[. = 'Tamam']");
    driver.findElement(by).click();

    // 22. Does 'txtIptal/IadeResult' contain 'İşlem yapılıyor. Lütfen bekleyiniz...'?
    GeneratedUtils.sleep(500);
    by = By.xpath("//div[. = 'İşlem yapılıyor. Lütfen bekleyiniz...']");
    Assertions.assertTrue(driver.findElement(by).getText().contains("İşlem yapılıyor. Lütfen bekleyiniz..."));

    // 23. Is alert displayed?
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(2000, TimeUnit.MILLISECONDS);
    waitForAlertPresence = WebExtensions.waitForAlertPresence(50000);
    waitForAlertPresence = (WebExtensions.WaitForAlertPresence)((ReportingDriver)driver).addons().execute(waitForAlertPresence);
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 24. Get alert text
    GeneratedUtils.sleep(500);
    getAlertText = WebExtensions.getGetAlertText();
    getAlertText = (WebExtensions.GetAlertText)((ReportingDriver)driver).addons().execute(getAlertText);

    // 25. Accept alert
    GeneratedUtils.sleep(500);
    acceptAlert = WebExtensions.acceptAlert(0);
    acceptAlert = (WebExtensions.AcceptAlert)((ReportingDriver)driver).addons().execute(acceptAlert);

    // 26. Output searched string in specific mail
    GeneratedUtils.sleep(500);
    readSpecificsMail = ImapMailOperations.readSpecificsMail(ProjectParameters.odemeEmail,ProjectParameters.yandexMailKey,referansNumarasi,"C:\\TestProject\\mail\\C1679.html");
    readSpecificsMail = (ImapMailOperations.ReadSpecificsMail)((ReportingDriver)driver).addons().execute(readSpecificsMail);

    // 27. Navigate to 'file:///C:\TestProject\mail\C1679.html'
    GeneratedUtils.sleep(500);
    driver.navigate().to("file:///C:\\TestProject\\mail\\C1679.html");

    // 28. Does 'txtIslemNoOnEmail' contain '{{referansNumarasi}}'?
    GeneratedUtils.sleep(500);
    by = By.xpath("//td[normalize-space()='İşlem No:']//following-sibling::td");
    Assertions.assertTrue(driver.findElement(by).getText().contains(referansNumarasi));

  }

  @Override
  public ReportingDriver getDriver() {
    return (ReportingDriver) driver;
  }

  @AfterAll
  static void tearDown() {
    if (driver != null) {
      driver.quit();
    }
  }

  private static Stream provideParameters() throws Exception {
    return Stream.of(Arguments.of("https://otomasyon.netahsilatdemo.com/Account/LogOff","otomasyon@e-cozum.com","kY2*m5J","","otomasyon@test.com","Kd!cyhz4"));
  }
}
