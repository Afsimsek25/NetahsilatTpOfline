package netahsilat;

import io.testproject.addon.CombinedActions;
import io.testproject.addon.TypeTextSlowly;
import io.testproject.sdk.drivers.ReportingDriver;
import io.testproject.sdk.interfaces.junit5.ExceptionsReporter;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;

import java.util.concurrent.TimeUnit;

/**
 * This class was automatically generated by TestProject
 * Project: Quality Museum Project
 * Test: Method Parametrik Ödeme (Type text with delay)
 * Generated by: Ahmet Furkan SIMSEK (furkan.simsek@qualitymuseum.com)
 * Generated on Fri Oct 07 11:41:33 GMT 2022.
 */
public class MethodParametrikdemetypeTextWithDelay implements Test, ExceptionsReporter {
  public static WebDriver driver;

  /**
   * ApplicationURL test parameter
   */
  public String ApplicationURL = "https://otomasyon.netahsilatdemo.com/Account/LogOff";

  /**
   * kartNo test parameter
   */
  public String kartNo = "";

  /**
   * CVV test parameter
   */
  public String CVV = "";

  /**
   * ayYil test parameter
   */
  public String ayYil = "";

  public void execute(WebDriver parentDriver) throws Exception {
    driver = parentDriver;
    // set timeout for driver actions (similar to step timeout)
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);
    By by;
    boolean booleanResult;
    CombinedActions.ClearAndTypeAction clearAndTypeAction;
    TypeTextSlowly.TypeTextWithControlledSpeed typeTextWithControlledSpeed;

    // 1. Type text to a TextField element with a delay between characters.
    GeneratedUtils.sleep(500);
    typeTextWithControlledSpeed = TypeTextSlowly.typeTextWithControlledSpeed(kartNo,0);
    by = By.cssSelector("#CardNumber");
    typeTextWithControlledSpeed = (TypeTextSlowly.TypeTextWithControlledSpeed)((ReportingDriver)driver).addons().execute(typeTextWithControlledSpeed, by, -1);

    // 2. Type text to a TextField element with a delay between characters.
    GeneratedUtils.sleep(500);
    typeTextWithControlledSpeed = TypeTextSlowly.typeTextWithControlledSpeed(ayYil,0);
    by = By.cssSelector("#CardExpireDate");
    typeTextWithControlledSpeed = (TypeTextSlowly.TypeTextWithControlledSpeed)((ReportingDriver)driver).addons().execute(typeTextWithControlledSpeed, by, -1);

    // 3. Type '{{CVV}}' in 'CVV'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#CardCvv");
    driver.findElement(by).sendKeys(CVV);

    // 4. Type 'Kart Sahibi' in 'Kart Üzerindeki İsim'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#CardHolderName");
    driver.findElement(by).sendKeys("Kart Sahibi");

    // 5. Type '51422941570' in 'TKC'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#TKC");
    driver.findElement(by).sendKeys("51422941570");

    // 6. Run Clear 'Telefon Numarası' contents and type '5555555123'
    GeneratedUtils.sleep(500);
    clearAndTypeAction = CombinedActions.clearAndTypeAction("5555555123");
    by = By.cssSelector("#Phone");
    clearAndTypeAction = (CombinedActions.ClearAndTypeAction)((ReportingDriver)driver).addons().execute(clearAndTypeAction, by, -1);

    // 7. Run Clear 'inputEmailPricinPage' contents and type '{{odemeEmail}}'
    GeneratedUtils.sleep(500);
    clearAndTypeAction = CombinedActions.clearAndTypeAction(ProjectParameters.odemeEmail);
    by = By.cssSelector("#Email");
    clearAndTypeAction = (CombinedActions.ClearAndTypeAction)((ReportingDriver)driver).addons().execute(clearAndTypeAction, by, -1);

    // 8. Run Clear 'TransactionDescription' contents and type 'Ödeme açıklaması'
    GeneratedUtils.sleep(500);
    clearAndTypeAction = CombinedActions.clearAndTypeAction("Ödeme açıklaması");
    by = By.xpath("//*[@id=\"TransactionDescription\"]");
    clearAndTypeAction = (CombinedActions.ClearAndTypeAction)((ReportingDriver)driver).addons().execute(clearAndTypeAction, by, -1);

  }

  @Override
  public ReportingDriver getDriver() {
    return (ReportingDriver) driver;
  }
}
