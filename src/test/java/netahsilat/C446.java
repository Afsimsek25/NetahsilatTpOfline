package netahsilat;

import io.testproject.addon.*;
import io.testproject.sdk.drivers.ReportingDriver;
import io.testproject.sdk.drivers.web.RemoteWebDriver;
import io.testproject.sdk.interfaces.junit5.ExceptionsReporter;
import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;

import java.util.concurrent.TimeUnit;
import java.util.stream.Stream;

/**
 * This class was automatically generated by TestProject
 * Project: Quality Museum Project
 * Test: C446 Excel'e Aktarım (tutar ,komisyon oranları doğruluğu kontrol edilmeli)
 * Generated by: Ahmet Furkan SIMSEK (furkan.simsek@qualitymuseum.com)
 * Generated on Thu Sep 29 17:19:54 GMT 2022.
 */
@DisplayName("C446 Excel'e Aktarım (tutar ,komisyon oranları doğruluğu kontrol edilmeli)")
public class C446 implements ExceptionsReporter {
  public static WebDriver driver;

  @BeforeAll
  static void setup() throws Exception {
    driver = new RemoteWebDriver("wThDxIHw4zNaCydjAhcfe81WrQPYlMBFI7FPwUwV8M41", new ChromeOptions(), "Ahmet Furkan SIMSEK");
  }

  /**
   * In order to upload the test to TestProject need to un-comment @ArgumentsSource and set in comment the @MethodSource
   * @org.junit.jupiter.params.provider.ArgumentsSource(io.testproject.sdk.interfaces.parameterization.TestProjectParameterizer.class) */
  @DisplayName("C446 Excel'e Aktarım (tutar ,komisyon oranları doğruluğu kontrol edilmeli)")
  @ParameterizedTest
  @MethodSource("provideParameters")
  void execute(String ApplicationURL, String userName, String password, String displayingItem,
      String deneme, String currentDateTime, String threeDaysAgo, String komisyonColumnIndex,
      String komisyonValue, String tutarColumnIndex, String tutarValue, String tutarBoluKomisyon,
      String NetTutarIndex, String NetTutarValue, String rowIndex, String sysenv) throws Exception {
    // set timeout for driver actions (similar to step timeout)
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);
    By by;
    boolean booleanResult;
    MethodRefreshLoadingControl methodrefreshloadingcontrol;
    MethodLogoutlogin methodlogoutlogin;
    CommunityExcelActionsforWindows.deleteFile deleteFile;
    MathematicalUtilities.EvaluateMathExpr evaluateMathExpr;
    CommunityExcelActionsforWindows.returnColumnIndex returnColumnIndex;
    ExcelOperations.GetCellValue getCellValue;
    DateTimeOperations.SetDays setDays;
    CommunityExcelActionsforWindows.waitUntilFileDownloaded waitUntilFileDownloaded;
    NetahsilatUtills.GetSystemEnv getSystemEnv;
    CommunityExcelActionsforWindows.getData getData;
    DateTimeOperations.CurrentDate currentDate;

    // 1. Run Method Logout&Login
    GeneratedUtils.sleep(500);
    methodlogoutlogin = new MethodLogoutlogin();
    methodlogoutlogin.ApplicationURL = ApplicationURL;
    methodlogoutlogin.userName = ProjectParameters.genelEmail;
    methodlogoutlogin.password = ProjectParameters.genelPassword;
    methodlogoutlogin.execute(driver);

    // 2. Move mouse to 'moveToIslemler'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("li[class='tag']");
    (new Actions(driver)).moveToElement(driver.findElement(by)).perform();

    // 3. Click 'İŞLEMLER1'
    GeneratedUtils.sleep(500);
    by = By.xpath("//a[. = 'İŞLEMLER']");
    driver.findElement(by).click();

    // 4. Click 'İŞLEM LİSTESİ'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("a[title='İŞLEM LİSTESİ']");
    driver.findElement(by).click();

    // 5. This test was auto generated from steps of the 'C1909-Listelerde ki verilerin maskelenmesi' test
    GeneratedUtils.sleep(500);
    methodrefreshloadingcontrol = new MethodRefreshLoadingControl();
    methodrefreshloadingcontrol.execute(driver);

    // 6. Get current date
    GeneratedUtils.sleep(500);
    currentDate = DateTimeOperations.currentDate("dd.MM.yyyy");
    currentDate = (DateTimeOperations.CurrentDate)((ReportingDriver)driver).addons().execute(currentDate);
    currentDateTime = String.valueOf(currentDate.result);

    // 7. Set '-3' days to '{{currentDateTime}}'
    GeneratedUtils.sleep(500);
    setDays = DateTimeOperations.setDays("-3",currentDateTime,"dd.MM.yyyy","dd.MM.yyyy");
    setDays = (DateTimeOperations.SetDays)((ReportingDriver)driver).addons().execute(setDays);
    threeDaysAgo = String.valueOf(setDays.result);

    // 8. Clear 'StartDate' contents
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#StartDate");
    driver.findElement(by).clear();

    // 9. Type '{{threeDaysAgo}}' in 'StartDate'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#StartDate");
    driver.findElement(by).sendKeys(threeDaysAgo);

    // 10. Click 'btnListele'
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(35000, TimeUnit.MILLISECONDS);
    GeneratedUtils.sleep(500);
    by = By.xpath("//button[. = 'Listele']");
    driver.findElement(by).click();
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 11. This test was auto generated from steps of the 'C1909-Listelerde ki verilerin maskelenmesi' test
    GeneratedUtils.sleep(500);
    methodrefreshloadingcontrol = new MethodRefreshLoadingControl();
    methodrefreshloadingcontrol.execute(driver);

    // 12. Delete File (if exist)
    GeneratedUtils.sleep(500);
    deleteFile = CommunityExcelActionsforWindows.deleteFile("%USERPROFILE%\\Downloads\\Islemler.xlsx");
    deleteFile = (CommunityExcelActionsforWindows.deleteFile)((ReportingDriver)driver).addons().execute(deleteFile);

    // 13. Click 'Excel'e Aktar'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#btnExport");
    driver.findElement(by).click();

    // 14. Wait Until The File is Downloaded
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(60000, TimeUnit.MILLISECONDS);
    GeneratedUtils.sleep(500);
    waitUntilFileDownloaded = CommunityExcelActionsforWindows.waitUntilFileDownloaded("%USERPROFILE%\\Downloads\\Islemler.xlsx",30);
    waitUntilFileDownloaded = (CommunityExcelActionsforWindows.waitUntilFileDownloaded)((ReportingDriver)driver).addons().execute(waitUntilFileDownloaded);
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 15. Get Excel Column Index
    //    Komisyon [İÇİNDE] Sütununun index numarasını al
    GeneratedUtils.sleep(500);
    returnColumnIndex = CommunityExcelActionsforWindows.returnColumnIndex(1,"%USERPROFILE%\\Downloads\\Islemler.xlsx","Komisyon [İÇİNDE]");
    returnColumnIndex = (CommunityExcelActionsforWindows.returnColumnIndex)((ReportingDriver)driver).addons().execute(returnColumnIndex);
    komisyonColumnIndex = String.valueOf(returnColumnIndex.Col);

    // 16. Get System Environment
    //    Komisyon değerini al
    GeneratedUtils.sleep(500);
    getSystemEnv = NetahsilatUtills.getSystemEnv("USERPROFILE");
    getSystemEnv = (NetahsilatUtills.GetSystemEnv)((ReportingDriver)driver).addons().execute(getSystemEnv);
    sysenv = String.valueOf(getSystemEnv.Path);

    // 17. Get cell from row '2',column '{{komisyonColumnIndex}}'
    //    Komisyon değerini al
    String path = sysenv+="/Downloads/Islemler.xlsx";
    GeneratedUtils.sleep(500);
    getCellValue = ExcelOperations.getCellValue(
            path,
            "",
            komisyonColumnIndex,
            "2");
    getCellValue = (ExcelOperations.GetCellValue)((ReportingDriver)driver).addons().execute(getCellValue);
    komisyonValue = String.valueOf(getCellValue.cellValue);

    // 18. Get Excel Column Index
    //    Tutar sütununun index numarasını al
    GeneratedUtils.sleep(500);
    returnColumnIndex = CommunityExcelActionsforWindows.returnColumnIndex(1,"%USERPROFILE%\\Downloads\\Islemler.xlsx","Tutar");
    returnColumnIndex = (CommunityExcelActionsforWindows.returnColumnIndex)((ReportingDriver)driver).addons().execute(returnColumnIndex);
    tutarColumnIndex = String.valueOf(returnColumnIndex.Col);

    // 19. Get Data From Excel
    //    Tutar değerini al
    GeneratedUtils.sleep(500);
    getData = CommunityExcelActionsforWindows.getData(1,2,Integer.parseInt(tutarColumnIndex),"%USERPROFILE%\\Downloads\\Islemler.xlsx");
    getData = (CommunityExcelActionsforWindows.getData)((ReportingDriver)driver).addons().execute(getData);
    tutarValue = String.valueOf(getData.Value);

    // 20. Get Excel Column Index
    //    Net Tutar sütununun index numarasını al
    GeneratedUtils.sleep(500);
    returnColumnIndex = CommunityExcelActionsforWindows.returnColumnIndex(1,"%USERPROFILE%\\Downloads\\Islemler.xlsx","Net Tutar");
    returnColumnIndex = (CommunityExcelActionsforWindows.returnColumnIndex)((ReportingDriver)driver).addons().execute(returnColumnIndex);
    NetTutarIndex = String.valueOf(returnColumnIndex.Col);

    // 21. Get Data From Excel
    //    Net Tutar değerini al
    GeneratedUtils.sleep(500);
    getData = CommunityExcelActionsforWindows.getData(1,2,Integer.parseInt(NetTutarIndex),"%USERPROFILE%\\Downloads\\Islemler.xlsx");
    getData = (CommunityExcelActionsforWindows.getData)((ReportingDriver)driver).addons().execute(getData);
    NetTutarValue = String.valueOf(getData.Value);

    // 22. Evaluate '{{tutarValue}} -  ( {{tutarValue}} * {{komisyonValue}} /100)'
    GeneratedUtils.sleep(500);
    evaluateMathExpr = MathematicalUtilities.evaluateMathExpr(String.format("%s -  ( %s * %s /100)",tutarValue,tutarValue,komisyonValue));
    evaluateMathExpr = (MathematicalUtilities.EvaluateMathExpr)((ReportingDriver)driver).addons().execute(evaluateMathExpr);
    tutarBoluKomisyon = String.valueOf(evaluateMathExpr.result);

  }

  @Override
  public ReportingDriver getDriver() {
    return (ReportingDriver) driver;
  }

  @AfterAll
  static void tearDown() {
    if (driver != null) {
      driver.quit();
    }
  }

  private static Stream provideParameters() throws Exception {
    return Stream.of(Arguments.of("https://otomasyon.netahsilatdemo.com/Account/LogOff","otomasyon@test.com","Kd!cyhz4","","","","","","","","","","","","2",""));
  }
}
