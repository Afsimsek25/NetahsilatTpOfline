package netahsilat;

import io.testproject.addon.NetahsilatUtills;
import io.testproject.addon.StringUtils;
import io.testproject.addon.WebExtensions;
import io.testproject.sdk.drivers.ReportingDriver;
import io.testproject.sdk.drivers.web.RemoteWebDriver;
import io.testproject.sdk.interfaces.junit5.ExceptionsReporter;
import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;

import java.util.concurrent.TimeUnit;
import java.util.stream.Stream;

/**
 * This class was automatically generated by TestProject
 * Project: Quality Museum Project
 * Test: C1315   Ödemenin tipine göre iptal işlemine karar verilmesi(NTH-7567, NTH-8945)
 * Generated by: Ahmet Furkan SIMSEK (furkan.simsek@qualitymuseum.com)
 * Generated on Mon Oct 03 10:27:43 GMT 2022.
 */
@DisplayName("C1315   Ödemenin tipine göre iptal işlemine karar verilmesi(NTH-7567, NTH-8945)")
public class C1315 implements ExceptionsReporter {
  public static WebDriver driver;

  @BeforeAll
  static void setup() throws Exception {
    driver = new RemoteWebDriver("wThDxIHw4zNaCydjAhcfe81WrQPYlMBFI7FPwUwV8M41", new ChromeOptions(), "Ahmet Furkan SIMSEK");
  }

  /**
   * In order to upload the test to TestProject need to un-comment @ArgumentsSource and set in comment the @MethodSource
   * @org.junit.jupiter.params.provider.ArgumentsSource(io.testproject.sdk.interfaces.parameterization.TestProjectParameterizer.class) */
  @DisplayName("C1315   Ödemenin tipine göre iptal işlemine karar verilmesi(NTH-7567, NTH-8945)")
  @ParameterizedTest
  @MethodSource("provideParameters")
  void execute(String ApplicationURL, String userName, String password,
      String odemeReferansNumarasi, String odemeReferansNumarasiREgex) throws Exception {
    // set timeout for driver actions (similar to step timeout)
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);
    By by;
    boolean booleanResult;
    MethodGeneldeme methodgeneldeme;
    MethodLogoutlogin methodlogoutlogin;
    String string;
    WebExtensions.WaitForAlertPresence waitForAlertPresence;
    StringUtils.GetStringSubstring getStringSubstring;
    NetahsilatUtills.ClickUntilGone clickUntilGone;
    WebExtensions.AcceptAlert acceptAlert;
    WebExtensions.GetAlertText getAlertText;

    // 1. Navigate to '{{ApplicationURL}}'
    GeneratedUtils.sleep(500);
    driver.navigate().to(ApplicationURL);

    // 2. Click 'btnUyeliksizOdeme'
    GeneratedUtils.sleep(500);
    by = By.xpath("//div[@id='mainPageSubMenu']//a[text()= 'Üyeliksiz Ödeme']");
    driver.findElement(by).click();

    // 3. Clear 'PureAmount' contents
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#PureAmount");
    driver.findElement(by).clear();

    // 4. Type '181,20' in 'PureAmount'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#PureAmount");
    driver.findElement(by).sendKeys("181,20");

    // 5. Run Method Genel Ödeme
    GeneratedUtils.sleep(500);
    methodgeneldeme = new MethodGeneldeme();
    methodgeneldeme.ApplicationURL = ApplicationURL;
    methodgeneldeme.execute(driver);

    // 6. Click 'odemeTalimatiOlustur'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("input[value='ÖDEME TALİMATI OLUŞTUR']");
    driver.findElement(by).click();

    // 7. Is 'btnNormalPayment' visible?
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(135000, TimeUnit.MILLISECONDS);
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#btnNormalPayment");
    driver.findElement(by).isDisplayed();
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 8. Click 'btnOdemeyiTamamla'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#btnNormalPayment");
    driver.findElement(by).click();

    // 9. Is 'textIsleminizBasarili' visible?
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(135000, TimeUnit.MILLISECONDS);
    GeneratedUtils.sleep(500);
    by = By.cssSelector("div[class='alert alert-success success-template']>p");
    driver.findElement(by).isDisplayed();
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 10. Does 'textIsleminizBasarili' contain 'Referans Numarası'?
    GeneratedUtils.sleep(500);
    by = By.cssSelector("div[class='alert alert-success success-template']>p");
    Assertions.assertTrue(driver.findElement(by).getText().contains("Referans Numarası"));

    // 11. Get text from 'txtReferansNumarasi'
    GeneratedUtils.sleep(500);
    by = By.xpath("(//p[@class='payment-result-text'])[1]");
    string = driver.findElement(by).getAttribute("value");
    odemeReferansNumarasi = String.valueOf(string);

    // 12. Get substring of '{{odemeReferansNumarasi}}' from '42' to '[NONE]'
    GeneratedUtils.sleep(500);
    getStringSubstring = StringUtils.getStringSubstring(42,0,odemeReferansNumarasi);
    getStringSubstring = (StringUtils.GetStringSubstring)((ReportingDriver)driver).addons().execute(getStringSubstring);
    odemeReferansNumarasiREgex = String.valueOf(getStringSubstring.result);

    // 13. Run Method Logout&Login
    GeneratedUtils.sleep(500);
    methodlogoutlogin = new MethodLogoutlogin();
    methodlogoutlogin.ApplicationURL = ApplicationURL;
    methodlogoutlogin.userName = ProjectParameters.genelEmail;
    methodlogoutlogin.password = ProjectParameters.genelPassword;
    methodlogoutlogin.execute(driver);

    // 14. Move mouse to 'moveToSiteYönetimi'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("li[class='config']");
    (new Actions(driver)).moveToElement(driver.findElement(by)).perform();

    // 15. Click 'btnSiteYönetimi'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("a[title='SİTE YÖNETİMİ']");
    driver.findElement(by).click();

    // 16. Move mouse to 'dropDownPosAyarlari'
    GeneratedUtils.sleep(500);
    by = By.xpath("//li[7]/ul/li[3]//img");
    (new Actions(driver)).moveToElement(driver.findElement(by)).perform();

    // 17. Click 'SANAL POSLAR'
    GeneratedUtils.sleep(500);
    by = By.xpath("//a[. = 'SANAL POSLAR']");
    driver.findElement(by).click();

    // 18. Click 'isbankPosGuncelle'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("a[href$$='AddEdit/4'] img");
    driver.findElement(by).click();

    // 19. Select the '10' option in 'SubVendorPosTypeId'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#SubVendorPosTypeId");
    (new Select(driver.findElement(by))).selectByValue("10");

    // 20. Is 'Tamam1' is clickable?
    GeneratedUtils.sleep(500);
    by = By.xpath("//button[. = 'Tamam']");
    (new WebDriverWait(driver, 15)).until(ExpectedConditions.elementToBeClickable(by));

    // 21. Run Click Until Gone
    GeneratedUtils.sleep(500);
    clickUntilGone = NetahsilatUtills.clickUntilGone(30);
    by = By.xpath("//button[. = 'Tamam']");
    clickUntilGone = (NetahsilatUtills.ClickUntilGone)((ReportingDriver)driver).addons().execute(clickUntilGone, by, -1);

    // 22. Move mouse to 'moveToIslemler'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("li[class='tag']");
    (new Actions(driver)).moveToElement(driver.findElement(by)).perform();

    // 23. Click 'İŞLEMLER1'
    GeneratedUtils.sleep(500);
    by = By.xpath("//a[. = 'İŞLEMLER']");
    driver.findElement(by).click();

    // 24. Click 'İŞLEM LİSTESİ'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("a[title='İŞLEM LİSTESİ']");
    driver.findElement(by).click();

    // 25. Type '{{odemeReferansNumarasiREgex}}' in 'ReferenceNumber'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#ReferenceNumber");
    driver.findElement(by).sendKeys(odemeReferansNumarasiREgex);

    // 26. Click 'btnListele'
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(35000, TimeUnit.MILLISECONDS);
    GeneratedUtils.sleep(500);
    by = By.xpath("//button[. = 'Listele']");
    driver.findElement(by).click();
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 27. Is 'Refresh' visible?
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(35000, TimeUnit.MILLISECONDS);
    GeneratedUtils.sleep(500);
    by = By.cssSelector("a[class='t-icon t-refresh']");
    driver.findElement(by).isDisplayed();
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 28. Click 'btnIptalOnGrid'
    GeneratedUtils.sleep(500);
    by = By.xpath("//td/a[1]/img");
    driver.findElement(by).click();

    // 29. Click 'buttonKaydiTamamla'
    GeneratedUtils.sleep(500);
    by = By.xpath("//button[. = 'Tamam']");
    driver.findElement(by).click();

    // 30. Is alert displayed?
    GeneratedUtils.sleep(500);
    waitForAlertPresence = WebExtensions.waitForAlertPresence(60000);
    waitForAlertPresence = (WebExtensions.WaitForAlertPresence)((ReportingDriver)driver).addons().execute(waitForAlertPresence);

    // 31. Get alert text
    GeneratedUtils.sleep(500);
    getAlertText = WebExtensions.getGetAlertText();
    getAlertText = (WebExtensions.GetAlertText)((ReportingDriver)driver).addons().execute(getAlertText);

    // 32. Accept alert
    GeneratedUtils.sleep(500);
    acceptAlert = WebExtensions.acceptAlert(0);
    acceptAlert = (WebExtensions.AcceptAlert)((ReportingDriver)driver).addons().execute(acceptAlert);

    // 33. Click 'btnListele'
    GeneratedUtils.sleep(500);
    by = By.xpath("//button[. = 'Listele']");
    driver.findElement(by).click();

    // 34. Is 'Refresh' visible?
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(35000, TimeUnit.MILLISECONDS);
    GeneratedUtils.sleep(500);
    by = By.cssSelector("a[class='t-icon t-refresh']");
    driver.findElement(by).isDisplayed();
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 35. Click 'islemDetaylariOnGrid'
    GeneratedUtils.sleep(500);
    by = By.xpath("//tr/td/a[1]/img");
    driver.findElement(by).click();

    // 36. Is 'Satış İptal' visible?
    GeneratedUtils.sleep(500);
    by = By.xpath("//span[. = 'Satış İptal']");
    driver.findElement(by).isDisplayed();

    // 37. Is 'Başarılı' visible?
    GeneratedUtils.sleep(500);
    by = By.xpath("//div[. = 'Başarılı']");
    driver.findElement(by).isDisplayed();

    // 38. Click 'Kapat1'
    GeneratedUtils.sleep(500);
    by = By.xpath("//button[. = 'Kapat']");
    driver.findElement(by).click();

    // 39. Move mouse to 'moveToSiteYönetimi'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("li[class='config']");
    (new Actions(driver)).moveToElement(driver.findElement(by)).perform();

    // 40. Click 'btnSiteYönetimi'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("a[title='SİTE YÖNETİMİ']");
    driver.findElement(by).click();

    // 41. Move mouse to 'dropDownPosAyarlari'
    GeneratedUtils.sleep(500);
    by = By.xpath("//li[7]/ul/li[3]//img");
    (new Actions(driver)).moveToElement(driver.findElement(by)).perform();

    // 42. Click 'SANAL POSLAR'
    GeneratedUtils.sleep(500);
    by = By.xpath("//a[. = 'SANAL POSLAR']");
    driver.findElement(by).click();

    // 43. Click 'isbankPosGuncelle'
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(35000, TimeUnit.MILLISECONDS);
    GeneratedUtils.sleep(500);
    by = By.cssSelector("a[href$$='AddEdit/4'] img");
    driver.findElement(by).click();
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 44. Select the '0' option in 'SubVendorPosTypeId'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#SubVendorPosTypeId");
    (new Select(driver.findElement(by))).selectByValue("0");

    // 45. Run Click Until Gone
    GeneratedUtils.sleep(500);
    clickUntilGone = NetahsilatUtills.clickUntilGone(30);
    by = By.xpath("//button[. = 'Tamam']");
    clickUntilGone = (NetahsilatUtills.ClickUntilGone)((ReportingDriver)driver).addons().execute(clickUntilGone, by, -1);

  }

  @Override
  public ReportingDriver getDriver() {
    return (ReportingDriver) driver;
  }

  @AfterAll
  static void tearDown() {
    if (driver != null) {
      driver.quit();
    }
  }

  private static Stream provideParameters() throws Exception {
    return Stream.of(Arguments.of("https://otomasyon.netahsilatdemo.com/Account/LogOff","otomasyon@test.com","Kd!cyhz4","",""));
  }
}
