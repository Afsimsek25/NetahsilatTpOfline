package netahsilat;

import io.testproject.addon.*;
import io.testproject.sdk.drivers.ReportingDriver;
import io.testproject.sdk.drivers.web.RemoteWebDriver;
import io.testproject.sdk.interfaces.junit5.ExceptionsReporter;
import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;

import java.util.concurrent.TimeUnit;
import java.util.stream.Stream;

/**
 * This class was automatically generated by TestProject
 * Project: Quality Museum Project
 * Test: C1479 Bayi yerine normal emailorder da içerde mevcut olan email i kullanıcı olarak ekleyerek denenmeli
 * Generated by: Ahmet Furkan SIMSEK (furkan.simsek@qualitymuseum.com)
 * Generated on Fri Oct 07 07:51:01 GMT 2022.
 */
@DisplayName("C1479 Bayi yerine normal emailorder da içerde mevcut olan email i kullanıcı olarak ekleyerek denenmeli")
public class C1479 implements ExceptionsReporter {
  public static WebDriver driver;

  @BeforeAll
  static void setup() throws Exception {
    driver = new RemoteWebDriver("wThDxIHw4zNaCydjAhcfe81WrQPYlMBFI7FPwUwV8M41", new ChromeOptions(), "Ahmet Furkan SIMSEK");
  }

  /**
   * In order to upload the test to TestProject need to un-comment @ArgumentsSource and set in comment the @MethodSource
   * @org.junit.jupiter.params.provider.ArgumentsSource(io.testproject.sdk.interfaces.parameterization.TestProjectParameterizer.class) */
  @DisplayName("C1479 Bayi yerine normal emailorder da içerde mevcut olan email i kullanıcı olarak ekleyerek denenmeli")
  @ParameterizedTest
  @MethodSource("provideParameters")
  void execute(String ApplicationURL, String userName, String password, String mail, String url,
      String referansNo) throws Exception {
    // set timeout for driver actions (similar to step timeout)
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);
    By by;
    boolean booleanResult;
    MethodParametrikdemesadeceKartTypeTextWithDelayIsimsiz methodparametrikdemesadecekarttypetextwithdelayisimsiz;
    MethodLogoutlogin methodlogoutlogin;
    String string;
    WebExtensions.SelectOptionbyVisibleText selectOptionbyVisibleText;
    ImapMailOperations.ReadSpecificsMail readSpecificsMail;
    StringUtils.GetStringSubstring getStringSubstring;
    JSActions.ClickAction clickAction;
    VisibleElementsOperations.ClickIfVisibleWeb clickIfVisibleWeb;

    // 1. Run Method Logout&Login
    GeneratedUtils.sleep(500);
    methodlogoutlogin = new MethodLogoutlogin();
    methodlogoutlogin.ApplicationURL = ApplicationURL;
    methodlogoutlogin.userName = ProjectParameters.genelEmail;
    methodlogoutlogin.password = ProjectParameters.genelPassword;
    methodlogoutlogin.execute(driver);

    // 2. Move mouse to 'moveUstUyeYonetimi'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("li[class='content']");
    (new Actions(driver)).moveToElement(driver.findElement(by)).perform();

    // 3. Click 'moveUstUyeYonetimi'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("li[class='content']");
    driver.findElement(by).click();

    // 4. Click 'ustUyeYonetimi'
    GeneratedUtils.sleep(500);
    by = By.xpath("//li[4]/a[. = 'ÜYE YÖNETİMİ']");
    driver.findElement(by).click();

    // 5. Click 'altUyeYonetimi'
    GeneratedUtils.sleep(500);
    by = By.xpath("//li[1]/a[. = 'ÜYE YÖNETİMİ']");
    driver.findElement(by).click();

    // 6. Type 'netahsilatotomasyon@yandex.com' in 'SearchVendorNameVN'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#SearchVendorName");
    driver.findElement(by).sendKeys("netahsilatotomasyon@yandex.com");

    // 7. Click 'resultListelenen'
    GeneratedUtils.sleep(500);
    by = By.xpath("//body/ul//div");
    driver.findElement(by).click();

    // 8. Click 'btnListele'
    GeneratedUtils.sleep(500);
    by = By.xpath("//button[. = 'Listele']");
    driver.findElement(by).click();

    // 9. Is '1. Satır netahsilatotomasyon@yandex.com' visible?
    GeneratedUtils.sleep(500);
    by = By.xpath("//tr[1]/td[text()='netahsilatotomasyon@yandex.com'] ");
    driver.findElement(by).isDisplayed();

    // 10. Click 'E-mail order gonder'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("img[src*='mail_replay.png']");
    driver.findElement(by).click();

    // 11. Clear 'PureAmount' contents
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#PureAmount");
    driver.findElement(by).clear();

    // 12. Type '75,00' in 'PureAmount'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#PureAmount");
    driver.findElement(by).sendKeys("75,00");

    // 13. Select options in 'PaymentSetId' with text '[NONE]'
    GeneratedUtils.sleep(500);
    selectOptionbyVisibleText = WebExtensions.selectOptionbyVisibleText("Varsayılan ödeme seti");
    by = By.cssSelector("#PaymentSetId");
    selectOptionbyVisibleText = (WebExtensions.SelectOptionbyVisibleText)((ReportingDriver)driver).addons().execute(selectOptionbyVisibleText, by, -1);

    // 14. Click 'Mail Order Devam Et'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("input[value='Devam Et']");
    driver.findElement(by).click();

    // 15. Click 'netahsilatotomasyon@yandex.com	Mail Order Kişi Seçimi' if it's visible
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(2000, TimeUnit.MILLISECONDS);
    GeneratedUtils.sleep(500);
    clickIfVisibleWeb = VisibleElementsOperations.clickIfVisibleWeb("0");
    by = By.xpath("//td[. = 'netahsilatotomasyon@yandex.com']/../td/input");
    clickIfVisibleWeb = (VisibleElementsOperations.ClickIfVisibleWeb)((ReportingDriver)driver).addons().execute(clickIfVisibleWeb, by, -1);
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 16. Type 'C1479' in 'Description'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#Description");
    driver.findElement(by).sendKeys("C1479");

    // 17. Click '//input[@value='Gönder']'
    GeneratedUtils.sleep(500);
    by = By.xpath("//input[@value='Gönder']");
    driver.findElement(by).click();

    // 18. Is 'Ödeme linki gönderilmiştir1' visible?
    GeneratedUtils.sleep(500);
    by = By.xpath("//p[. = 'Ödeme linki gönderilmiştir']");
    driver.findElement(by).isDisplayed();

    // 19. Output searched string in specific mail
    GeneratedUtils.sleep(500);
    readSpecificsMail = ImapMailOperations.readSpecificsMail(ProjectParameters.odemeEmail,ProjectParameters.yandexMailKey,"C1479","C:\\TestProject\\mail\\C1479.html");
    readSpecificsMail = (ImapMailOperations.ReadSpecificsMail)((ReportingDriver)driver).addons().execute(readSpecificsMail);

    // 20. Navigate to 'file:///C:/TestProject/mail/C1479.html'
    GeneratedUtils.sleep(500);
    driver.navigate().to("file:///C:/TestProject/mail/C1479.html");

    // 21. Click '[id="odemelinki"]'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#odemelinki");
    driver.findElement(by).click();

    // 22. Run Method Parametrik Ödeme (Sadece Kart - Type text with delay)  - İsimsiz
    GeneratedUtils.sleep(500);
    methodparametrikdemesadecekarttypetextwithdelayisimsiz = new MethodParametrikdemesadeceKartTypeTextWithDelayIsimsiz();
    methodparametrikdemesadecekarttypetextwithdelayisimsiz.kartNo = ProjectParameters.genelKartNo;
    methodparametrikdemesadecekarttypetextwithdelayisimsiz.CVV = ProjectParameters.genelKartCVV;
    methodparametrikdemesadecekarttypetextwithdelayisimsiz.ayYil = ProjectParameters.genelKartAyYil;
    methodparametrikdemesadecekarttypetextwithdelayisimsiz.adSoyad = "C1479";
    methodparametrikdemesadecekarttypetextwithdelayisimsiz.execute(driver);

    // 23. Click 'genelOdemeTaksitSecenegi'
    GeneratedUtils.sleep(500);
    clickAction = JSActions.getClickAction();
    by = By.xpath("(//td[contains(@class,'commRate-20')])[1]");
    clickAction = (JSActions.ClickAction)((ReportingDriver)driver).addons().execute(clickAction, by, -1);

    // 24. Click 'Ödeme Talimatı Oluştur Button'
    GeneratedUtils.sleep(500);
    by = By.xpath("//input[@type='button' and @value='ÖDEME TALİMATI OLUŞTUR']");
    driver.findElement(by).click();

    // 25. Click 'btnOdemeyiTamamla'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#btnNormalPayment");
    driver.findElement(by).click();

    // 26. Is 'Payment Efekti' visible?
    /* Step is disabled
    GeneratedUtils.sleep(500);
    by = By.cssSelector("div[class='spinner']");
    driver.findElement(by).isDisplayed();
    */
    // 27. Get text from 'txtReferansNumarasi'
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(60000, TimeUnit.MILLISECONDS);
    GeneratedUtils.sleep(500);
    by = By.xpath("(//p[@class='payment-result-text'])[1]");
    string = driver.findElement(by).getAttribute("value");
    referansNo = String.valueOf(string);
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 28. Get substring of '{{referansNo}}' from '42' to '[NONE]'
    GeneratedUtils.sleep(500);
    getStringSubstring = StringUtils.getStringSubstring(42,0,referansNo);
    getStringSubstring = (StringUtils.GetStringSubstring)((ReportingDriver)driver).addons().execute(getStringSubstring);
    referansNo = String.valueOf(getStringSubstring.result);

    // 29. Run Method Logout&Login
    GeneratedUtils.sleep(500);
    methodlogoutlogin = new MethodLogoutlogin();
    methodlogoutlogin.ApplicationURL = ApplicationURL;
    methodlogoutlogin.userName = ProjectParameters.genelEmail;
    methodlogoutlogin.password = ProjectParameters.genelPassword;
    methodlogoutlogin.execute(driver);

    // 30. Click 'İŞLEM LİSTESİ1'
    GeneratedUtils.sleep(500);
    clickAction = JSActions.getClickAction();
    by = By.xpath("//a[. = 'İŞLEM LİSTESİ']");
    clickAction = (JSActions.ClickAction)((ReportingDriver)driver).addons().execute(clickAction, by, -1);

    // 31. Type '{{referansNo}}' in 'ReferenceNumber'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#ReferenceNumber");
    driver.findElement(by).sendKeys(referansNo);

    // 32. Is 'Refresh noLoading' visible?
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(35000, TimeUnit.MILLISECONDS);
    GeneratedUtils.sleep(500);
    by = By.xpath("//a[@class='t-icon t-refresh']");
    driver.findElement(by).isDisplayed();
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 33. Click 'btnListele'
    GeneratedUtils.sleep(500);
    by = By.xpath("//button[. = 'Listele']");
    driver.findElement(by).click();

    // 34. Is 'Refresh Loading' visible?
    GeneratedUtils.sleep(500);
    by = By.xpath("//a[@class='t-icon t-refresh t-loading']");
    driver.findElement(by).isDisplayed();

    // 35. Is 'Refresh noLoading' visible?
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(35000, TimeUnit.MILLISECONDS);
    GeneratedUtils.sleep(500);
    by = By.xpath("//a[@class='t-icon t-refresh']");
    driver.findElement(by).isDisplayed();
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 36. Is 'ilkSatır ReferansNo' visible?
    GeneratedUtils.sleep(500);
    by = By.xpath(String.format("//td[. = '%s']",referansNo));
    driver.findElement(by).isDisplayed();

    // 37. Is 'Bireysel türk [1]' visible?
    GeneratedUtils.sleep(500);
    by = By.xpath("//tr[1]//td[. = 'Bireysel türk']");
    driver.findElement(by).isDisplayed();

    // 38. Is 'OtoTestERP555' visible?
    GeneratedUtils.sleep(500);
    by = By.xpath("//tr[1]//td[. = 'OtoTestERP555']");
    driver.findElement(by).isDisplayed();

    // 39. Is 'OtoTest5551' visible?
    GeneratedUtils.sleep(500);
    by = By.xpath("//td[. = 'OtoTest555']");
    driver.findElement(by).isDisplayed();

  }

  @Override
  public ReportingDriver getDriver() {
    return (ReportingDriver) driver;
  }

  @AfterAll
  static void tearDown() {
    if (driver != null) {
      driver.quit();
    }
  }

  private static Stream provideParameters() throws Exception {
    return Stream.of(Arguments.of("https://otomasyon.netahsilatdemo.com/Account/LogOff","otomasyon@test.com","Kd!cyhz4","","",""));
  }
}
