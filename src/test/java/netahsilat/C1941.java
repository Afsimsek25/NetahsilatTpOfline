package netahsilat;

import io.testproject.addon.GridOperations;
import io.testproject.addon.WebExtensions;
import io.testproject.sdk.drivers.ReportingDriver;
import io.testproject.sdk.drivers.web.RemoteWebDriver;
import io.testproject.sdk.interfaces.junit5.ExceptionsReporter;
import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeOptions;

import java.util.concurrent.TimeUnit;
import java.util.stream.Stream;

/**
 * This class was automatically generated by TestProject
 * Project: Quality Museum Project
 * Test: C1941 Rol Grubu olamayan Kullanıcılar için Rol Grubu Seçiniz yazısının gelmesi
 * Generated by: Ahmet Furkan SIMSEK (furkan.simsek@qualitymuseum.com)
 * Generated on Mon Oct 10 07:13:22 GMT 2022.
 */
@DisplayName("C1941 Rol Grubu olamayan Kullanıcılar için Rol Grubu Seçiniz yazısının gelmesi")
public class C1941 implements ExceptionsReporter {
  public static WebDriver driver;

  @BeforeAll
  static void setup() throws Exception {
    driver = new RemoteWebDriver("wThDxIHw4zNaCydjAhcfe81WrQPYlMBFI7FPwUwV8M41", new ChromeOptions(), "Ahmet Furkan SIMSEK");
  }

  /**
   * In order to upload the test to TestProject need to un-comment @ArgumentsSource and set in comment the @MethodSource
   * @org.junit.jupiter.params.provider.ArgumentsSource(io.testproject.sdk.interfaces.parameterization.TestProjectParameterizer.class) */
  @DisplayName("C1941 Rol Grubu olamayan Kullanıcılar için Rol Grubu Seçiniz yazısının gelmesi")
  @ParameterizedTest
  @MethodSource("provideParameters")
  void execute(String ApplicationURL, String userName, String password, String currentDateTime,
      String RolName) throws Exception {
    // set timeout for driver actions (similar to step timeout)
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);
    By by;
    boolean booleanResult;
    MethodLogin methodlogin;
    WebExtensions.SelectOptionbyVisibleText selectOptionbyVisibleText;
    GridOperations.getAllDataWithList getAllDataWithList;

    // 1. Navigate to '{{Otomasyon3Logout}}'
    GeneratedUtils.sleep(500);
    driver.navigate().to(ProjectParameters.Otomasyon3Logout);

    // 2. Run Method Login
    //    otomasyon@test.com
    GeneratedUtils.sleep(500);
    methodlogin = new MethodLogin();
    methodlogin.ApplicationURL = ApplicationURL;
    methodlogin.userName = "otomasyon@test.com";
    methodlogin.password = ProjectParameters.genelPassword;
    methodlogin.execute(driver);
    currentDateTime = String.valueOf(methodlogin.currentDateTime);

    // 3. Click 'moveToKullaniciYönetimi'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("li[class='user']");
    driver.findElement(by).click();

    // 4. Click 'KULLANICI YÖNETİMİ1'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("a[title='KULLANICI YÖNETİMİ']");
    driver.findElement(by).click();

    // 5. Click 'KULLANICI LİSTESİ'
    GeneratedUtils.sleep(500);
    by = By.xpath("//a[. = 'KULLANICI LİSTESİ']");
    driver.findElement(by).click();

    // 6. Type 'admin@netahsilat.com' in 'Email'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#Email");
    driver.findElement(by).sendKeys("admin@netahsilat.com");

    // 7. Click 'Listele'
    GeneratedUtils.sleep(500);
    by = By.xpath("//button[. = 'Listele']");
    driver.findElement(by).click();

    // 8. Click 'Rol Ekle/Çıkar'
    GeneratedUtils.sleep(500);
    by = By.xpath("//img[contains(@src,'user-silhouette-question.png')]");
    driver.findElement(by).click();

    // 9. Fetch All Data as List
    GeneratedUtils.sleep(500);
    getAllDataWithList = new GridOperations.getAllDataWithList();
    by = By.cssSelector("[name='RoleGroupId']");
    getAllDataWithList = (GridOperations.getAllDataWithList)((ReportingDriver)driver).addons().execute(getAllDataWithList, by, -1);

    // 10. Select options in 'RoleGroupId2' with text '[NONE]'
    //    "Rol Gurubu Seçiniz" seçiliyor
    GeneratedUtils.sleep(500);
    selectOptionbyVisibleText = WebExtensions.selectOptionbyVisibleText("Rol Gurubu Seçiniz.");
    by = By.cssSelector("[name='RoleGroupId']");
    selectOptionbyVisibleText = (WebExtensions.SelectOptionbyVisibleText)((ReportingDriver)driver).addons().execute(selectOptionbyVisibleText, by, -1);

    // 11. Click 'Tamam'
    GeneratedUtils.sleep(500);
    by = By.xpath("//button[. = 'Tamam']");
    driver.findElement(by).click();

    // 12. Is 'Rol Gurubu Seçiniz.' visible?
    GeneratedUtils.sleep(500);
    by = By.xpath("//li[. = 'Rol Gurubu Seçiniz.']");
    driver.findElement(by).isDisplayed();

  }

  @Override
  public ReportingDriver getDriver() {
    return (ReportingDriver) driver;
  }

  @AfterAll
  static void tearDown() {
    if (driver != null) {
      driver.quit();
    }
  }

  private static Stream provideParameters() throws Exception {
    return Stream.of(Arguments.of("https://otomasyon3.netahsilatdemo.com/","otomasyon@test.com","Kd!cyhz4","",""));
  }
}
