package netahsilat;

import io.testproject.addon.JSActions;
import io.testproject.addon.NetahsilatUtills;
import io.testproject.addon.WebExtensions;
import io.testproject.sdk.drivers.ReportingDriver;
import io.testproject.sdk.drivers.web.RemoteWebDriver;
import io.testproject.sdk.interfaces.junit5.ExceptionsReporter;
import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;

import java.util.concurrent.TimeUnit;
import java.util.stream.Stream;

/**
 * This class was automatically generated by TestProject
 * Project: Quality Museum Project
 * Test: C891 Vade Tanımlama & Güncelleme
 * Generated by: Ahmet Furkan SIMSEK (furkan.simsek@qualitymuseum.com)
 * Generated on Fri Oct 07 11:29:09 GMT 2022.
 */
@DisplayName("C891 Vade Tanımlama & Güncelleme")
public class C891 implements ExceptionsReporter {
  public static WebDriver driver;

  @BeforeAll
  static void setup() throws Exception {
    driver = new RemoteWebDriver("wThDxIHw4zNaCydjAhcfe81WrQPYlMBFI7FPwUwV8M41", new ChromeOptions(), "Ahmet Furkan SIMSEK");
  }

  /**
   * In order to upload the test to TestProject need to un-comment @ArgumentsSource and set in comment the @MethodSource
   * @org.junit.jupiter.params.provider.ArgumentsSource(io.testproject.sdk.interfaces.parameterization.TestProjectParameterizer.class) */
  @DisplayName("C891 Vade Tanımlama & Güncelleme")
  @ParameterizedTest
  @MethodSource("provideParameters")
  void execute(String ApplicationURL, String userName, String password) throws Exception {
    // set timeout for driver actions (similar to step timeout)
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);
    By by;
    boolean booleanResult;
    MethodLogoutlogin methodlogoutlogin;
    WebExtensions.GetNumbersOnly getNumbersOnly;
    JSActions.ClickAction clickAction;
    NetahsilatUtills.ClickUntilGone clickUntilGone;

    // 1. Run Method Logout&Login
    GeneratedUtils.sleep(500);
    methodlogoutlogin = new MethodLogoutlogin();
    methodlogoutlogin.ApplicationURL = ApplicationURL;
    methodlogoutlogin.userName = ProjectParameters.genelEmail;
    methodlogoutlogin.password = ProjectParameters.genelPassword;
    methodlogoutlogin.execute(driver);

    // 2. Move mouse to 'moveToSiteYönetimi'
    by = By.cssSelector("li[class='config']");
    (new Actions(driver)).moveToElement(driver.findElement(by)).perform();

    // 3. Click 'moveToSiteYönetimi'
    by = By.cssSelector("li[class='config']");
    driver.findElement(by).click();

    // 4. Move mouse to 'ddPosAyarlari'
    by = By.xpath("//a[@title='POS AYARLARI']/..//img");
    (new Actions(driver)).moveToElement(driver.findElement(by)).perform();

    // 5. Click 'VADELİ FATURA'
    clickAction = JSActions.getClickAction();
    by = By.xpath("//a[. = 'VADELİ FATURA']");
    clickAction = (JSActions.ClickAction)((ReportingDriver)driver).addons().execute(clickAction, by, -1);

    // 6. Is 'Vadeli Fatura2' visible?
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(25000, TimeUnit.MILLISECONDS);
    by = By.xpath("//h1[. = 'Vadeli Fatura']");
    driver.findElement(by).isDisplayed();
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 7. Click 'İlgili Alanlar Otomasyon (Silme) C2107'
    by = By.xpath("//td[text()='Otomasyon (Silme) C2107']/..//td[1]//a[@title='İlgili alanlar']");
    driver.findElement(by).click();

    // 8. Click 'Vade Tanımla'
    by = By.cssSelector("#a_title_sub_grid");
    driver.findElement(by).click();

    // 9. Type '1' in 'StartDate'
    by = By.cssSelector("#StartDate");
    driver.findElement(by).sendKeys("1");

    // 10. Type '2' in 'EndDate'
    by = By.cssSelector("#EndDate");
    driver.findElement(by).sendKeys("2");

    // 11. Type '15.09.2023' in 'ValidityStartDate'
    by = By.cssSelector("#ValidityStartDate");
    driver.findElement(by).sendKeys("15.09.2023");

    // 12. Type '30.09.2023' in 'ValidityEndDate'
    by = By.cssSelector("#ValidityEndDate");
    driver.findElement(by).sendKeys("30.09.2023");

    // 13. Run Click Until Gone
    clickUntilGone = NetahsilatUtills.clickUntilGone(30);
    by = By.xpath("//button[. = 'Tamam']");
    clickUntilGone = (NetahsilatUtills.ClickUntilGone)((ReportingDriver)driver).addons().execute(clickUntilGone, by, -1);

    // 14. Does '12' contain '1'?
    by = By.xpath("//td[3][. = '1']");
    Assertions.assertTrue(driver.findElement(by).getText().contains("1"));

    // 15. Does '24' contain '2'?
    by = By.xpath("//td[4][. = '2']");
    Assertions.assertTrue(driver.findElement(by).getText().contains("2"));

    // 16. Return only numbers from the text
    getNumbersOnly = WebExtensions.getGetNumbersOnly();
    by = By.xpath("(//div[@id='TermInvoiceDefinitionGrid']//tbody//tr//td)[5]");
    getNumbersOnly = (WebExtensions.GetNumbersOnly)((ReportingDriver)driver).addons().execute(getNumbersOnly, by, -1);

    // 17. Return only numbers from the text
    getNumbersOnly = WebExtensions.getGetNumbersOnly();
    by = By.xpath("(//div[@id='TermInvoiceDefinitionGrid']//tbody//tr//td)[6]");
    getNumbersOnly = (WebExtensions.GetNumbersOnly)((ReportingDriver)driver).addons().execute(getNumbersOnly, by, -1);

    // 18. Click 'Edit Otomasyon (Silme) C2107 Vadeli Tanımları'
    by = By.xpath("//h1[text()='Otomasyon (Silme) C2107 Vadeli Tanımları']/..//img[contains(@src,'edit.png')]");
    driver.findElement(by).click();

    // 19. Type '1' in 'StartDate'
    by = By.cssSelector("#StartDate");
    driver.findElement(by).sendKeys("1");

    // 20. Type '1' in 'EndDate'
    by = By.cssSelector("#EndDate");
    driver.findElement(by).sendKeys("1");

    // 21. Clear 'ValidityStartDate' contents
    by = By.cssSelector("#ValidityStartDate");
    driver.findElement(by).clear();

    // 22. Type '1.09.2021' in 'ValidityStartDate'
    by = By.cssSelector("#ValidityStartDate");
    driver.findElement(by).sendKeys("1.09.2021");

    // 23. Clear 'ValidityEndDate' contents
    by = By.cssSelector("#ValidityEndDate");
    driver.findElement(by).clear();

    // 24. Type '1.09.2030' in 'ValidityEndDate'
    by = By.cssSelector("#ValidityEndDate");
    driver.findElement(by).sendKeys("1.09.2030");

    // 25. Run Click Until Gone
    clickUntilGone = NetahsilatUtills.clickUntilGone(30);
    by = By.xpath("//button[. = 'Tamam']");
    clickUntilGone = (NetahsilatUtills.ClickUntilGone)((ReportingDriver)driver).addons().execute(clickUntilGone, by, -1);

    // 26. Does '112' contain '11'?
    by = By.xpath("//div/div/div//td[. = '11']");
    Assertions.assertTrue(driver.findElement(by).getText().contains("11"));

    // 27. Does '211' contain '21'?
    by = By.xpath("//td[4][. = '21']");
    Assertions.assertTrue(driver.findElement(by).getText().contains("21"));

    // 28. Return only numbers from the text
    getNumbersOnly = WebExtensions.getGetNumbersOnly();
    by = By.xpath("(//div[@id='TermInvoiceDefinitionGrid']//tbody//tr//td)[5]");
    getNumbersOnly = (WebExtensions.GetNumbersOnly)((ReportingDriver)driver).addons().execute(getNumbersOnly, by, -1);

    // 29. Return only numbers from the text
    getNumbersOnly = WebExtensions.getGetNumbersOnly();
    by = By.xpath("(//div[@id='TermInvoiceDefinitionGrid']//tbody//tr//td)[6]");
    getNumbersOnly = (WebExtensions.GetNumbersOnly)((ReportingDriver)driver).addons().execute(getNumbersOnly, by, -1);

    // 30. Click 'İlgili Alanlar Otomasyon (Silme) C2107 Vadeli Tanımları'
    by = By.xpath("//h1[text()='Otomasyon (Silme) C2107 Vadeli Tanımları']/..//img[contains(@src,'detail.png')]");
    driver.findElement(by).click();

    // 31. Click 'Vade Farkı'
    by = By.cssSelector("#a_title_sub_grid_diffrence");
    driver.findElement(by).click();

    // 32. Clear 'Installment3' contents
    by = By.cssSelector("#Installment");
    driver.findElement(by).clear();

    // 33. Type '5' in 'Installment3'
    by = By.cssSelector("#Installment");
    driver.findElement(by).sendKeys("5");

    // 34. Click 'InvoiceDiffrenceType'
    by = By.cssSelector("#forSpecialDefinition");
    driver.findElement(by).click();

    // 35. Type '100' in 'CommRateOut'
    by = By.cssSelector("#CommRateOut");
    driver.findElement(by).sendKeys("100");

    // 36. Run Click Until Gone
    clickUntilGone = NetahsilatUtills.clickUntilGone(30);
    by = By.xpath("//button[. = 'Tamam']");
    clickUntilGone = (NetahsilatUtills.ClickUntilGone)((ReportingDriver)driver).addons().execute(clickUntilGone, by, -1);

    // 37. Does '100.00' contain '100.00'?
    by = By.xpath("//td[. = '100.00']");
    Assertions.assertTrue(driver.findElement(by).getText().contains("100.00"));

    // 38. Does '51' contain '5'?
    by = By.xpath("//td[2][. = '5']");
    Assertions.assertTrue(driver.findElement(by).getText().contains("5"));

  }

  @Override
  public ReportingDriver getDriver() {
    return (ReportingDriver) driver;
  }

  @AfterAll
  static void tearDown() {
    if (driver != null) {
      driver.quit();
    }
  }

  private static Stream provideParameters() throws Exception {
    return Stream.of(Arguments.of("https://otomasyon.netahsilatdemo.com/Account/LogOff","otomasyon@test.com","Kd!cyhz4"));
  }
}
