package netahsilat;

import io.testproject.addon.ExcelOperations;
import io.testproject.addon.WebExtensions;
import io.testproject.sdk.drivers.ReportingDriver;
import io.testproject.sdk.drivers.web.RemoteWebDriver;
import io.testproject.sdk.interfaces.junit5.ExceptionsReporter;
import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import java.util.concurrent.TimeUnit;
import java.util.stream.Stream;

/**
 * This class was automatically generated by TestProject
 * Project: Quality Museum Project
 * Test: C1897 İşlem Detayları Listesi Sayfasında Çoklu Müşteri Temsilci Seçimi (NTH-14691)
 * Generated by: Ahmet Furkan SIMSEK (furkan.simsek@qualitymuseum.com)
 * Generated on Mon Oct 10 08:35:04 GMT 2022.
 */
@DisplayName("C1897 İşlem Detayları Listesi Sayfasında Çoklu Müşteri Temsilci Seçimi (NTH-14691)")
public class C1897 implements ExceptionsReporter {
  public static WebDriver driver;

  @BeforeAll
  static void setup() throws Exception {
    driver = new RemoteWebDriver("wThDxIHw4zNaCydjAhcfe81WrQPYlMBFI7FPwUwV8M41", new ChromeOptions(), "Ahmet Furkan SIMSEK");
  }

  /**
   * In order to upload the test to TestProject need to un-comment @ArgumentsSource and set in comment the @MethodSource
   * @org.junit.jupiter.params.provider.ArgumentsSource(io.testproject.sdk.interfaces.parameterization.TestProjectParameterizer.class) */
  @DisplayName("C1897 İşlem Detayları Listesi Sayfasında Çoklu Müşteri Temsilci Seçimi (NTH-14691)")
  @ParameterizedTest
  @MethodSource("provideParameters")
  void execute(String ApplicationURL, String password, String currentDateTime, String ElementCount,
      String MusteriTemsilcisiColum) throws Exception {
    // set timeout for driver actions (similar to step timeout)
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);
    By by;
    boolean booleanResult;
    MethodLogin methodlogin;
    WebExtensions.SelectOptionbyVisibleText selectOptionbyVisibleText;
    ExcelOperations.WaitForDownloadedFile waitForDownloadedFile;

    // 1. Navigate to '{{Otomasyon2Logout}}'
    //    Navigates the specified URL (Auto-generated)
    driver.navigate().to(ProjectParameters.Otomasyon2Logout);

    // 2. Run Method Login
    //    admin@netahsilat.com
    methodlogin = new MethodLogin();
    methodlogin.ApplicationURL = ApplicationURL;
    methodlogin.userName = "admin@netahsilat.com";
    methodlogin.password = ProjectParameters.genelPassword;
    methodlogin.execute(driver);
    currentDateTime = String.valueOf(methodlogin.currentDateTime);

    // 3. Move mouse to 'moveToIslemler'
    by = By.cssSelector("li[class='tag']");
    (new Actions(driver)).moveToElement(driver.findElement(by)).perform();

    // 4. Click 'İŞLEMLER'
    by = By.xpath("//a[. = 'İŞLEMLER']");
    driver.findElement(by).click();

    // 5. Click 'İŞLEM DETAYLARI LİSTESİ'
    by = By.xpath("//a[. = 'İŞLEM DETAYLARI LİSTESİ']");
    driver.findElement(by).click();

    // 6. Is 'Listele' is clickable?
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(35000, TimeUnit.MILLISECONDS);
    by = By.xpath("//button[. = 'Listele']");
    (new WebDriverWait(driver, 35)).until(ExpectedConditions.elementToBeClickable(by));
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 7. Clear 'StartDate' contents
    by = By.cssSelector("#StartDate");
    driver.findElement(by).clear();

    // 8. Select options in 'VendorTypeId' with text '[NONE]'
    selectOptionbyVisibleText = WebExtensions.selectOptionbyVisibleText("Müşteri");
    by = By.cssSelector("#VendorTypeId");
    selectOptionbyVisibleText = (WebExtensions.SelectOptionbyVisibleText)((ReportingDriver)driver).addons().execute(selectOptionbyVisibleText, by, -1);

    // 9. Type 'Site Müşteri Temsilcisi 1' in 'Müşteri temsilcisi select'
    by = By.xpath("//*[@class='select2-input select2-default']");
    driver.findElement(by).sendKeys("Site Müşteri Temsilcisi 1");

    // 10. Click 'Site Müşteri Temsilcisi 1'
    by = By.xpath("//li[1]//span[. = 'Site Müşteri Temsilcisi 1']");
    driver.findElement(by).click();

    // 11. Type 'Site Müşteri Temsilcisi 2' in 's2id_autogen1'
    by = By.cssSelector("#s2id_autogen1");
    driver.findElement(by).sendKeys("Site Müşteri Temsilcisi 2");

    // 12. Click 'Site Müşteri Temsilcisi 2'
    by = By.xpath("//li[1]//span[. = 'Site Müşteri Temsilcisi 2']");
    driver.findElement(by).click();

    // 13. Click 'Listele'
    by = By.xpath("//button[. = 'Listele']");
    driver.findElement(by).click();

    // 14. Is 'Listele' is clickable?
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(50000, TimeUnit.MILLISECONDS);
    by = By.xpath("//button[. = 'Listele']");
    (new WebDriverWait(driver, 50)).until(ExpectedConditions.elementToBeClickable(by));
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 15. Click 'Excel'e Aktar'
    //    case yarım devam edilecekmi belli değil
    /* Step is disabled
    by = By.cssSelector("#btnExport");
    driver.findElement(by).click();
    */
    // 16. Wait for the file 'C:\Users\dalog\Downloads\Islem-Detaylari.xls' to be downloaded up to '60'
    /* Step is disabled
    waitForDownloadedFile = ExcelOperations.waitForDownloadedFile("C:\\Users\\dalog\\Downloads\\Islem-Detaylari.xls","60");
    waitForDownloadedFile = (ExcelOperations.WaitForDownloadedFile)((ReportingDriver)driver).addons().execute(waitForDownloadedFile);
    */
  }

  @Override
  public ReportingDriver getDriver() {
    return (ReportingDriver) driver;
  }

  @AfterAll
  static void tearDown() {
    if (driver != null) {
      driver.quit();
    }
  }

  private static Stream provideParameters() throws Exception {
    return Stream.of(Arguments.of("https://otomasyon2.netahsilatdemo.com/","Kd!cyhz4","","",""));
  }
}
