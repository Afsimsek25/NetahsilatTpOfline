package netahsilat;

import io.testproject.addon.RandomDataGenerator;
import io.testproject.addon.WebExtensions;
import io.testproject.sdk.drivers.ReportingDriver;
import io.testproject.sdk.drivers.web.RemoteWebDriver;
import io.testproject.sdk.interfaces.junit5.ExceptionsReporter;
import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import java.util.concurrent.TimeUnit;
import java.util.stream.Stream;

/**
 * This class was automatically generated by TestProject
 * Project: Quality Museum Project
 * Test: C1884 Yerine ödeme akışlarında kayıtlı kartlar listelenerek kayıtlı kartı seçilip ödeme işlemi yapılabilmelidir (NTH -14401)
 * Generated by: Ahmet Furkan SIMSEK (furkan.simsek@qualitymuseum.com)
 * Generated on Mon Oct 10 07:18:01 GMT 2022.
 */
@DisplayName("C1884 Yerine ödeme akışlarında kayıtlı kartlar listelenerek kayıtlı kartı seçilip ödeme işlemi yapılabilmelidir (NTH -14401)")
public class C1884 implements ExceptionsReporter {
  public static WebDriver driver;

  @BeforeAll
  static void setup() throws Exception {
    driver = new RemoteWebDriver("wThDxIHw4zNaCydjAhcfe81WrQPYlMBFI7FPwUwV8M41", new ChromeOptions(), "Ahmet Furkan SIMSEK");
  }

  /**
   * In order to upload the test to TestProject need to un-comment @ArgumentsSource and set in comment the @MethodSource
   * @org.junit.jupiter.params.provider.ArgumentsSource(io.testproject.sdk.interfaces.parameterization.TestProjectParameterizer.class) */
  @DisplayName("C1884 Yerine ödeme akışlarında kayıtlı kartlar listelenerek kayıtlı kartı seçilip ödeme işlemi yapılabilmelidir (NTH -14401)")
  @ParameterizedTest
  @MethodSource("provideParameters")
  void execute(String ApplicationURL, String userName, String password, String currentDateTime,
      String RandomNumber, String tutar) throws Exception {
    // set timeout for driver actions (similar to step timeout)
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);
    By by;
    boolean booleanResult;
    MethodLogoutlogin methodlogoutlogin;
    String string;
    RandomDataGenerator.GenerateNumberInRange generateNumberInRange;
    WebExtensions.SetElementAttribute setElementAttribute;

    // 1. Run Method Logout&Login
    //    otomasyon@test.com
    methodlogoutlogin = new MethodLogoutlogin();
    methodlogoutlogin.ApplicationURL = ApplicationURL;
    methodlogoutlogin.userName = "otomasyon@test.com";
    methodlogoutlogin.password = ProjectParameters.genelPassword;
    methodlogoutlogin.execute(driver);
    currentDateTime = String.valueOf(methodlogoutlogin.currentDateTime);

    // 2. Move mouse to 'moveUstUyeYonetimi'
    by = By.cssSelector("li[class='content']");
    (new Actions(driver)).moveToElement(driver.findElement(by)).perform();

    // 3. Click 'ustUyeYonetimi'
    by = By.xpath("//li[4]/a[. = 'ÜYE YÖNETİMİ']");
    driver.findElement(by).click();

    // 4. Click 'altUyeYonetimi'
    by = By.xpath("//li[1]/a[. = 'ÜYE YÖNETİMİ']");
    driver.findElement(by).click();

    // 5. Is 'btnListele' is clickable?
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(35000, TimeUnit.MILLISECONDS);
    by = By.xpath("//button[. = 'Listele']");
    (new WebDriverWait(driver, 35)).until(ExpectedConditions.elementToBeClickable(by));
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 6. Type 'cardstoragebayi' in 'SearchVendorNameVN'
    by = By.cssSelector("#SearchVendorName");
    driver.findElement(by).sendKeys("cardstoragebayi");

    // 7. Click '//div[text()='Kart Kaydı(BAYİ), cardstoragebayi,,5034384563']'
    by = By.xpath("//div[text()='Kart Kaydı(BAYİ), cardstoragebayi,,5034384563']");
    driver.findElement(by).click();

    // 8. Click 'btnListele'
    by = By.xpath("//button[. = 'Listele']");
    driver.findElement(by).click();

    // 9. Is 'btnListele' is clickable?
    by = By.xpath("//button[. = 'Listele']");
    (new WebDriverWait(driver, 15)).until(ExpectedConditions.elementToBeClickable(by));

    // 10. Set 'target' attribute value on 'Ödeme1'
    setElementAttribute = WebExtensions.setElementAttribute("target","_top");
    by = By.xpath("//a[. = 'Ödeme']");
    setElementAttribute = (WebExtensions.SetElementAttribute)((ReportingDriver)driver).addons().execute(setElementAttribute, by, -1);

    // 11. Move mouse to 'Ödeme1'
    by = By.xpath("//a[. = 'Ödeme']");
    (new Actions(driver)).moveToElement(driver.findElement(by)).perform();

    // 12. Click 'Ödeme1'
    by = By.xpath("//a[. = 'Ödeme']");
    driver.findElement(by).click();

    // 13. Is 'Kart Kaydı(BAYİ)' visible?
    by = By.xpath("//strong[. = 'Kart Kaydı(BAYİ)']");
    driver.findElement(by).isDisplayed();

    // 14. Generate random number between '1' and '9999'
    generateNumberInRange = RandomDataGenerator.generateNumberInRange("1","9999");
    generateNumberInRange = (RandomDataGenerator.GenerateNumberInRange)((ReportingDriver)driver).addons().execute(generateNumberInRange);
    RandomNumber = String.valueOf(generateNumberInRange.result);

    // 15. Clear 'PureAmount' contents
    by = By.cssSelector("#PureAmount");
    driver.findElement(by).clear();

    // 16. Type '{{RandomNumber}}' in 'PureAmount'
    by = By.cssSelector("#PureAmount");
    driver.findElement(by).sendKeys(RandomNumber);

    // 17. Click 'Taksit Seçimi'
    by = By.cssSelector("#installment-selection-text");
    driver.findElement(by).click();

    // 18. Get text from 'PureAmount'
    by = By.cssSelector("#PureAmount");
    string = driver.findElement(by).getAttribute("value");
    tutar = String.valueOf(string);

    // 19. Is 'Kayıtlı kredi kartlarınızı görmek için Tıklayınız' visible?
    by = By.xpath("//div[contains(text(),'Kayıtlı kredi kartlarınız')]//a");
    driver.findElement(by).isDisplayed();

    // 20. Click 'Kayıtlı kredi kartlarınızı görmek için Tıklayınız'
    by = By.xpath("//div[contains(text(),'Kayıtlı kredi kartlarınız')]//a");
    driver.findElement(by).click();

    // 21. Move mouse to '//td[text()='540667******5403']'
    by = By.xpath("//td[text()='540667******5403']");
    (new Actions(driver)).moveToElement(driver.findElement(by)).perform();

    // 22. Click '//td[text()='540667******5403']'
    by = By.xpath("//td[text()='540667******5403']");
    driver.findElement(by).click();

    // 23. Type '000' in 'CVV'
    by = By.cssSelector("#CardCvv");
    driver.findElement(by).sendKeys("000");

    // 24. Is 'Akbank tek çekim posu tutara göre click' visible?
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(35000, TimeUnit.MILLISECONDS);
    by = By.xpath(String.format("(//td[contains(@class,'commRate-20')])[1]//div[contains(text(),'%s')][3]",tutar));
    driver.findElement(by).isDisplayed();
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 25. Move mouse to 'Akbank tek çekim posu tutara göre click'
    by = By.xpath(String.format("(//td[contains(@class,'commRate-20')])[1]//div[contains(text(),'%s')][3]",tutar));
    (new Actions(driver)).moveToElement(driver.findElement(by)).perform();

    // 26. Click 'Akbank Tek Çekim Posu'
    by = By.xpath("(//td[contains(@class,'commRate-20')])[1]");
    driver.findElement(by).click();

    // 27. Move mouse to 'Ödeme Talimatı Oluştur Button'
    by = By.xpath("//input[@type='button' and @value='ÖDEME TALİMATI OLUŞTUR']");
    (new Actions(driver)).moveToElement(driver.findElement(by)).perform();

    // 28. Click 'Ödeme Talimatı Oluştur Button'
    by = By.xpath("//input[@type='button' and @value='ÖDEME TALİMATI OLUŞTUR']");
    driver.findElement(by).click();

    // 29. Move mouse to 'ONLINE ÖDEME2'
    /* Step is disabled
    by = By.cssSelector("#payment-link-button");
    (new Actions(driver)).moveToElement(driver.findElement(by)).perform();
    */
    // 30. Is 'btnNormalPayment' present?
    by = By.cssSelector("#btnNormalPayment");
    driver.findElement(by);

    // 31. Move mouse to 'btnNormalPayment'
    by = By.cssSelector("#btnNormalPayment");
    (new Actions(driver)).moveToElement(driver.findElement(by)).perform();

    // 32. Click 'btnNormalPayment'
    by = By.cssSelector("#btnNormalPayment");
    driver.findElement(by).click();

    // 33. Is 'Payment Efekti' visible?
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(2000, TimeUnit.MILLISECONDS);
    by = By.cssSelector("div[class='spinner']");
    driver.findElement(by).isDisplayed();
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 34. Is 'txtReferansNumarasi' visible?
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(35000, TimeUnit.MILLISECONDS);
    by = By.xpath("(//p[@class='payment-result-text'])[1]");
    driver.findElement(by).isDisplayed();
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

  }

  @Override
  public ReportingDriver getDriver() {
    return (ReportingDriver) driver;
  }

  @AfterAll
  static void tearDown() {
    if (driver != null) {
      driver.quit();
    }
  }

  private static Stream provideParameters() throws Exception {
    return Stream.of(Arguments.of("https://otomasyon.netahsilatdemo.com/Account/LogOff","otomasyon@test.com","Kd!cyhz4","","",""));
  }
}
