package netahsilat;

import io.testproject.addon.StringUtils;
import io.testproject.addon.WebExtensions;
import io.testproject.sdk.drivers.ReportingDriver;
import io.testproject.sdk.drivers.web.RemoteWebDriver;
import io.testproject.sdk.interfaces.junit5.ExceptionsReporter;
import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import java.util.concurrent.TimeUnit;
import java.util.stream.Stream;

/**
 * This class was automatically generated by TestProject
 * Project: Quality Museum Project
 * Test: C547 İşlem Detayları
 * Generated by: Ahmet Furkan SIMSEK (furkan.simsek@qualitymuseum.com)
 * Generated on Mon Oct 03 15:39:19 GMT 2022.
 */
@DisplayName("C547 İşlem Detayları")
public class C547 implements ExceptionsReporter {
  public static WebDriver driver;

  @BeforeAll
  static void setup() throws Exception {
    driver = new RemoteWebDriver("wThDxIHw4zNaCydjAhcfe81WrQPYlMBFI7FPwUwV8M41", new ChromeOptions(), "Ahmet Furkan SIMSEK");
  }

  /**
   * In order to upload the test to TestProject need to un-comment @ArgumentsSource and set in comment the @MethodSource
   * @org.junit.jupiter.params.provider.ArgumentsSource(io.testproject.sdk.interfaces.parameterization.TestProjectParameterizer.class) */
  @DisplayName("C547 İşlem Detayları")
  @ParameterizedTest
  @MethodSource("provideParameters")
  void execute(String ApplicationURL, String currentDateTime, String oneWeekAgo, String tutarOnGrid,
      String tutarOnPrinPage, String provizyonTutari, String provizyonTutariWithRegex) throws
      Exception {
    // set timeout for driver actions (similar to step timeout)
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);
    By by;
    boolean booleanResult;
    MethodLogoutlogin methodlogoutlogin;
    String string;
    WebExtensions.GetNumbersOnly getNumbersOnly;
    WebExtensions.SelectOptionbyVisibleText selectOptionbyVisibleText;
    WebExtensions.ExecuteJavascript executeJavascript;
    StringUtils.StringContains stringContains;

    // 1. Run Method Logout&Login
    GeneratedUtils.sleep(500);
    methodlogoutlogin = new MethodLogoutlogin();
    methodlogoutlogin.ApplicationURL = ApplicationURL;
    methodlogoutlogin.userName = ProjectParameters.genelEmail;
    methodlogoutlogin.password = ProjectParameters.genelPassword;
    methodlogoutlogin.execute(driver);

    // 2. Move mouse to 'moveToIslemler'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("li[class='tag']");
    (new Actions(driver)).moveToElement(driver.findElement(by)).perform();

    // 3. Click 'İŞLEMLER1'
    GeneratedUtils.sleep(500);
    by = By.xpath("//a[. = 'İŞLEMLER']");
    driver.findElement(by).click();

    // 4. Click 'İŞLEM DETAYLARI LİSTESİ'
    GeneratedUtils.sleep(500);
    by = By.xpath("//a[. = 'İŞLEM DETAYLARI LİSTESİ']");
    driver.findElement(by).click();

    // 5. Type 'NT56154P0000033046' in 'ReferenceNumber'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#ReferenceNumber");
    driver.findElement(by).sendKeys("NT56154P0000033046");

    // 6. Move mouse to 'StartDate'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#StartDate");
    (new Actions(driver)).moveToElement(driver.findElement(by)).perform();

    // 7. Clear 'StartDate' contents
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#StartDate");
    driver.findElement(by).clear();

    // 8. Clear 'EndDate' contents
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#EndDate");
    driver.findElement(by).clear();

    // 9. Select options in 'VPosTransactionTypeId' with text '[NONE]'
    GeneratedUtils.sleep(500);
    selectOptionbyVisibleText = WebExtensions.selectOptionbyVisibleText("Satış");
    by = By.cssSelector("#VPosTransactionTypeId");
    selectOptionbyVisibleText = (WebExtensions.SelectOptionbyVisibleText)((ReportingDriver)driver).addons().execute(selectOptionbyVisibleText, by, -1);

    // 10. Click 'btnListele'
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(35000, TimeUnit.MILLISECONDS);
    GeneratedUtils.sleep(500);
    by = By.xpath("//button[. = 'Listele']");
    driver.findElement(by).click();
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 11. Is 'Refresh' visible?
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(35000, TimeUnit.MILLISECONDS);
    GeneratedUtils.sleep(500);
    by = By.cssSelector("a[class='t-icon t-refresh']");
    driver.findElement(by).isDisplayed();
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

    // 12. Get text from 'Tutar 1. Sıra'
    GeneratedUtils.sleep(500);
    by = By.xpath("//*[@id=\"VPosTransactionGrid\"]/table/tbody/tr[1]/td[4]");
    string = driver.findElement(by).getAttribute("value");
    tutarOnGrid = String.valueOf(string);

    // 13. Click 'islemDetaylari'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("img[src*='fugue/salesdetail.png']");
    driver.findElement(by).click();

    // 14. Get text from 'tutRoNpOPUP'
    /* Step is disabled
    GeneratedUtils.sleep(500);
    by = By.xpath("//div[normalize-space()='Tutar']//following-sibling::div");
    string = driver.findElement(by).getAttribute("value");
    Assertions.assertTrue(string.contains(tutarOnGrid));
    */
    // 15. Get text from 'referansOnPopup'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#details-table > div:nth-child(8) > div.colx2-right");
    string = driver.findElement(by).getAttribute("value");
    Assertions.assertTrue(string.startsWith("NT"));

    // 16. Does 'Başarılı İşlem' contain 'Başarılı İşlem'?
    GeneratedUtils.sleep(500);
    by = By.xpath("//span[. = 'Başarılı İşlem']");
    Assertions.assertTrue(driver.findElement(by).getText().contains("Başarılı İşlem"));

    // 17. Click 'Bilgilendirme Formları'
    GeneratedUtils.sleep(500);
    by = By.xpath("//a[. = 'Bilgilendirme Formları']");
    driver.findElement(by).click();

    // 18. Does 'Bilgilendirme Formları2' contain 'Bilgilendirme Formları'?
    GeneratedUtils.sleep(500);
    by = By.xpath("//h1[. = 'Bilgilendirme Formları']");
    Assertions.assertTrue(driver.findElement(by).getText().contains("Bilgilendirme Formları"));

    // 19. Click 'Kapat5'
    GeneratedUtils.sleep(500);
    by = By.xpath("//div/div/div[1]//button[. = 'Kapat']");
    driver.findElement(by).click();

    // 20. Click 'btnHpmDetaylari'
    GeneratedUtils.sleep(500);
    by = By.xpath("//li[2]/a/img");
    driver.findElement(by).click();

    // 21. Does 'Teslimat Bilgileri' contain 'Teslimat Bilgileri'?
    GeneratedUtils.sleep(500);
    by = By.xpath("//span[. = 'Teslimat Bilgileri']");
    Assertions.assertTrue(driver.findElement(by).getText().contains("Teslimat Bilgileri"));

    // 22. Does 'Kullanıcı Bilgileri' contain 'Kullanıcı Bilgileri'?
    GeneratedUtils.sleep(500);
    by = By.xpath("//div[. = 'Kullanıcı Bilgileri']");
    Assertions.assertTrue(driver.findElement(by).getText().contains("Kullanıcı Bilgileri"));

    // 23. Get text from 'txtFiyatFromHpmDetaylari'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#tab-hpm > div.task.no-task.with-legend > div.task-description > table > tbody > tr > td:nth-child(5)");
    string = driver.findElement(by).getAttribute("value");

    // 24. Click 'btnGenelBilgilerFromİslemDetaylari'
    GeneratedUtils.sleep(500);
    by = By.xpath("//div[1]/div/ul/li[1]//img");
    driver.findElement(by).click();

    // 25. Move mouse to 'btnTalimatFormuFromİslemDetaylari'
    GeneratedUtils.sleep(500);
    by = By.xpath("//form/div[1]/div[2]//div[2]");
    (new Actions(driver)).moveToElement(driver.findElement(by)).perform();

    // 26. Click 'btnGoruntuleFromİslemDetaylari'
    GeneratedUtils.sleep(500);
    by = By.cssSelector("#print");
    driver.findElement(by).click();

    // 27. Return only numbers from the text
    GeneratedUtils.sleep(500);
    getNumbersOnly = WebExtensions.getGetNumbersOnly();
    by = By.xpath("//*[@id=\"paymentFormContent\"]/table[2]/tbody/tr[6]/td[2]");
    getNumbersOnly = (WebExtensions.GetNumbersOnly)((ReportingDriver)driver).addons().execute(getNumbersOnly, by, -1);
    provizyonTutari = String.valueOf(getNumbersOnly.output);

    // 28. Is '{{tutarOnGrid}}' contains '{{provizyonTutari}}'?
    GeneratedUtils.sleep(500);
    stringContains = StringUtils.stringContains(tutarOnGrid,provizyonTutari,false,"true");
    stringContains = (StringUtils.StringContains)((ReportingDriver)driver).addons().execute(stringContains);

    // 29. Click 'kapatFromTalimatFormu'
    GeneratedUtils.sleep(500);
    by = By.xpath("//div[1]//*[name()='svg']");
    driver.findElement(by).click();

    // 30. Is 'Yazdır' is clickable?
    GeneratedUtils.sleep(500);
    by = By.xpath("//a[. = 'Yazdır']");
    (new WebDriverWait(driver, 15)).until(ExpectedConditions.elementToBeClickable(by));

    // 31. Click 'Yazdır'
    GeneratedUtils.sleep(500);
    by = By.xpath("//a[. = 'Yazdır']");
    driver.findElement(by).click();

    // 32. Pause for '5000'ms
    GeneratedUtils.sleep(500);
    driver.manage().timeouts().implicitlyWait(5000, TimeUnit.MILLISECONDS);

    // 33. Switch to window '1'
    GeneratedUtils.sleep(500);
    driver.switchTo().window(driver.getWindowHandles().toArray(new String[0])[1]);

    // 34. Execute JavaScript 'document.querySelector('print-preview-app').shadowRoot.querySelector('print-preview-sidebar').shadowRoot.querySelector('print-preview-button-strip').shadowRoot.querySelector('.cancel-button').click()' with arguments '[NONE]'
    // set step-specific timeout (will undo this at the end)
    driver.manage().timeouts().implicitlyWait(35000, TimeUnit.MILLISECONDS);
    GeneratedUtils.sleep(500);
    executeJavascript = WebExtensions.executeJavascript("document.querySelector('print-preview-app').shadowRoot.querySelector('print-preview-sidebar').shadowRoot.querySelector('print-preview-button-strip').shadowRoot.querySelector('.cancel-button').click()","");
    executeJavascript = (WebExtensions.ExecuteJavascript)((ReportingDriver)driver).addons().execute(executeJavascript);
    driver.manage().timeouts().implicitlyWait(15000, TimeUnit.MILLISECONDS);

  }

  @Override
  public ReportingDriver getDriver() {
    return (ReportingDriver) driver;
  }

  @AfterAll
  static void tearDown() {
    if (driver != null) {
      driver.quit();
    }
  }

  private static Stream provideParameters() throws Exception {
    return Stream.of(Arguments.of("https://otomasyon.netahsilatdemo.com/Account/LogOff","","","","","",""));
  }
}
